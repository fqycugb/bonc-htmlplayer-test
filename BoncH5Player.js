(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["BoncH5Player"] = factory();
	else
		root["BoncH5Player"] = factory();
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/objtree/index.js":
/*!***************************************!*\
  !*** ./node_modules/objtree/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* \n *\tBased on ObjTree.js from \n *\tYusuke Kawasaki http://www.kawa.net/ \n *\n*/\n\n// If running in Node.js, need package library 'xmldom'. \n// Provides the DOMParser object. Everything else stays the same!\nif (typeof window === 'undefined') {\n\tvar DOMParser = __webpack_require__(/*! xmldom */ \"./node_modules/xmldom/lib/dom-parser.js\").DOMParser;\t\n\n\tvar window = {};\n\twindow.DOMParser = true;\n}\n\nvar ObjTree;\n\n// ========================================================================\n//  XML.ObjTree -- XML source code from/to JavaScript object like E4X\n// ========================================================================\n\n//  constructor\n\nvar ObjTree = function () {\n    return this;\n};\n\n//  class variables\n\nObjTree.VERSION = \"0.24\";\n\n//  object prototype\n\nObjTree.prototype.xmlDecl = '<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\\n';\nObjTree.prototype.attr_prefix = '-';\nObjTree.prototype.overrideMimeType = 'text/xml';\n\n//  method: parseXML( xmlsource )\n\nObjTree.prototype.parseXML = function ( xml ) {\n    var root;\n    if ( window.DOMParser ) {\n        var xmldom = new DOMParser();\n//      xmldom.async = false;           // DOMParser is always sync-mode\n        var dom = xmldom.parseFromString( xml, \"application/xml\" );\n        if ( ! dom ) return;\n        root = dom.documentElement;\n    } else if ( window.ActiveXObject ) {\n        xmldom = new ActiveXObject('Microsoft.XMLDOM');\n        xmldom.async = false;\n        xmldom.loadXML( xml );\n        root = xmldom.documentElement;\n    }\n    if ( ! root ) return;\n    return this.parseDOM( root );\n};\n\n//  method: parseHTTP( url, options, callback )\n\nObjTree.prototype.parseHTTP = function ( url, options, callback ) {\n    var myopt = {};\n    for( var key in options ) {\n        myopt[key] = options[key];                  // copy object\n    }\n    if ( ! myopt.method ) {\n        if ( typeof(myopt.postBody) == \"undefined\" &&\n             typeof(myopt.postbody) == \"undefined\" &&\n             typeof(myopt.parameters) == \"undefined\" ) {\n            myopt.method = \"get\";\n        } else {\n            myopt.method = \"post\";\n        }\n    }\n    if ( callback ) {\n        myopt.asynchronous = true;                  // async-mode\n        var __this = this;\n        var __func = callback;\n        var __save = myopt.onComplete;\n        myopt.onComplete = function ( trans ) {\n            var tree;\n            if ( trans && trans.responseXML && trans.responseXML.documentElement ) {\n                tree = __this.parseDOM( trans.responseXML.documentElement );\n            } else if ( trans && trans.responseText ) {\n                tree = __this.parseXML( trans.responseText );\n            }\n            __func( tree, trans );\n            if ( __save ) __save( trans );\n        };\n    } else {\n        myopt.asynchronous = false;                 // sync-mode\n    }\n    var trans;\n    if ( typeof(HTTP) != \"undefined\" && HTTP.Request ) {\n        myopt.uri = url;\n        var req = new HTTP.Request( myopt );        // JSAN\n        if ( req ) trans = req.transport;\n    } else if ( typeof(Ajax) != \"undefined\" && Ajax.Request ) {\n        var req = new Ajax.Request( url, myopt );   // ptorotype.js\n        if ( req ) trans = req.transport;\n    }\n//  if ( trans && typeof(trans.overrideMimeType) != \"undefined\" ) {\n//      trans.overrideMimeType( this.overrideMimeType );\n//  }\n    if ( callback ) return trans;\n    if ( trans && trans.responseXML && trans.responseXML.documentElement ) {\n        return this.parseDOM( trans.responseXML.documentElement );\n    } else if ( trans && trans.responseText ) {\n        return this.parseXML( trans.responseText );\n    }\n}\n\n//  method: parseDOM( documentroot )\n\nObjTree.prototype.parseDOM = function ( root ) {\n    if ( ! root ) return;\n\n    this.__force_array = {};\n    if ( this.force_array ) {\n        for( var i=0; i<this.force_array.length; i++ ) {\n            this.__force_array[this.force_array[i]] = 1;\n        }\n    }\n\n    var json = this.parseElement( root );   // parse root node\n    if ( this.__force_array[root.nodeName] ) {\n        json = [ json ];\n    }\n    if ( root.nodeType != 11 ) {            // DOCUMENT_FRAGMENT_NODE\n        var tmp = {};\n        tmp[root.nodeName] = json;          // root nodeName\n        json = tmp;\n    }\n\n\tif ( this.soft_arrays ) {\n\t\tvar augmentObject = function ( obj ) {\n\t\t\tif ( typeof obj !== 'string' ) {\n\t\t\t\tfor ( var property in obj ) {\n\t\t\t\t\taugmentObject( obj[property] );\n\t\t\t\t}\n\t\t\t\tif ( ! obj.length ) {\n\t\t\t\t\tobj.length = 1; obj[0] = obj;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\taugmentObject( json );\n\t}\n\n    return json;\n};\n\n//  method: parseElement( element )\n\nObjTree.prototype.parseElement = function ( elem ) {\n    //  COMMENT_NODE\n    if ( elem.nodeType == 7 ) {\n        return;\n    }\n\n    //  TEXT_NODE CDATA_SECTION_NODE\n    if ( elem.nodeType == 3 || elem.nodeType == 4 ) {\n        var bool = elem.nodeValue.match( /[^\\x00-\\x20]/ );\n        if ( bool == null ) return;     // ignore white spaces\n        return elem.nodeValue;\n    }\n\n    var retval;\n    var cnt = {};\n\n    //  parse attributes\n    if ( elem.attributes && elem.attributes.length ) {\n        retval = {};\n        for ( var i=0; i<elem.attributes.length; i++ ) {\n            var key = elem.attributes[i].nodeName;\n            if ( typeof(key) != \"string\" ) continue;\n            var val = elem.attributes[i].nodeValue;\n            if ( ! val ) continue;\n            key = this.attr_prefix + key;\n            if ( typeof(cnt[key]) == \"undefined\" ) cnt[key] = 0;\n            cnt[key] ++;\n            this.addNode( retval, key, cnt[key], val );\n        }\n    }\n\n    //  parse child nodes (recursive)\n    if ( elem.childNodes && elem.childNodes.length ) {\n        var textonly = true;\n        if ( retval ) textonly = false;        // some attributes exists\n        for ( var i=0; i<elem.childNodes.length && textonly; i++ ) {\n            var ntype = elem.childNodes[i].nodeType;\n            if ( ntype == 3 || ntype == 4 ) continue;\n            textonly = false;\n        }\n        if ( textonly ) {\n            if ( ! retval ) retval = \"\";\n            for ( var i=0; i<elem.childNodes.length; i++ ) {\n                retval += elem.childNodes[i].nodeValue;\n            }\n        } else {\n            if ( ! retval ) retval = {};\n            for ( var i=0; i<elem.childNodes.length; i++ ) {\n                var key = elem.childNodes[i].nodeName;\n                if ( typeof(key) != \"string\" ) continue;\n                var val = this.parseElement( elem.childNodes[i] );\n                if ( ! val ) continue;\n                if ( typeof(cnt[key]) == \"undefined\" ) cnt[key] = 0;\n                cnt[key] ++;\n                this.addNode( retval, key, cnt[key], val );\n            }\n        }\n    }\n    return retval;\n};\n\n//  method: addNode( hash, key, count, value )\n\nObjTree.prototype.addNode = function ( hash, key, cnts, val ) {\n    if ( this.__force_array[key] ) {\n        if ( cnts == 1 ) hash[key] = [];\n        hash[key][hash[key].length] = val;      // push\n    } else if ( cnts == 1 ) {                   // 1st sibling\n        hash[key] = val;\n    } else if ( cnts == 2 ) {                   // 2nd sibling\n        hash[key] = [ hash[key], val ];\n    } else {                                    // 3rd sibling and more\n        hash[key][hash[key].length] = val;\n    }\n};\n\n//  method: writeXML( tree )\n\nObjTree.prototype.writeXML = function ( tree ) {\n    var xml = this.hash_to_xml( null, tree );\n    return this.xmlDecl + xml;\n};\n\n//  method: hash_to_xml( tagName, tree )\n\nObjTree.prototype.hash_to_xml = function ( name, tree ) {\n    var elem = [];\n    var attr = [];\n    for( var key in tree ) {\n        if ( ! tree.hasOwnProperty(key) ) continue;\n        var val = tree[key];\n        if ( key.charAt(0) != this.attr_prefix ) {\n            if ( typeof(val) == \"undefined\" || val == null ) {\n                elem[elem.length] = \"<\"+key+\" />\";\n            } else if ( typeof(val) == \"object\" && val.constructor == Array ) {\n                elem[elem.length] = this.array_to_xml( key, val );\n            } else if ( typeof(val) == \"object\" ) {\n                elem[elem.length] = this.hash_to_xml( key, val );\n            } else {\n                elem[elem.length] = this.scalar_to_xml( key, val );\n            }\n        } else {\n            attr[attr.length] = \" \"+(key.substring(1))+'=\"'+(this.xml_escape( val ))+'\"';\n        }\n    }\n    var jattr = attr.join(\"\");\n    var jelem = elem.join(\"\");\n    if ( typeof(name) == \"undefined\" || name == null ) {\n        // no tag\n    } else if ( elem.length > 0 ) {\n        if ( jelem.match( /\\n/ )) {\n            jelem = \"<\"+name+jattr+\">\\n\"+jelem+\"</\"+name+\">\\n\";\n        } else {\n            jelem = \"<\"+name+jattr+\">\"  +jelem+\"</\"+name+\">\\n\";\n        }\n    } else {\n        jelem = \"<\"+name+jattr+\" />\\n\";\n    }\n    return jelem;\n};\n\n//  method: array_to_xml( tagName, array )\n\nObjTree.prototype.array_to_xml = function ( name, array ) {\n    var out = [];\n    for( var i=0; i<array.length; i++ ) {\n        var val = array[i];\n        if ( typeof(val) == \"undefined\" || val == null ) {\n            out[out.length] = \"<\"+name+\" />\";\n        } else if ( typeof(val) == \"object\" && val.constructor == Array ) {\n            out[out.length] = this.array_to_xml( name, val );\n        } else if ( typeof(val) == \"object\" ) {\n            out[out.length] = this.hash_to_xml( name, val );\n        } else {\n            out[out.length] = this.scalar_to_xml( name, val );\n        }\n    }\n    return out.join(\"\");\n};\n\n//  method: scalar_to_xml( tagName, text )\n\nObjTree.prototype.scalar_to_xml = function ( name, text ) {\n    if ( name == \"#text\" ) {\n        return this.xml_escape(text);\n    } else {\n        return \"<\"+name+\">\"+this.xml_escape(text)+\"</\"+name+\">\\n\";\n    }\n};\n\n//  method: xml_escape( text )\n\nObjTree.prototype.xml_escape = function ( text ) {\n    return String(text).replace(/&/g,'&amp;').replace(/</g,'&lt;').replace(/>/g,'&gt;').replace(/\"/g,'&quot;');\n};\n\nif ( true && module.exports) {\n\tmodule.exports = ObjTree;\n}\n\n/*\n// ========================================================================\n\n=head1 NAME\n\nXML.ObjTree -- XML source code from/to JavaScript object like E4X\n\n=head1 SYNOPSIS\n\n    var xotree = new XML.ObjTree();\n    var tree1 = {\n        root: {\n            node: \"Hello, World!\"\n        }\n    };\n    var xml1 = xotree.writeXML( tree1 );        // object tree to XML source\n    alert( \"xml1: \"+xml1 );\n\n    var xml2 = '<?xml version=\"1.0\"?><response><error>0</error></response>';\n    var tree2 = xotree.parseXML( xml2 );        // XML source to object tree\n    alert( \"error: \"+tree2.response.error );\n\n=head1 DESCRIPTION\n\nXML.ObjTree class is a parser/generater between XML source code\nand JavaScript object like E4X, ECMAScript for XML.\nThis is a JavaScript version of the XML::TreePP module for Perl.\nThis also works as a wrapper for XMLHTTPRequest and successor to JKL.ParseXML class\nwhen this is used with prototype.js or JSAN's HTTP.Request class.\n\n=head2 JavaScript object tree format\n\nA sample XML source:\n\n    <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n    <family name=\"Kawasaki\">\n        <father>Yasuhisa</father>\n        <mother>Chizuko</mother>\n        <children>\n            <girl>Shiori</girl>\n            <boy>Yusuke</boy>\n            <boy>Kairi</boy>\n        </children>\n    </family>\n\nIts JavaScript object tree like JSON/E4X:\n\n    {\n        'family': {\n            '-name':    'Kawasaki',\n            'father':   'Yasuhisa',\n            'mother':   'Chizuko',\n            'children': {\n                'girl': 'Shiori'\n                'boy': [\n                    'Yusuke',\n                    'Kairi'\n                ]\n            }\n        }\n    };\n\nEach elements are parsed into objects:\n\n    tree.family.father;             # the father's given name.\n\nPrefix '-' is inserted before every attributes' name.\n\n    tree.family[\"-name\"];           # this family's family name\n\nA array is used because this family has two boys.\n\n    tree.family.children.boy[0];    # first boy's name\n    tree.family.children.boy[1];    # second boy's name\n    tree.family.children.girl;      # (girl has no other sisiters)\n\n=head1 METHODS\n\n=head2 xotree = new XML.ObjTree()\n\nThis constructor method returns a new XML.ObjTree object.\n\n=head2 xotree.force_array = [ \"rdf:li\", \"item\", \"-xmlns\" ];\n\nThis property allows you to specify a list of element names\nwhich should always be forced into an array representation.\nThe default value is null, it means that context of the elements\nwill determine to make array or to keep it scalar.\n\n=head2 xotree.attr_prefix = '@';\n\nThis property allows you to specify a prefix character which is\ninserted before each attribute names.\nInstead of default prefix '-', E4X-style prefix '@' is also available.\nThe default character is '-'.\nOr set '@' to access attribute values like E4X, ECMAScript for XML.\nThe length of attr_prefix must be just one character and not be empty.\n\n=head2 xotree.xmlDecl = '';\n\nThis library generates an XML declaration on writing an XML code per default.\nThis property forces to change or leave it empty.\n\n=head2 tree = xotree.parseXML( xmlsrc );\n\nThis method loads an XML document using the supplied string\nand returns its JavaScript object converted.\n\n=head2 tree = xotree.parseDOM( domnode );\n\nThis method parses a DOM tree (ex. responseXML.documentElement)\nand returns its JavaScript object converted.\n\n=head2 tree = xotree.parseHTTP( url, options );\n\nThis method loads a XML file from remote web server\nand returns its JavaScript object converted.\nXMLHTTPRequest's synchronous mode is always used.\nThis mode blocks the process until the response is completed.\n\nFirst argument is a XML file's URL\nwhich must exist in the same domain as parent HTML file's.\nCross-domain loading is not available for security reasons.\n\nSecond argument is options' object which can contains some parameters:\nmethod, postBody, parameters, onLoading, etc.\n\nThis method requires JSAN's L<HTTP.Request> class or prototype.js's Ajax.Request class.\n\n=head2 xotree.parseHTTP( url, options, callback );\n\nIf a callback function is set as third argument,\nXMLHTTPRequest's asynchronous mode is used.\n\nThis mode calls a callback function with XML file's JavaScript object converted\nafter the response is completed.\n\n=head2 xmlsrc = xotree.writeXML( tree );\n\nThis method parses a JavaScript object tree\nand returns its XML source generated.\n\n=head1 EXAMPLES\n\n=head2 Text node and attributes\n\nIf a element has both of a text node and attributes\nor both of a text node and other child nodes,\ntext node's value is moved to a special node named \"#text\".\n\n    var xotree = new XML.ObjTree();\n    var xmlsrc = '<span class=\"author\">Kawasaki Yusuke</span>';\n    var tree = xotree.parseXML( xmlsrc );\n    var class = tree.span[\"-class\"];        # attribute\n    var name  = tree.span[\"#text\"];         # text node\n\n=head2 parseHTTP() method with HTTP-GET and sync-mode\n\nHTTP/Request.js or prototype.js must be loaded before calling this method.\n\n    var xotree = new XML.ObjTree();\n    var url = \"http://example.com/index.html\";\n    var tree = xotree.parseHTTP( url );\n    xotree.attr_prefix = '@';                   // E4X-style\n    alert( tree.html[\"@lang\"] );\n\nThis code shows C<lang=\"\"> attribute from a X-HTML source code.\n\n=head2 parseHTTP() method with HTTP-POST and async-mode\n\nThird argument is a callback function which is called on onComplete.\n\n    var xotree = new XML.ObjTree();\n    var url = \"http://example.com/mt-tb.cgi\";\n    var opts = {\n        postBody:   \"title=...&excerpt=...&url=...&blog_name=...\"\n    };\n    var func = function ( tree ) {\n        alert( tree.response.error );\n    };\n    xotree.parseHTTP( url, opts, func );\n\nThis code send a trackback ping and shows its response code.\n\n=head2 Simple RSS reader\n\nThis is a RSS reader which loads RDF file and displays all items.\n\n    var xotree = new XML.ObjTree();\n    xotree.force_array = [ \"rdf:li\", \"item\" ];\n    var url = \"http://example.com/news-rdf.xml\";\n    var func = function( tree ) {\n        var elem = document.getElementById(\"rss_here\");\n        for( var i=0; i<tree[\"rdf:RDF\"].item.length; i++ ) {\n            var divtag = document.createElement( \"div\" );\n            var atag = document.createElement( \"a\" );\n            atag.href = tree[\"rdf:RDF\"].item[i].link;\n            var title = tree[\"rdf:RDF\"].item[i].title;\n            var tnode = document.createTextNode( title );\n            atag.appendChild( tnode );\n            divtag.appendChild( atag );\n            elem.appendChild( divtag );\n        }\n    };\n    xotree.parseHTTP( url, {}, func );\n\n=head2  XML-RPC using writeXML, prototype.js and parseDOM\n\nIf you wish to use prototype.js's Ajax.Request class by yourself:\n\n    var xotree = new XML.ObjTree();\n    var reqtree = {\n        methodCall: {\n            methodName: \"weblogUpdates.ping\",\n            params: {\n                param: [\n                    { value: \"Kawa.net xp top page\" },  // 1st param\n                    { value: \"http://www.kawa.net/\" }   // 2nd param\n                ]\n            }\n        }\n    };\n    var reqxml = xotree.writeXML( reqtree );       // JS-Object to XML code\n    var url = \"http://example.com/xmlrpc\";\n    var func = function( req ) {\n        var resdom = req.responseXML.documentElement;\n        xotree.force_array = [ \"member\" ];\n        var restree = xotree.parseDOM( resdom );   // XML-DOM to JS-Object\n        alert( restree.methodResponse.params.param.value.struct.member[0].value.string );\n    };\n    var opt = {\n        method:         \"post\",\n        postBody:       reqxml,\n        asynchronous:   true,\n        onComplete:     func\n    };\n    new Ajax.Request( url, opt );\n\n=head1 AUTHOR\n\nYusuke Kawasaki http://www.kawa.net/\n\n=head1 COPYRIGHT AND LICENSE\n\nCopyright (c) 2005-2006 Yusuke Kawasaki. All rights reserved.\nThis program is free software; you can redistribute it and/or\nmodify it under the Artistic license. Or whatever license I choose,\nwhich I will do instead of keeping this documentation like it is.\n\n=cut\n// ========================================================================\n*/\n\n\n//# sourceURL=webpack://BoncH5Player/./node_modules/objtree/index.js?");

/***/ }),

/***/ "./node_modules/xmldom/lib/dom-parser.js":
/*!***********************************************!*\
  !*** ./node_modules/xmldom/lib/dom-parser.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("function DOMParser(options){\n\tthis.options = options ||{locator:{}};\n}\n\nDOMParser.prototype.parseFromString = function(source,mimeType){\n\tvar options = this.options;\n\tvar sax =  new XMLReader();\n\tvar domBuilder = options.domBuilder || new DOMHandler();//contentHandler and LexicalHandler\n\tvar errorHandler = options.errorHandler;\n\tvar locator = options.locator;\n\tvar defaultNSMap = options.xmlns||{};\n\tvar isHTML = /\\/x?html?$/.test(mimeType);//mimeType.toLowerCase().indexOf('html') > -1;\n  \tvar entityMap = isHTML?htmlEntity.entityMap:{'lt':'<','gt':'>','amp':'&','quot':'\"','apos':\"'\"};\n\tif(locator){\n\t\tdomBuilder.setDocumentLocator(locator)\n\t}\n\n\tsax.errorHandler = buildErrorHandler(errorHandler,domBuilder,locator);\n\tsax.domBuilder = options.domBuilder || domBuilder;\n\tif(isHTML){\n\t\tdefaultNSMap['']= 'http://www.w3.org/1999/xhtml';\n\t}\n\tdefaultNSMap.xml = defaultNSMap.xml || 'http://www.w3.org/XML/1998/namespace';\n\tif(source){\n\t\tsax.parse(source,defaultNSMap,entityMap);\n\t}else{\n\t\tsax.errorHandler.error(\"invalid doc source\");\n\t}\n\treturn domBuilder.doc;\n}\nfunction buildErrorHandler(errorImpl,domBuilder,locator){\n\tif(!errorImpl){\n\t\tif(domBuilder instanceof DOMHandler){\n\t\t\treturn domBuilder;\n\t\t}\n\t\terrorImpl = domBuilder ;\n\t}\n\tvar errorHandler = {}\n\tvar isCallback = errorImpl instanceof Function;\n\tlocator = locator||{}\n\tfunction build(key){\n\t\tvar fn = errorImpl[key];\n\t\tif(!fn && isCallback){\n\t\t\tfn = errorImpl.length == 2?function(msg){errorImpl(key,msg)}:errorImpl;\n\t\t}\n\t\terrorHandler[key] = fn && function(msg){\n\t\t\tfn('[xmldom '+key+']\\t'+msg+_locator(locator));\n\t\t}||function(){};\n\t}\n\tbuild('warning');\n\tbuild('error');\n\tbuild('fatalError');\n\treturn errorHandler;\n}\n\n//console.log('#\\n\\n\\n\\n\\n\\n\\n####')\n/**\n * +ContentHandler+ErrorHandler\n * +LexicalHandler+EntityResolver2\n * -DeclHandler-DTDHandler\n *\n * DefaultHandler:EntityResolver, DTDHandler, ContentHandler, ErrorHandler\n * DefaultHandler2:DefaultHandler,LexicalHandler, DeclHandler, EntityResolver2\n * @link http://www.saxproject.org/apidoc/org/xml/sax/helpers/DefaultHandler.html\n */\nfunction DOMHandler() {\n    this.cdata = false;\n}\nfunction position(locator,node){\n\tnode.lineNumber = locator.lineNumber;\n\tnode.columnNumber = locator.columnNumber;\n}\n/**\n * @see org.xml.sax.ContentHandler#startDocument\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ContentHandler.html\n */\nDOMHandler.prototype = {\n\tstartDocument : function() {\n    \tthis.doc = new DOMImplementation().createDocument(null, null, null);\n    \tif (this.locator) {\n        \tthis.doc.documentURI = this.locator.systemId;\n    \t}\n\t},\n\tstartElement:function(namespaceURI, localName, qName, attrs) {\n\t\tvar doc = this.doc;\n\t    var el = doc.createElementNS(namespaceURI, qName||localName);\n\t    var len = attrs.length;\n\t    appendElement(this, el);\n\t    this.currentElement = el;\n\n\t\tthis.locator && position(this.locator,el)\n\t    for (var i = 0 ; i < len; i++) {\n\t        var namespaceURI = attrs.getURI(i);\n\t        var value = attrs.getValue(i);\n\t        var qName = attrs.getQName(i);\n\t\t\tvar attr = doc.createAttributeNS(namespaceURI, qName);\n\t\t\tthis.locator &&position(attrs.getLocator(i),attr);\n\t\t\tattr.value = attr.nodeValue = value;\n\t\t\tel.setAttributeNode(attr)\n\t    }\n\t},\n\tendElement:function(namespaceURI, localName, qName) {\n\t\tvar current = this.currentElement\n\t\tvar tagName = current.tagName;\n\t\tthis.currentElement = current.parentNode;\n\t},\n\tstartPrefixMapping:function(prefix, uri) {\n\t},\n\tendPrefixMapping:function(prefix) {\n\t},\n\tprocessingInstruction:function(target, data) {\n\t    var ins = this.doc.createProcessingInstruction(target, data);\n\t    this.locator && position(this.locator,ins)\n\t    appendElement(this, ins);\n\t},\n\tignorableWhitespace:function(ch, start, length) {\n\t},\n\tcharacters:function(chars, start, length) {\n\t\tchars = _toString.apply(this,arguments)\n\t\t//console.log(chars)\n\t\tif(chars){\n\t\t\tif (this.cdata) {\n\t\t\t\tvar charNode = this.doc.createCDATASection(chars);\n\t\t\t} else {\n\t\t\t\tvar charNode = this.doc.createTextNode(chars);\n\t\t\t}\n\t\t\tif(this.currentElement){\n\t\t\t\tthis.currentElement.appendChild(charNode);\n\t\t\t}else if(/^\\s*$/.test(chars)){\n\t\t\t\tthis.doc.appendChild(charNode);\n\t\t\t\t//process xml\n\t\t\t}\n\t\t\tthis.locator && position(this.locator,charNode)\n\t\t}\n\t},\n\tskippedEntity:function(name) {\n\t},\n\tendDocument:function() {\n\t\tthis.doc.normalize();\n\t},\n\tsetDocumentLocator:function (locator) {\n\t    if(this.locator = locator){// && !('lineNumber' in locator)){\n\t    \tlocator.lineNumber = 0;\n\t    }\n\t},\n\t//LexicalHandler\n\tcomment:function(chars, start, length) {\n\t\tchars = _toString.apply(this,arguments)\n\t    var comm = this.doc.createComment(chars);\n\t    this.locator && position(this.locator,comm)\n\t    appendElement(this, comm);\n\t},\n\n\tstartCDATA:function() {\n\t    //used in characters() methods\n\t    this.cdata = true;\n\t},\n\tendCDATA:function() {\n\t    this.cdata = false;\n\t},\n\n\tstartDTD:function(name, publicId, systemId) {\n\t\tvar impl = this.doc.implementation;\n\t    if (impl && impl.createDocumentType) {\n\t        var dt = impl.createDocumentType(name, publicId, systemId);\n\t        this.locator && position(this.locator,dt)\n\t        appendElement(this, dt);\n\t    }\n\t},\n\t/**\n\t * @see org.xml.sax.ErrorHandler\n\t * @link http://www.saxproject.org/apidoc/org/xml/sax/ErrorHandler.html\n\t */\n\twarning:function(error) {\n\t\tconsole.warn('[xmldom warning]\\t'+error,_locator(this.locator));\n\t},\n\terror:function(error) {\n\t\tconsole.error('[xmldom error]\\t'+error,_locator(this.locator));\n\t},\n\tfatalError:function(error) {\n\t\tconsole.error('[xmldom fatalError]\\t'+error,_locator(this.locator));\n\t    throw error;\n\t}\n}\nfunction _locator(l){\n\tif(l){\n\t\treturn '\\n@'+(l.systemId ||'')+'#[line:'+l.lineNumber+',col:'+l.columnNumber+']'\n\t}\n}\nfunction _toString(chars,start,length){\n\tif(typeof chars == 'string'){\n\t\treturn chars.substr(start,length)\n\t}else{//java sax connect width xmldom on rhino(what about: \"? && !(chars instanceof String)\")\n\t\tif(chars.length >= start+length || start){\n\t\t\treturn new java.lang.String(chars,start,length)+'';\n\t\t}\n\t\treturn chars;\n\t}\n}\n\n/*\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/LexicalHandler.html\n * used method of org.xml.sax.ext.LexicalHandler:\n *  #comment(chars, start, length)\n *  #startCDATA()\n *  #endCDATA()\n *  #startDTD(name, publicId, systemId)\n *\n *\n * IGNORED method of org.xml.sax.ext.LexicalHandler:\n *  #endDTD()\n *  #startEntity(name)\n *  #endEntity(name)\n *\n *\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/DeclHandler.html\n * IGNORED method of org.xml.sax.ext.DeclHandler\n * \t#attributeDecl(eName, aName, type, mode, value)\n *  #elementDecl(name, model)\n *  #externalEntityDecl(name, publicId, systemId)\n *  #internalEntityDecl(name, value)\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/EntityResolver2.html\n * IGNORED method of org.xml.sax.EntityResolver2\n *  #resolveEntity(String name,String publicId,String baseURI,String systemId)\n *  #resolveEntity(publicId, systemId)\n *  #getExternalSubset(name, baseURI)\n * @link http://www.saxproject.org/apidoc/org/xml/sax/DTDHandler.html\n * IGNORED method of org.xml.sax.DTDHandler\n *  #notationDecl(name, publicId, systemId) {};\n *  #unparsedEntityDecl(name, publicId, systemId, notationName) {};\n */\n\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){\n\tDOMHandler.prototype[key] = function(){return null}\n})\n\n/* Private static helpers treated below as private instance methods, so don't need to add these to the public API; we might use a Relator to also get rid of non-standard public properties */\nfunction appendElement (hander,node) {\n    if (!hander.currentElement) {\n        hander.doc.appendChild(node);\n    } else {\n        hander.currentElement.appendChild(node);\n    }\n}//appendChild and setAttributeNS are preformance key\n\n//if(typeof require == 'function'){\nvar htmlEntity = __webpack_require__(/*! ./entities */ \"./node_modules/xmldom/lib/entities.js\");\nvar XMLReader = __webpack_require__(/*! ./sax */ \"./node_modules/xmldom/lib/sax.js\").XMLReader;\nvar DOMImplementation = exports.DOMImplementation = __webpack_require__(/*! ./dom */ \"./node_modules/xmldom/lib/dom.js\").DOMImplementation;\nexports.XMLSerializer = __webpack_require__(/*! ./dom */ \"./node_modules/xmldom/lib/dom.js\").XMLSerializer ;\nexports.DOMParser = DOMParser;\n//}\n\n\n//# sourceURL=webpack://BoncH5Player/./node_modules/xmldom/lib/dom-parser.js?");

/***/ }),

/***/ "./node_modules/xmldom/lib/dom.js":
/*!****************************************!*\
  !*** ./node_modules/xmldom/lib/dom.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*\n * DOM Level 2\n * Object DOMException\n * @see http://www.w3.org/TR/REC-DOM-Level-1/ecma-script-language-binding.html\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html\n */\n\nfunction copy(src,dest){\n\tfor(var p in src){\n\t\tdest[p] = src[p];\n\t}\n}\n/**\n^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*((?:.*\\{\\s*?[\\r\\n][\\s\\S]*?^})|\\S.*?(?=[;\\r\\n]));?\n^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*(\\S.*?(?=[;\\r\\n]));?\n */\nfunction _extends(Class,Super){\n\tvar pt = Class.prototype;\n\tif(!(pt instanceof Super)){\n\t\tfunction t(){};\n\t\tt.prototype = Super.prototype;\n\t\tt = new t();\n\t\tcopy(pt,t);\n\t\tClass.prototype = pt = t;\n\t}\n\tif(pt.constructor != Class){\n\t\tif(typeof Class != 'function'){\n\t\t\tconsole.error(\"unknow Class:\"+Class)\n\t\t}\n\t\tpt.constructor = Class\n\t}\n}\nvar htmlns = 'http://www.w3.org/1999/xhtml' ;\n// Node Types\nvar NodeType = {}\nvar ELEMENT_NODE                = NodeType.ELEMENT_NODE                = 1;\nvar ATTRIBUTE_NODE              = NodeType.ATTRIBUTE_NODE              = 2;\nvar TEXT_NODE                   = NodeType.TEXT_NODE                   = 3;\nvar CDATA_SECTION_NODE          = NodeType.CDATA_SECTION_NODE          = 4;\nvar ENTITY_REFERENCE_NODE       = NodeType.ENTITY_REFERENCE_NODE       = 5;\nvar ENTITY_NODE                 = NodeType.ENTITY_NODE                 = 6;\nvar PROCESSING_INSTRUCTION_NODE = NodeType.PROCESSING_INSTRUCTION_NODE = 7;\nvar COMMENT_NODE                = NodeType.COMMENT_NODE                = 8;\nvar DOCUMENT_NODE               = NodeType.DOCUMENT_NODE               = 9;\nvar DOCUMENT_TYPE_NODE          = NodeType.DOCUMENT_TYPE_NODE          = 10;\nvar DOCUMENT_FRAGMENT_NODE      = NodeType.DOCUMENT_FRAGMENT_NODE      = 11;\nvar NOTATION_NODE               = NodeType.NOTATION_NODE               = 12;\n\n// ExceptionCode\nvar ExceptionCode = {}\nvar ExceptionMessage = {};\nvar INDEX_SIZE_ERR              = ExceptionCode.INDEX_SIZE_ERR              = ((ExceptionMessage[1]=\"Index size error\"),1);\nvar DOMSTRING_SIZE_ERR          = ExceptionCode.DOMSTRING_SIZE_ERR          = ((ExceptionMessage[2]=\"DOMString size error\"),2);\nvar HIERARCHY_REQUEST_ERR       = ExceptionCode.HIERARCHY_REQUEST_ERR       = ((ExceptionMessage[3]=\"Hierarchy request error\"),3);\nvar WRONG_DOCUMENT_ERR          = ExceptionCode.WRONG_DOCUMENT_ERR          = ((ExceptionMessage[4]=\"Wrong document\"),4);\nvar INVALID_CHARACTER_ERR       = ExceptionCode.INVALID_CHARACTER_ERR       = ((ExceptionMessage[5]=\"Invalid character\"),5);\nvar NO_DATA_ALLOWED_ERR         = ExceptionCode.NO_DATA_ALLOWED_ERR         = ((ExceptionMessage[6]=\"No data allowed\"),6);\nvar NO_MODIFICATION_ALLOWED_ERR = ExceptionCode.NO_MODIFICATION_ALLOWED_ERR = ((ExceptionMessage[7]=\"No modification allowed\"),7);\nvar NOT_FOUND_ERR               = ExceptionCode.NOT_FOUND_ERR               = ((ExceptionMessage[8]=\"Not found\"),8);\nvar NOT_SUPPORTED_ERR           = ExceptionCode.NOT_SUPPORTED_ERR           = ((ExceptionMessage[9]=\"Not supported\"),9);\nvar INUSE_ATTRIBUTE_ERR         = ExceptionCode.INUSE_ATTRIBUTE_ERR         = ((ExceptionMessage[10]=\"Attribute in use\"),10);\n//level2\nvar INVALID_STATE_ERR        \t= ExceptionCode.INVALID_STATE_ERR        \t= ((ExceptionMessage[11]=\"Invalid state\"),11);\nvar SYNTAX_ERR               \t= ExceptionCode.SYNTAX_ERR               \t= ((ExceptionMessage[12]=\"Syntax error\"),12);\nvar INVALID_MODIFICATION_ERR \t= ExceptionCode.INVALID_MODIFICATION_ERR \t= ((ExceptionMessage[13]=\"Invalid modification\"),13);\nvar NAMESPACE_ERR            \t= ExceptionCode.NAMESPACE_ERR           \t= ((ExceptionMessage[14]=\"Invalid namespace\"),14);\nvar INVALID_ACCESS_ERR       \t= ExceptionCode.INVALID_ACCESS_ERR      \t= ((ExceptionMessage[15]=\"Invalid access\"),15);\n\n\nfunction DOMException(code, message) {\n\tif(message instanceof Error){\n\t\tvar error = message;\n\t}else{\n\t\terror = this;\n\t\tError.call(this, ExceptionMessage[code]);\n\t\tthis.message = ExceptionMessage[code];\n\t\tif(Error.captureStackTrace) Error.captureStackTrace(this, DOMException);\n\t}\n\terror.code = code;\n\tif(message) this.message = this.message + \": \" + message;\n\treturn error;\n};\nDOMException.prototype = Error.prototype;\ncopy(ExceptionCode,DOMException)\n/**\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-536297177\n * The NodeList interface provides the abstraction of an ordered collection of nodes, without defining or constraining how this collection is implemented. NodeList objects in the DOM are live.\n * The items in the NodeList are accessible via an integral index, starting from 0.\n */\nfunction NodeList() {\n};\nNodeList.prototype = {\n\t/**\n\t * The number of nodes in the list. The range of valid child node indices is 0 to length-1 inclusive.\n\t * @standard level1\n\t */\n\tlength:0, \n\t/**\n\t * Returns the indexth item in the collection. If index is greater than or equal to the number of nodes in the list, this returns null.\n\t * @standard level1\n\t * @param index  unsigned long \n\t *   Index into the collection.\n\t * @return Node\n\t * \tThe node at the indexth position in the NodeList, or null if that is not a valid index. \n\t */\n\titem: function(index) {\n\t\treturn this[index] || null;\n\t},\n\ttoString:function(isHTML,nodeFilter){\n\t\tfor(var buf = [], i = 0;i<this.length;i++){\n\t\t\tserializeToString(this[i],buf,isHTML,nodeFilter);\n\t\t}\n\t\treturn buf.join('');\n\t}\n};\nfunction LiveNodeList(node,refresh){\n\tthis._node = node;\n\tthis._refresh = refresh\n\t_updateLiveList(this);\n}\nfunction _updateLiveList(list){\n\tvar inc = list._node._inc || list._node.ownerDocument._inc;\n\tif(list._inc != inc){\n\t\tvar ls = list._refresh(list._node);\n\t\t//console.log(ls.length)\n\t\t__set__(list,'length',ls.length);\n\t\tcopy(ls,list);\n\t\tlist._inc = inc;\n\t}\n}\nLiveNodeList.prototype.item = function(i){\n\t_updateLiveList(this);\n\treturn this[i];\n}\n\n_extends(LiveNodeList,NodeList);\n/**\n * \n * Objects implementing the NamedNodeMap interface are used to represent collections of nodes that can be accessed by name. Note that NamedNodeMap does not inherit from NodeList; NamedNodeMaps are not maintained in any particular order. Objects contained in an object implementing NamedNodeMap may also be accessed by an ordinal index, but this is simply to allow convenient enumeration of the contents of a NamedNodeMap, and does not imply that the DOM specifies an order to these Nodes.\n * NamedNodeMap objects in the DOM are live.\n * used for attributes or DocumentType entities \n */\nfunction NamedNodeMap() {\n};\n\nfunction _findNodeIndex(list,node){\n\tvar i = list.length;\n\twhile(i--){\n\t\tif(list[i] === node){return i}\n\t}\n}\n\nfunction _addNamedNode(el,list,newAttr,oldAttr){\n\tif(oldAttr){\n\t\tlist[_findNodeIndex(list,oldAttr)] = newAttr;\n\t}else{\n\t\tlist[list.length++] = newAttr;\n\t}\n\tif(el){\n\t\tnewAttr.ownerElement = el;\n\t\tvar doc = el.ownerDocument;\n\t\tif(doc){\n\t\t\toldAttr && _onRemoveAttribute(doc,el,oldAttr);\n\t\t\t_onAddAttribute(doc,el,newAttr);\n\t\t}\n\t}\n}\nfunction _removeNamedNode(el,list,attr){\n\t//console.log('remove attr:'+attr)\n\tvar i = _findNodeIndex(list,attr);\n\tif(i>=0){\n\t\tvar lastIndex = list.length-1\n\t\twhile(i<lastIndex){\n\t\t\tlist[i] = list[++i]\n\t\t}\n\t\tlist.length = lastIndex;\n\t\tif(el){\n\t\t\tvar doc = el.ownerDocument;\n\t\t\tif(doc){\n\t\t\t\t_onRemoveAttribute(doc,el,attr);\n\t\t\t\tattr.ownerElement = null;\n\t\t\t}\n\t\t}\n\t}else{\n\t\tthrow DOMException(NOT_FOUND_ERR,new Error(el.tagName+'@'+attr))\n\t}\n}\nNamedNodeMap.prototype = {\n\tlength:0,\n\titem:NodeList.prototype.item,\n\tgetNamedItem: function(key) {\n//\t\tif(key.indexOf(':')>0 || key == 'xmlns'){\n//\t\t\treturn null;\n//\t\t}\n\t\t//console.log()\n\t\tvar i = this.length;\n\t\twhile(i--){\n\t\t\tvar attr = this[i];\n\t\t\t//console.log(attr.nodeName,key)\n\t\t\tif(attr.nodeName == key){\n\t\t\t\treturn attr;\n\t\t\t}\n\t\t}\n\t},\n\tsetNamedItem: function(attr) {\n\t\tvar el = attr.ownerElement;\n\t\tif(el && el!=this._ownerElement){\n\t\t\tthrow new DOMException(INUSE_ATTRIBUTE_ERR);\n\t\t}\n\t\tvar oldAttr = this.getNamedItem(attr.nodeName);\n\t\t_addNamedNode(this._ownerElement,this,attr,oldAttr);\n\t\treturn oldAttr;\n\t},\n\t/* returns Node */\n\tsetNamedItemNS: function(attr) {// raises: WRONG_DOCUMENT_ERR,NO_MODIFICATION_ALLOWED_ERR,INUSE_ATTRIBUTE_ERR\n\t\tvar el = attr.ownerElement, oldAttr;\n\t\tif(el && el!=this._ownerElement){\n\t\t\tthrow new DOMException(INUSE_ATTRIBUTE_ERR);\n\t\t}\n\t\toldAttr = this.getNamedItemNS(attr.namespaceURI,attr.localName);\n\t\t_addNamedNode(this._ownerElement,this,attr,oldAttr);\n\t\treturn oldAttr;\n\t},\n\n\t/* returns Node */\n\tremoveNamedItem: function(key) {\n\t\tvar attr = this.getNamedItem(key);\n\t\t_removeNamedNode(this._ownerElement,this,attr);\n\t\treturn attr;\n\t\t\n\t\t\n\t},// raises: NOT_FOUND_ERR,NO_MODIFICATION_ALLOWED_ERR\n\t\n\t//for level2\n\tremoveNamedItemNS:function(namespaceURI,localName){\n\t\tvar attr = this.getNamedItemNS(namespaceURI,localName);\n\t\t_removeNamedNode(this._ownerElement,this,attr);\n\t\treturn attr;\n\t},\n\tgetNamedItemNS: function(namespaceURI, localName) {\n\t\tvar i = this.length;\n\t\twhile(i--){\n\t\t\tvar node = this[i];\n\t\t\tif(node.localName == localName && node.namespaceURI == namespaceURI){\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n};\n/**\n * @see http://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-102161490\n */\nfunction DOMImplementation(/* Object */ features) {\n\tthis._features = {};\n\tif (features) {\n\t\tfor (var feature in features) {\n\t\t\t this._features = features[feature];\n\t\t}\n\t}\n};\n\nDOMImplementation.prototype = {\n\thasFeature: function(/* string */ feature, /* string */ version) {\n\t\tvar versions = this._features[feature.toLowerCase()];\n\t\tif (versions && (!version || version in versions)) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t},\n\t// Introduced in DOM Level 2:\n\tcreateDocument:function(namespaceURI,  qualifiedName, doctype){// raises:INVALID_CHARACTER_ERR,NAMESPACE_ERR,WRONG_DOCUMENT_ERR\n\t\tvar doc = new Document();\n\t\tdoc.implementation = this;\n\t\tdoc.childNodes = new NodeList();\n\t\tdoc.doctype = doctype;\n\t\tif(doctype){\n\t\t\tdoc.appendChild(doctype);\n\t\t}\n\t\tif(qualifiedName){\n\t\t\tvar root = doc.createElementNS(namespaceURI,qualifiedName);\n\t\t\tdoc.appendChild(root);\n\t\t}\n\t\treturn doc;\n\t},\n\t// Introduced in DOM Level 2:\n\tcreateDocumentType:function(qualifiedName, publicId, systemId){// raises:INVALID_CHARACTER_ERR,NAMESPACE_ERR\n\t\tvar node = new DocumentType();\n\t\tnode.name = qualifiedName;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.publicId = publicId;\n\t\tnode.systemId = systemId;\n\t\t// Introduced in DOM Level 2:\n\t\t//readonly attribute DOMString        internalSubset;\n\t\t\n\t\t//TODO:..\n\t\t//  readonly attribute NamedNodeMap     entities;\n\t\t//  readonly attribute NamedNodeMap     notations;\n\t\treturn node;\n\t}\n};\n\n\n/**\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-1950641247\n */\n\nfunction Node() {\n};\n\nNode.prototype = {\n\tfirstChild : null,\n\tlastChild : null,\n\tpreviousSibling : null,\n\tnextSibling : null,\n\tattributes : null,\n\tparentNode : null,\n\tchildNodes : null,\n\townerDocument : null,\n\tnodeValue : null,\n\tnamespaceURI : null,\n\tprefix : null,\n\tlocalName : null,\n\t// Modified in DOM Level 2:\n\tinsertBefore:function(newChild, refChild){//raises \n\t\treturn _insertBefore(this,newChild,refChild);\n\t},\n\treplaceChild:function(newChild, oldChild){//raises \n\t\tthis.insertBefore(newChild,oldChild);\n\t\tif(oldChild){\n\t\t\tthis.removeChild(oldChild);\n\t\t}\n\t},\n\tremoveChild:function(oldChild){\n\t\treturn _removeChild(this,oldChild);\n\t},\n\tappendChild:function(newChild){\n\t\treturn this.insertBefore(newChild,null);\n\t},\n\thasChildNodes:function(){\n\t\treturn this.firstChild != null;\n\t},\n\tcloneNode:function(deep){\n\t\treturn cloneNode(this.ownerDocument||this,this,deep);\n\t},\n\t// Modified in DOM Level 2:\n\tnormalize:function(){\n\t\tvar child = this.firstChild;\n\t\twhile(child){\n\t\t\tvar next = child.nextSibling;\n\t\t\tif(next && next.nodeType == TEXT_NODE && child.nodeType == TEXT_NODE){\n\t\t\t\tthis.removeChild(next);\n\t\t\t\tchild.appendData(next.data);\n\t\t\t}else{\n\t\t\t\tchild.normalize();\n\t\t\t\tchild = next;\n\t\t\t}\n\t\t}\n\t},\n  \t// Introduced in DOM Level 2:\n\tisSupported:function(feature, version){\n\t\treturn this.ownerDocument.implementation.hasFeature(feature,version);\n\t},\n    // Introduced in DOM Level 2:\n    hasAttributes:function(){\n    \treturn this.attributes.length>0;\n    },\n    lookupPrefix:function(namespaceURI){\n    \tvar el = this;\n    \twhile(el){\n    \t\tvar map = el._nsMap;\n    \t\t//console.dir(map)\n    \t\tif(map){\n    \t\t\tfor(var n in map){\n    \t\t\t\tif(map[n] == namespaceURI){\n    \t\t\t\t\treturn n;\n    \t\t\t\t}\n    \t\t\t}\n    \t\t}\n    \t\tel = el.nodeType == ATTRIBUTE_NODE?el.ownerDocument : el.parentNode;\n    \t}\n    \treturn null;\n    },\n    // Introduced in DOM Level 3:\n    lookupNamespaceURI:function(prefix){\n    \tvar el = this;\n    \twhile(el){\n    \t\tvar map = el._nsMap;\n    \t\t//console.dir(map)\n    \t\tif(map){\n    \t\t\tif(prefix in map){\n    \t\t\t\treturn map[prefix] ;\n    \t\t\t}\n    \t\t}\n    \t\tel = el.nodeType == ATTRIBUTE_NODE?el.ownerDocument : el.parentNode;\n    \t}\n    \treturn null;\n    },\n    // Introduced in DOM Level 3:\n    isDefaultNamespace:function(namespaceURI){\n    \tvar prefix = this.lookupPrefix(namespaceURI);\n    \treturn prefix == null;\n    }\n};\n\n\nfunction _xmlEncoder(c){\n\treturn c == '<' && '&lt;' ||\n         c == '>' && '&gt;' ||\n         c == '&' && '&amp;' ||\n         c == '\"' && '&quot;' ||\n         '&#'+c.charCodeAt()+';'\n}\n\n\ncopy(NodeType,Node);\ncopy(NodeType,Node.prototype);\n\n/**\n * @param callback return true for continue,false for break\n * @return boolean true: break visit;\n */\nfunction _visitNode(node,callback){\n\tif(callback(node)){\n\t\treturn true;\n\t}\n\tif(node = node.firstChild){\n\t\tdo{\n\t\t\tif(_visitNode(node,callback)){return true}\n        }while(node=node.nextSibling)\n    }\n}\n\n\n\nfunction Document(){\n}\nfunction _onAddAttribute(doc,el,newAttr){\n\tdoc && doc._inc++;\n\tvar ns = newAttr.namespaceURI ;\n\tif(ns == 'http://www.w3.org/2000/xmlns/'){\n\t\t//update namespace\n\t\tel._nsMap[newAttr.prefix?newAttr.localName:''] = newAttr.value\n\t}\n}\nfunction _onRemoveAttribute(doc,el,newAttr,remove){\n\tdoc && doc._inc++;\n\tvar ns = newAttr.namespaceURI ;\n\tif(ns == 'http://www.w3.org/2000/xmlns/'){\n\t\t//update namespace\n\t\tdelete el._nsMap[newAttr.prefix?newAttr.localName:'']\n\t}\n}\nfunction _onUpdateChild(doc,el,newChild){\n\tif(doc && doc._inc){\n\t\tdoc._inc++;\n\t\t//update childNodes\n\t\tvar cs = el.childNodes;\n\t\tif(newChild){\n\t\t\tcs[cs.length++] = newChild;\n\t\t}else{\n\t\t\t//console.log(1)\n\t\t\tvar child = el.firstChild;\n\t\t\tvar i = 0;\n\t\t\twhile(child){\n\t\t\t\tcs[i++] = child;\n\t\t\t\tchild =child.nextSibling;\n\t\t\t}\n\t\t\tcs.length = i;\n\t\t}\n\t}\n}\n\n/**\n * attributes;\n * children;\n * \n * writeable properties:\n * nodeValue,Attr:value,CharacterData:data\n * prefix\n */\nfunction _removeChild(parentNode,child){\n\tvar previous = child.previousSibling;\n\tvar next = child.nextSibling;\n\tif(previous){\n\t\tprevious.nextSibling = next;\n\t}else{\n\t\tparentNode.firstChild = next\n\t}\n\tif(next){\n\t\tnext.previousSibling = previous;\n\t}else{\n\t\tparentNode.lastChild = previous;\n\t}\n\t_onUpdateChild(parentNode.ownerDocument,parentNode);\n\treturn child;\n}\n/**\n * preformance key(refChild == null)\n */\nfunction _insertBefore(parentNode,newChild,nextChild){\n\tvar cp = newChild.parentNode;\n\tif(cp){\n\t\tcp.removeChild(newChild);//remove and update\n\t}\n\tif(newChild.nodeType === DOCUMENT_FRAGMENT_NODE){\n\t\tvar newFirst = newChild.firstChild;\n\t\tif (newFirst == null) {\n\t\t\treturn newChild;\n\t\t}\n\t\tvar newLast = newChild.lastChild;\n\t}else{\n\t\tnewFirst = newLast = newChild;\n\t}\n\tvar pre = nextChild ? nextChild.previousSibling : parentNode.lastChild;\n\n\tnewFirst.previousSibling = pre;\n\tnewLast.nextSibling = nextChild;\n\t\n\t\n\tif(pre){\n\t\tpre.nextSibling = newFirst;\n\t}else{\n\t\tparentNode.firstChild = newFirst;\n\t}\n\tif(nextChild == null){\n\t\tparentNode.lastChild = newLast;\n\t}else{\n\t\tnextChild.previousSibling = newLast;\n\t}\n\tdo{\n\t\tnewFirst.parentNode = parentNode;\n\t}while(newFirst !== newLast && (newFirst= newFirst.nextSibling))\n\t_onUpdateChild(parentNode.ownerDocument||parentNode,parentNode);\n\t//console.log(parentNode.lastChild.nextSibling == null)\n\tif (newChild.nodeType == DOCUMENT_FRAGMENT_NODE) {\n\t\tnewChild.firstChild = newChild.lastChild = null;\n\t}\n\treturn newChild;\n}\nfunction _appendSingleChild(parentNode,newChild){\n\tvar cp = newChild.parentNode;\n\tif(cp){\n\t\tvar pre = parentNode.lastChild;\n\t\tcp.removeChild(newChild);//remove and update\n\t\tvar pre = parentNode.lastChild;\n\t}\n\tvar pre = parentNode.lastChild;\n\tnewChild.parentNode = parentNode;\n\tnewChild.previousSibling = pre;\n\tnewChild.nextSibling = null;\n\tif(pre){\n\t\tpre.nextSibling = newChild;\n\t}else{\n\t\tparentNode.firstChild = newChild;\n\t}\n\tparentNode.lastChild = newChild;\n\t_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);\n\treturn newChild;\n\t//console.log(\"__aa\",parentNode.lastChild.nextSibling == null)\n}\nDocument.prototype = {\n\t//implementation : null,\n\tnodeName :  '#document',\n\tnodeType :  DOCUMENT_NODE,\n\tdoctype :  null,\n\tdocumentElement :  null,\n\t_inc : 1,\n\t\n\tinsertBefore :  function(newChild, refChild){//raises \n\t\tif(newChild.nodeType == DOCUMENT_FRAGMENT_NODE){\n\t\t\tvar child = newChild.firstChild;\n\t\t\twhile(child){\n\t\t\t\tvar next = child.nextSibling;\n\t\t\t\tthis.insertBefore(child,refChild);\n\t\t\t\tchild = next;\n\t\t\t}\n\t\t\treturn newChild;\n\t\t}\n\t\tif(this.documentElement == null && newChild.nodeType == ELEMENT_NODE){\n\t\t\tthis.documentElement = newChild;\n\t\t}\n\t\t\n\t\treturn _insertBefore(this,newChild,refChild),(newChild.ownerDocument = this),newChild;\n\t},\n\tremoveChild :  function(oldChild){\n\t\tif(this.documentElement == oldChild){\n\t\t\tthis.documentElement = null;\n\t\t}\n\t\treturn _removeChild(this,oldChild);\n\t},\n\t// Introduced in DOM Level 2:\n\timportNode : function(importedNode,deep){\n\t\treturn importNode(this,importedNode,deep);\n\t},\n\t// Introduced in DOM Level 2:\n\tgetElementById :\tfunction(id){\n\t\tvar rtv = null;\n\t\t_visitNode(this.documentElement,function(node){\n\t\t\tif(node.nodeType == ELEMENT_NODE){\n\t\t\t\tif(node.getAttribute('id') == id){\n\t\t\t\t\trtv = node;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\treturn rtv;\n\t},\n\t\n\tgetElementsByClassName: function(className) {\n\t\tconst pattern = new RegExp(`(^|\\\\s)${className}(\\\\s|$)`);\n\t\treturn new LiveNodeList(this, base => {\n\t\t\tvar ls = [];\n\t\t\t_visitNode(base.documentElement, node => {\n\t\t\t\tif(node !== base && node.nodeType == ELEMENT_NODE) {\n\t\t\t\t\tif(pattern.test(node.getAttribute('class'))) {\n\t\t\t\t\t\tls.push(node);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ls;\n\t\t});\n\t},\n\t\n\t//document factory method:\n\tcreateElement :\tfunction(tagName){\n\t\tvar node = new Element();\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = tagName;\n\t\tnode.tagName = tagName;\n\t\tnode.childNodes = new NodeList();\n\t\tvar attrs\t= node.attributes = new NamedNodeMap();\n\t\tattrs._ownerElement = node;\n\t\treturn node;\n\t},\n\tcreateDocumentFragment :\tfunction(){\n\t\tvar node = new DocumentFragment();\n\t\tnode.ownerDocument = this;\n\t\tnode.childNodes = new NodeList();\n\t\treturn node;\n\t},\n\tcreateTextNode :\tfunction(data){\n\t\tvar node = new Text();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateComment :\tfunction(data){\n\t\tvar node = new Comment();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateCDATASection :\tfunction(data){\n\t\tvar node = new CDATASection();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateProcessingInstruction :\tfunction(target,data){\n\t\tvar node = new ProcessingInstruction();\n\t\tnode.ownerDocument = this;\n\t\tnode.tagName = node.target = target;\n\t\tnode.nodeValue= node.data = data;\n\t\treturn node;\n\t},\n\tcreateAttribute :\tfunction(name){\n\t\tvar node = new Attr();\n\t\tnode.ownerDocument\t= this;\n\t\tnode.name = name;\n\t\tnode.nodeName\t= name;\n\t\tnode.localName = name;\n\t\tnode.specified = true;\n\t\treturn node;\n\t},\n\tcreateEntityReference :\tfunction(name){\n\t\tvar node = new EntityReference();\n\t\tnode.ownerDocument\t= this;\n\t\tnode.nodeName\t= name;\n\t\treturn node;\n\t},\n\t// Introduced in DOM Level 2:\n\tcreateElementNS :\tfunction(namespaceURI,qualifiedName){\n\t\tvar node = new Element();\n\t\tvar pl = qualifiedName.split(':');\n\t\tvar attrs\t= node.attributes = new NamedNodeMap();\n\t\tnode.childNodes = new NodeList();\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.tagName = qualifiedName;\n\t\tnode.namespaceURI = namespaceURI;\n\t\tif(pl.length == 2){\n\t\t\tnode.prefix = pl[0];\n\t\t\tnode.localName = pl[1];\n\t\t}else{\n\t\t\t//el.prefix = null;\n\t\t\tnode.localName = qualifiedName;\n\t\t}\n\t\tattrs._ownerElement = node;\n\t\treturn node;\n\t},\n\t// Introduced in DOM Level 2:\n\tcreateAttributeNS :\tfunction(namespaceURI,qualifiedName){\n\t\tvar node = new Attr();\n\t\tvar pl = qualifiedName.split(':');\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.name = qualifiedName;\n\t\tnode.namespaceURI = namespaceURI;\n\t\tnode.specified = true;\n\t\tif(pl.length == 2){\n\t\t\tnode.prefix = pl[0];\n\t\t\tnode.localName = pl[1];\n\t\t}else{\n\t\t\t//el.prefix = null;\n\t\t\tnode.localName = qualifiedName;\n\t\t}\n\t\treturn node;\n\t}\n};\n_extends(Document,Node);\n\n\nfunction Element() {\n\tthis._nsMap = {};\n};\nElement.prototype = {\n\tnodeType : ELEMENT_NODE,\n\thasAttribute : function(name){\n\t\treturn this.getAttributeNode(name)!=null;\n\t},\n\tgetAttribute : function(name){\n\t\tvar attr = this.getAttributeNode(name);\n\t\treturn attr && attr.value || '';\n\t},\n\tgetAttributeNode : function(name){\n\t\treturn this.attributes.getNamedItem(name);\n\t},\n\tsetAttribute : function(name, value){\n\t\tvar attr = this.ownerDocument.createAttribute(name);\n\t\tattr.value = attr.nodeValue = \"\" + value;\n\t\tthis.setAttributeNode(attr)\n\t},\n\tremoveAttribute : function(name){\n\t\tvar attr = this.getAttributeNode(name)\n\t\tattr && this.removeAttributeNode(attr);\n\t},\n\t\n\t//four real opeartion method\n\tappendChild:function(newChild){\n\t\tif(newChild.nodeType === DOCUMENT_FRAGMENT_NODE){\n\t\t\treturn this.insertBefore(newChild,null);\n\t\t}else{\n\t\t\treturn _appendSingleChild(this,newChild);\n\t\t}\n\t},\n\tsetAttributeNode : function(newAttr){\n\t\treturn this.attributes.setNamedItem(newAttr);\n\t},\n\tsetAttributeNodeNS : function(newAttr){\n\t\treturn this.attributes.setNamedItemNS(newAttr);\n\t},\n\tremoveAttributeNode : function(oldAttr){\n\t\t//console.log(this == oldAttr.ownerElement)\n\t\treturn this.attributes.removeNamedItem(oldAttr.nodeName);\n\t},\n\t//get real attribute name,and remove it by removeAttributeNode\n\tremoveAttributeNS : function(namespaceURI, localName){\n\t\tvar old = this.getAttributeNodeNS(namespaceURI, localName);\n\t\told && this.removeAttributeNode(old);\n\t},\n\t\n\thasAttributeNS : function(namespaceURI, localName){\n\t\treturn this.getAttributeNodeNS(namespaceURI, localName)!=null;\n\t},\n\tgetAttributeNS : function(namespaceURI, localName){\n\t\tvar attr = this.getAttributeNodeNS(namespaceURI, localName);\n\t\treturn attr && attr.value || '';\n\t},\n\tsetAttributeNS : function(namespaceURI, qualifiedName, value){\n\t\tvar attr = this.ownerDocument.createAttributeNS(namespaceURI, qualifiedName);\n\t\tattr.value = attr.nodeValue = \"\" + value;\n\t\tthis.setAttributeNode(attr)\n\t},\n\tgetAttributeNodeNS : function(namespaceURI, localName){\n\t\treturn this.attributes.getNamedItemNS(namespaceURI, localName);\n\t},\n\t\n\tgetElementsByTagName : function(tagName){\n\t\treturn new LiveNodeList(this,function(base){\n\t\t\tvar ls = [];\n\t\t\t_visitNode(base,function(node){\n\t\t\t\tif(node !== base && node.nodeType == ELEMENT_NODE && (tagName === '*' || node.tagName == tagName)){\n\t\t\t\t\tls.push(node);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ls;\n\t\t});\n\t},\n\tgetElementsByTagNameNS : function(namespaceURI, localName){\n\t\treturn new LiveNodeList(this,function(base){\n\t\t\tvar ls = [];\n\t\t\t_visitNode(base,function(node){\n\t\t\t\tif(node !== base && node.nodeType === ELEMENT_NODE && (namespaceURI === '*' || node.namespaceURI === namespaceURI) && (localName === '*' || node.localName == localName)){\n\t\t\t\t\tls.push(node);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ls;\n\t\t\t\n\t\t});\n\t}\n};\nDocument.prototype.getElementsByTagName = Element.prototype.getElementsByTagName;\nDocument.prototype.getElementsByTagNameNS = Element.prototype.getElementsByTagNameNS;\n\n\n_extends(Element,Node);\nfunction Attr() {\n};\nAttr.prototype.nodeType = ATTRIBUTE_NODE;\n_extends(Attr,Node);\n\n\nfunction CharacterData() {\n};\nCharacterData.prototype = {\n\tdata : '',\n\tsubstringData : function(offset, count) {\n\t\treturn this.data.substring(offset, offset+count);\n\t},\n\tappendData: function(text) {\n\t\ttext = this.data+text;\n\t\tthis.nodeValue = this.data = text;\n\t\tthis.length = text.length;\n\t},\n\tinsertData: function(offset,text) {\n\t\tthis.replaceData(offset,0,text);\n\t\n\t},\n\tappendChild:function(newChild){\n\t\tthrow new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])\n\t},\n\tdeleteData: function(offset, count) {\n\t\tthis.replaceData(offset,count,\"\");\n\t},\n\treplaceData: function(offset, count, text) {\n\t\tvar start = this.data.substring(0,offset);\n\t\tvar end = this.data.substring(offset+count);\n\t\ttext = start + text + end;\n\t\tthis.nodeValue = this.data = text;\n\t\tthis.length = text.length;\n\t}\n}\n_extends(CharacterData,Node);\nfunction Text() {\n};\nText.prototype = {\n\tnodeName : \"#text\",\n\tnodeType : TEXT_NODE,\n\tsplitText : function(offset) {\n\t\tvar text = this.data;\n\t\tvar newText = text.substring(offset);\n\t\ttext = text.substring(0, offset);\n\t\tthis.data = this.nodeValue = text;\n\t\tthis.length = text.length;\n\t\tvar newNode = this.ownerDocument.createTextNode(newText);\n\t\tif(this.parentNode){\n\t\t\tthis.parentNode.insertBefore(newNode, this.nextSibling);\n\t\t}\n\t\treturn newNode;\n\t}\n}\n_extends(Text,CharacterData);\nfunction Comment() {\n};\nComment.prototype = {\n\tnodeName : \"#comment\",\n\tnodeType : COMMENT_NODE\n}\n_extends(Comment,CharacterData);\n\nfunction CDATASection() {\n};\nCDATASection.prototype = {\n\tnodeName : \"#cdata-section\",\n\tnodeType : CDATA_SECTION_NODE\n}\n_extends(CDATASection,CharacterData);\n\n\nfunction DocumentType() {\n};\nDocumentType.prototype.nodeType = DOCUMENT_TYPE_NODE;\n_extends(DocumentType,Node);\n\nfunction Notation() {\n};\nNotation.prototype.nodeType = NOTATION_NODE;\n_extends(Notation,Node);\n\nfunction Entity() {\n};\nEntity.prototype.nodeType = ENTITY_NODE;\n_extends(Entity,Node);\n\nfunction EntityReference() {\n};\nEntityReference.prototype.nodeType = ENTITY_REFERENCE_NODE;\n_extends(EntityReference,Node);\n\nfunction DocumentFragment() {\n};\nDocumentFragment.prototype.nodeName =\t\"#document-fragment\";\nDocumentFragment.prototype.nodeType =\tDOCUMENT_FRAGMENT_NODE;\n_extends(DocumentFragment,Node);\n\n\nfunction ProcessingInstruction() {\n}\nProcessingInstruction.prototype.nodeType = PROCESSING_INSTRUCTION_NODE;\n_extends(ProcessingInstruction,Node);\nfunction XMLSerializer(){}\nXMLSerializer.prototype.serializeToString = function(node,isHtml,nodeFilter){\n\treturn nodeSerializeToString.call(node,isHtml,nodeFilter);\n}\nNode.prototype.toString = nodeSerializeToString;\nfunction nodeSerializeToString(isHtml,nodeFilter){\n\tvar buf = [];\n\tvar refNode = this.nodeType == 9 && this.documentElement || this;\n\tvar prefix = refNode.prefix;\n\tvar uri = refNode.namespaceURI;\n\t\n\tif(uri && prefix == null){\n\t\t//console.log(prefix)\n\t\tvar prefix = refNode.lookupPrefix(uri);\n\t\tif(prefix == null){\n\t\t\t//isHTML = true;\n\t\t\tvar visibleNamespaces=[\n\t\t\t{namespace:uri,prefix:null}\n\t\t\t//{namespace:uri,prefix:''}\n\t\t\t]\n\t\t}\n\t}\n\tserializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);\n\t//console.log('###',this.nodeType,uri,prefix,buf.join(''))\n\treturn buf.join('');\n}\nfunction needNamespaceDefine(node,isHTML, visibleNamespaces) {\n\tvar prefix = node.prefix||'';\n\tvar uri = node.namespaceURI;\n\tif (!prefix && !uri){\n\t\treturn false;\n\t}\n\tif (prefix === \"xml\" && uri === \"http://www.w3.org/XML/1998/namespace\" \n\t\t|| uri == 'http://www.w3.org/2000/xmlns/'){\n\t\treturn false;\n\t}\n\t\n\tvar i = visibleNamespaces.length \n\t//console.log('@@@@',node.tagName,prefix,uri,visibleNamespaces)\n\twhile (i--) {\n\t\tvar ns = visibleNamespaces[i];\n\t\t// get namespace prefix\n\t\t//console.log(node.nodeType,node.tagName,ns.prefix,prefix)\n\t\tif (ns.prefix == prefix){\n\t\t\treturn ns.namespace != uri;\n\t\t}\n\t}\n\t//console.log(isHTML,uri,prefix=='')\n\t//if(isHTML && prefix ==null && uri == 'http://www.w3.org/1999/xhtml'){\n\t//\treturn false;\n\t//}\n\t//node.flag = '11111'\n\t//console.error(3,true,node.flag,node.prefix,node.namespaceURI)\n\treturn true;\n}\nfunction serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){\n\tif(nodeFilter){\n\t\tnode = nodeFilter(node);\n\t\tif(node){\n\t\t\tif(typeof node == 'string'){\n\t\t\t\tbuf.push(node);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}else{\n\t\t\treturn;\n\t\t}\n\t\t//buf.sort.apply(attrs, attributeSorter);\n\t}\n\tswitch(node.nodeType){\n\tcase ELEMENT_NODE:\n\t\tif (!visibleNamespaces) visibleNamespaces = [];\n\t\tvar startVisibleNamespaces = visibleNamespaces.length;\n\t\tvar attrs = node.attributes;\n\t\tvar len = attrs.length;\n\t\tvar child = node.firstChild;\n\t\tvar nodeName = node.tagName;\n\t\t\n\t\tisHTML =  (htmlns === node.namespaceURI) ||isHTML \n\t\tbuf.push('<',nodeName);\n\t\t\n\t\t\n\t\t\n\t\tfor(var i=0;i<len;i++){\n\t\t\t// add namespaces for attributes\n\t\t\tvar attr = attrs.item(i);\n\t\t\tif (attr.prefix == 'xmlns') {\n\t\t\t\tvisibleNamespaces.push({ prefix: attr.localName, namespace: attr.value });\n\t\t\t}else if(attr.nodeName == 'xmlns'){\n\t\t\t\tvisibleNamespaces.push({ prefix: '', namespace: attr.value });\n\t\t\t}\n\t\t}\n\t\tfor(var i=0;i<len;i++){\n\t\t\tvar attr = attrs.item(i);\n\t\t\tif (needNamespaceDefine(attr,isHTML, visibleNamespaces)) {\n\t\t\t\tvar prefix = attr.prefix||'';\n\t\t\t\tvar uri = attr.namespaceURI;\n\t\t\t\tvar ns = prefix ? ' xmlns:' + prefix : \" xmlns\";\n\t\t\t\tbuf.push(ns, '=\"' , uri , '\"');\n\t\t\t\tvisibleNamespaces.push({ prefix: prefix, namespace:uri });\n\t\t\t}\n\t\t\tserializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces);\n\t\t}\n\t\t// add namespace for current node\t\t\n\t\tif (needNamespaceDefine(node,isHTML, visibleNamespaces)) {\n\t\t\tvar prefix = node.prefix||'';\n\t\t\tvar uri = node.namespaceURI;\n\t\t\tvar ns = prefix ? ' xmlns:' + prefix : \" xmlns\";\n\t\t\tbuf.push(ns, '=\"' , uri , '\"');\n\t\t\tvisibleNamespaces.push({ prefix: prefix, namespace:uri });\n\t\t}\n\t\t\n\t\tif(child || isHTML && !/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){\n\t\t\tbuf.push('>');\n\t\t\t//if is cdata child node\n\t\t\tif(isHTML && /^script$/i.test(nodeName)){\n\t\t\t\twhile(child){\n\t\t\t\t\tif(child.data){\n\t\t\t\t\t\tbuf.push(child.data);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tserializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);\n\t\t\t\t\t}\n\t\t\t\t\tchild = child.nextSibling;\n\t\t\t\t}\n\t\t\t}else\n\t\t\t{\n\t\t\t\twhile(child){\n\t\t\t\t\tserializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);\n\t\t\t\t\tchild = child.nextSibling;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbuf.push('</',nodeName,'>');\n\t\t}else{\n\t\t\tbuf.push('/>');\n\t\t}\n\t\t// remove added visible namespaces\n\t\t//visibleNamespaces.length = startVisibleNamespaces;\n\t\treturn;\n\tcase DOCUMENT_NODE:\n\tcase DOCUMENT_FRAGMENT_NODE:\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tserializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t\treturn;\n\tcase ATTRIBUTE_NODE:\n\t\treturn buf.push(' ',node.name,'=\"',node.value.replace(/[<&\"]/g,_xmlEncoder),'\"');\n\tcase TEXT_NODE:\n\t\treturn buf.push(node.data.replace(/[<&]/g,_xmlEncoder));\n\tcase CDATA_SECTION_NODE:\n\t\treturn buf.push( '<![CDATA[',node.data,']]>');\n\tcase COMMENT_NODE:\n\t\treturn buf.push( \"<!--\",node.data,\"-->\");\n\tcase DOCUMENT_TYPE_NODE:\n\t\tvar pubid = node.publicId;\n\t\tvar sysid = node.systemId;\n\t\tbuf.push('<!DOCTYPE ',node.name);\n\t\tif(pubid){\n\t\t\tbuf.push(' PUBLIC \"',pubid);\n\t\t\tif (sysid && sysid!='.') {\n\t\t\t\tbuf.push( '\" \"',sysid);\n\t\t\t}\n\t\t\tbuf.push('\">');\n\t\t}else if(sysid && sysid!='.'){\n\t\t\tbuf.push(' SYSTEM \"',sysid,'\">');\n\t\t}else{\n\t\t\tvar sub = node.internalSubset;\n\t\t\tif(sub){\n\t\t\t\tbuf.push(\" [\",sub,\"]\");\n\t\t\t}\n\t\t\tbuf.push(\">\");\n\t\t}\n\t\treturn;\n\tcase PROCESSING_INSTRUCTION_NODE:\n\t\treturn buf.push( \"<?\",node.target,\" \",node.data,\"?>\");\n\tcase ENTITY_REFERENCE_NODE:\n\t\treturn buf.push( '&',node.nodeName,';');\n\t//case ENTITY_NODE:\n\t//case NOTATION_NODE:\n\tdefault:\n\t\tbuf.push('??',node.nodeName);\n\t}\n}\nfunction importNode(doc,node,deep){\n\tvar node2;\n\tswitch (node.nodeType) {\n\tcase ELEMENT_NODE:\n\t\tnode2 = node.cloneNode(false);\n\t\tnode2.ownerDocument = doc;\n\t\t//var attrs = node2.attributes;\n\t\t//var len = attrs.length;\n\t\t//for(var i=0;i<len;i++){\n\t\t\t//node2.setAttributeNodeNS(importNode(doc,attrs.item(i),deep));\n\t\t//}\n\tcase DOCUMENT_FRAGMENT_NODE:\n\t\tbreak;\n\tcase ATTRIBUTE_NODE:\n\t\tdeep = true;\n\t\tbreak;\n\t//case ENTITY_REFERENCE_NODE:\n\t//case PROCESSING_INSTRUCTION_NODE:\n\t////case TEXT_NODE:\n\t//case CDATA_SECTION_NODE:\n\t//case COMMENT_NODE:\n\t//\tdeep = false;\n\t//\tbreak;\n\t//case DOCUMENT_NODE:\n\t//case DOCUMENT_TYPE_NODE:\n\t//cannot be imported.\n\t//case ENTITY_NODE:\n\t//case NOTATION_NODE：\n\t//can not hit in level3\n\t//default:throw e;\n\t}\n\tif(!node2){\n\t\tnode2 = node.cloneNode(false);//false\n\t}\n\tnode2.ownerDocument = doc;\n\tnode2.parentNode = null;\n\tif(deep){\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tnode2.appendChild(importNode(doc,child,deep));\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t}\n\treturn node2;\n}\n//\n//var _relationMap = {firstChild:1,lastChild:1,previousSibling:1,nextSibling:1,\n//\t\t\t\t\tattributes:1,childNodes:1,parentNode:1,documentElement:1,doctype,};\nfunction cloneNode(doc,node,deep){\n\tvar node2 = new node.constructor();\n\tfor(var n in node){\n\t\tvar v = node[n];\n\t\tif(typeof v != 'object' ){\n\t\t\tif(v != node2[n]){\n\t\t\t\tnode2[n] = v;\n\t\t\t}\n\t\t}\n\t}\n\tif(node.childNodes){\n\t\tnode2.childNodes = new NodeList();\n\t}\n\tnode2.ownerDocument = doc;\n\tswitch (node2.nodeType) {\n\tcase ELEMENT_NODE:\n\t\tvar attrs\t= node.attributes;\n\t\tvar attrs2\t= node2.attributes = new NamedNodeMap();\n\t\tvar len = attrs.length\n\t\tattrs2._ownerElement = node2;\n\t\tfor(var i=0;i<len;i++){\n\t\t\tnode2.setAttributeNode(cloneNode(doc,attrs.item(i),true));\n\t\t}\n\t\tbreak;;\n\tcase ATTRIBUTE_NODE:\n\t\tdeep = true;\n\t}\n\tif(deep){\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tnode2.appendChild(cloneNode(doc,child,deep));\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t}\n\treturn node2;\n}\n\nfunction __set__(object,key,value){\n\tobject[key] = value\n}\n//do dynamic\ntry{\n\tif(Object.defineProperty){\n\t\tObject.defineProperty(LiveNodeList.prototype,'length',{\n\t\t\tget:function(){\n\t\t\t\t_updateLiveList(this);\n\t\t\t\treturn this.$$length;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(Node.prototype,'textContent',{\n\t\t\tget:function(){\n\t\t\t\treturn getTextContent(this);\n\t\t\t},\n\t\t\tset:function(data){\n\t\t\t\tswitch(this.nodeType){\n\t\t\t\tcase ELEMENT_NODE:\n\t\t\t\tcase DOCUMENT_FRAGMENT_NODE:\n\t\t\t\t\twhile(this.firstChild){\n\t\t\t\t\t\tthis.removeChild(this.firstChild);\n\t\t\t\t\t}\n\t\t\t\t\tif(data || String(data)){\n\t\t\t\t\t\tthis.appendChild(this.ownerDocument.createTextNode(data));\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\t//TODO:\n\t\t\t\t\tthis.data = data;\n\t\t\t\t\tthis.value = data;\n\t\t\t\t\tthis.nodeValue = data;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\t\n\t\tfunction getTextContent(node){\n\t\t\tswitch(node.nodeType){\n\t\t\tcase ELEMENT_NODE:\n\t\t\tcase DOCUMENT_FRAGMENT_NODE:\n\t\t\t\tvar buf = [];\n\t\t\t\tnode = node.firstChild;\n\t\t\t\twhile(node){\n\t\t\t\t\tif(node.nodeType!==7 && node.nodeType !==8){\n\t\t\t\t\t\tbuf.push(getTextContent(node));\n\t\t\t\t\t}\n\t\t\t\t\tnode = node.nextSibling;\n\t\t\t\t}\n\t\t\t\treturn buf.join('');\n\t\t\tdefault:\n\t\t\t\treturn node.nodeValue;\n\t\t\t}\n\t\t}\n\t\t__set__ = function(object,key,value){\n\t\t\t//console.log(value)\n\t\t\tobject['$$'+key] = value\n\t\t}\n\t}\n}catch(e){//ie8\n}\n\n//if(typeof require == 'function'){\n\texports.Node = Node;\n\texports.DOMImplementation = DOMImplementation;\n\texports.XMLSerializer = XMLSerializer;\n//}\n\n\n//# sourceURL=webpack://BoncH5Player/./node_modules/xmldom/lib/dom.js?");

/***/ }),

/***/ "./node_modules/xmldom/lib/entities.js":
/*!*********************************************!*\
  !*** ./node_modules/xmldom/lib/entities.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("exports.entityMap = {\n       lt: '<',\n       gt: '>',\n       amp: '&',\n       quot: '\"',\n       apos: \"'\",\n       Agrave: \"À\",\n       Aacute: \"Á\",\n       Acirc: \"Â\",\n       Atilde: \"Ã\",\n       Auml: \"Ä\",\n       auml: \"ä\",\n       Aring: \"Å\",\n       aring: \"å\",\n       AElig: \"Æ\",\n       Ccedil: \"Ç\",\n       Egrave: \"È\",\n       Eacute: \"É\",\n       Ecirc: \"Ê\",\n       Euml: \"Ë\",\n       Igrave: \"Ì\",\n       Iacute: \"Í\",\n       Icirc: \"Î\",\n       Iuml: \"Ï\",\n       ETH: \"Ð\",\n       Ntilde: \"Ñ\",\n       Ograve: \"Ò\",\n       Oacute: \"Ó\",\n       Ocirc: \"Ô\",\n       Otilde: \"Õ\",\n       Ouml: \"Ö\",\n       ouml: \"ö\",\n       Oslash: \"Ø\",\n       Ugrave: \"Ù\",\n       Uacute: \"Ú\",\n       Ucirc: \"Û\",\n       Uuml: \"Ü\",\n       Yacute: \"Ý\",\n       THORN: \"Þ\",\n       szlig: \"ß\",\n       agrave: \"à\",\n       aacute: \"á\",\n       acirc: \"â\",\n       atilde: \"ã\",\n       auml: \"ä\",\n       aring: \"å\",\n       aelig: \"æ\",\n       ccedil: \"ç\",\n       egrave: \"è\",\n       eacute: \"é\",\n       ecirc: \"ê\",\n       euml: \"ë\",\n       igrave: \"ì\",\n       iacute: \"í\",\n       icirc: \"î\",\n       iuml: \"ï\",\n       eth: \"ð\",\n       ntilde: \"ñ\",\n       ograve: \"ò\",\n       oacute: \"ó\",\n       ocirc: \"ô\",\n       otilde: \"õ\",\n       ouml: \"ö\",\n       oslash: \"ø\",\n       ugrave: \"ù\",\n       uacute: \"ú\",\n       ucirc: \"û\",\n       uuml: \"ü\",\n       yacute: \"ý\",\n       thorn: \"þ\",\n       yuml: \"ÿ\",\n       nbsp: \" \",\n       iexcl: \"¡\",\n       cent: \"¢\",\n       pound: \"£\",\n       curren: \"¤\",\n       yen: \"¥\",\n       brvbar: \"¦\",\n       sect: \"§\",\n       uml: \"¨\",\n       copy: \"©\",\n       ordf: \"ª\",\n       laquo: \"«\",\n       not: \"¬\",\n       shy: \"­­\",\n       reg: \"®\",\n       macr: \"¯\",\n       deg: \"°\",\n       plusmn: \"±\",\n       sup2: \"²\",\n       sup3: \"³\",\n       acute: \"´\",\n       micro: \"µ\",\n       para: \"¶\",\n       middot: \"·\",\n       cedil: \"¸\",\n       sup1: \"¹\",\n       ordm: \"º\",\n       raquo: \"»\",\n       frac14: \"¼\",\n       frac12: \"½\",\n       frac34: \"¾\",\n       iquest: \"¿\",\n       times: \"×\",\n       divide: \"÷\",\n       forall: \"∀\",\n       part: \"∂\",\n       exist: \"∃\",\n       empty: \"∅\",\n       nabla: \"∇\",\n       isin: \"∈\",\n       notin: \"∉\",\n       ni: \"∋\",\n       prod: \"∏\",\n       sum: \"∑\",\n       minus: \"−\",\n       lowast: \"∗\",\n       radic: \"√\",\n       prop: \"∝\",\n       infin: \"∞\",\n       ang: \"∠\",\n       and: \"∧\",\n       or: \"∨\",\n       cap: \"∩\",\n       cup: \"∪\",\n       'int': \"∫\",\n       there4: \"∴\",\n       sim: \"∼\",\n       cong: \"≅\",\n       asymp: \"≈\",\n       ne: \"≠\",\n       equiv: \"≡\",\n       le: \"≤\",\n       ge: \"≥\",\n       sub: \"⊂\",\n       sup: \"⊃\",\n       nsub: \"⊄\",\n       sube: \"⊆\",\n       supe: \"⊇\",\n       oplus: \"⊕\",\n       otimes: \"⊗\",\n       perp: \"⊥\",\n       sdot: \"⋅\",\n       Alpha: \"Α\",\n       Beta: \"Β\",\n       Gamma: \"Γ\",\n       Delta: \"Δ\",\n       Epsilon: \"Ε\",\n       Zeta: \"Ζ\",\n       Eta: \"Η\",\n       Theta: \"Θ\",\n       Iota: \"Ι\",\n       Kappa: \"Κ\",\n       Lambda: \"Λ\",\n       Mu: \"Μ\",\n       Nu: \"Ν\",\n       Xi: \"Ξ\",\n       Omicron: \"Ο\",\n       Pi: \"Π\",\n       Rho: \"Ρ\",\n       Sigma: \"Σ\",\n       Tau: \"Τ\",\n       Upsilon: \"Υ\",\n       Phi: \"Φ\",\n       Chi: \"Χ\",\n       Psi: \"Ψ\",\n       Omega: \"Ω\",\n       alpha: \"α\",\n       beta: \"β\",\n       gamma: \"γ\",\n       delta: \"δ\",\n       epsilon: \"ε\",\n       zeta: \"ζ\",\n       eta: \"η\",\n       theta: \"θ\",\n       iota: \"ι\",\n       kappa: \"κ\",\n       lambda: \"λ\",\n       mu: \"μ\",\n       nu: \"ν\",\n       xi: \"ξ\",\n       omicron: \"ο\",\n       pi: \"π\",\n       rho: \"ρ\",\n       sigmaf: \"ς\",\n       sigma: \"σ\",\n       tau: \"τ\",\n       upsilon: \"υ\",\n       phi: \"φ\",\n       chi: \"χ\",\n       psi: \"ψ\",\n       omega: \"ω\",\n       thetasym: \"ϑ\",\n       upsih: \"ϒ\",\n       piv: \"ϖ\",\n       OElig: \"Œ\",\n       oelig: \"œ\",\n       Scaron: \"Š\",\n       scaron: \"š\",\n       Yuml: \"Ÿ\",\n       fnof: \"ƒ\",\n       circ: \"ˆ\",\n       tilde: \"˜\",\n       ensp: \" \",\n       emsp: \" \",\n       thinsp: \" \",\n       zwnj: \"‌\",\n       zwj: \"‍\",\n       lrm: \"‎\",\n       rlm: \"‏\",\n       ndash: \"–\",\n       mdash: \"—\",\n       lsquo: \"‘\",\n       rsquo: \"’\",\n       sbquo: \"‚\",\n       ldquo: \"“\",\n       rdquo: \"”\",\n       bdquo: \"„\",\n       dagger: \"†\",\n       Dagger: \"‡\",\n       bull: \"•\",\n       hellip: \"…\",\n       permil: \"‰\",\n       prime: \"′\",\n       Prime: \"″\",\n       lsaquo: \"‹\",\n       rsaquo: \"›\",\n       oline: \"‾\",\n       euro: \"€\",\n       trade: \"™\",\n       larr: \"←\",\n       uarr: \"↑\",\n       rarr: \"→\",\n       darr: \"↓\",\n       harr: \"↔\",\n       crarr: \"↵\",\n       lceil: \"⌈\",\n       rceil: \"⌉\",\n       lfloor: \"⌊\",\n       rfloor: \"⌋\",\n       loz: \"◊\",\n       spades: \"♠\",\n       clubs: \"♣\",\n       hearts: \"♥\",\n       diams: \"♦\"\n};\n//for(var  n in exports.entityMap){console.log(exports.entityMap[n].charCodeAt())}\n\n\n//# sourceURL=webpack://BoncH5Player/./node_modules/xmldom/lib/entities.js?");

/***/ }),

/***/ "./node_modules/xmldom/lib/sax.js":
/*!****************************************!*\
  !*** ./node_modules/xmldom/lib/sax.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("//[4]   \tNameStartChar\t   ::=   \t\":\" | [A-Z] | \"_\" | [a-z] | [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x2FF] | [#x370-#x37D] | [#x37F-#x1FFF] | [#x200C-#x200D] | [#x2070-#x218F] | [#x2C00-#x2FEF] | [#x3001-#xD7FF] | [#xF900-#xFDCF] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFF]\n//[4a]   \tNameChar\t   ::=   \tNameStartChar | \"-\" | \".\" | [0-9] | #xB7 | [#x0300-#x036F] | [#x203F-#x2040]\n//[5]   \tName\t   ::=   \tNameStartChar (NameChar)*\nvar nameStartChar = /[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]///\\u10000-\\uEFFFF\nvar nameChar = new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");\nvar tagNamePattern = new RegExp('^'+nameStartChar.source+nameChar.source+'*(?:\\:'+nameStartChar.source+nameChar.source+'*)?$');\n//var tagNamePattern = /^[a-zA-Z_][\\w\\-\\.]*(?:\\:[a-zA-Z_][\\w\\-\\.]*)?$/\n//var handlers = 'resolveEntity,getExternalSubset,characters,endDocument,endElement,endPrefixMapping,ignorableWhitespace,processingInstruction,setDocumentLocator,skippedEntity,startDocument,startElement,startPrefixMapping,notationDecl,unparsedEntityDecl,error,fatalError,warning,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,comment,endCDATA,endDTD,endEntity,startCDATA,startDTD,startEntity'.split(',')\n\n//S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\n//S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\nvar S_TAG = 0;//tag name offerring\nvar S_ATTR = 1;//attr name offerring \nvar S_ATTR_SPACE=2;//attr name end and space offer\nvar S_EQ = 3;//=space?\nvar S_ATTR_NOQUOT_VALUE = 4;//attr value(no quot value only)\nvar S_ATTR_END = 5;//attr value end and no space(quot end)\nvar S_TAG_SPACE = 6;//(attr value end || tag end ) && (space offer)\nvar S_TAG_CLOSE = 7;//closed el<el />\n\nfunction XMLReader(){\n\t\n}\n\nXMLReader.prototype = {\n\tparse:function(source,defaultNSMap,entityMap){\n\t\tvar domBuilder = this.domBuilder;\n\t\tdomBuilder.startDocument();\n\t\t_copy(defaultNSMap ,defaultNSMap = {})\n\t\tparse(source,defaultNSMap,entityMap,\n\t\t\t\tdomBuilder,this.errorHandler);\n\t\tdomBuilder.endDocument();\n\t}\n}\nfunction parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){\n\tfunction fixedFromCharCode(code) {\n\t\t// String.prototype.fromCharCode does not supports\n\t\t// > 2 bytes unicode chars directly\n\t\tif (code > 0xffff) {\n\t\t\tcode -= 0x10000;\n\t\t\tvar surrogate1 = 0xd800 + (code >> 10)\n\t\t\t\t, surrogate2 = 0xdc00 + (code & 0x3ff);\n\n\t\t\treturn String.fromCharCode(surrogate1, surrogate2);\n\t\t} else {\n\t\t\treturn String.fromCharCode(code);\n\t\t}\n\t}\n\tfunction entityReplacer(a){\n\t\tvar k = a.slice(1,-1);\n\t\tif(k in entityMap){\n\t\t\treturn entityMap[k]; \n\t\t}else if(k.charAt(0) === '#'){\n\t\t\treturn fixedFromCharCode(parseInt(k.substr(1).replace('x','0x')))\n\t\t}else{\n\t\t\terrorHandler.error('entity not found:'+a);\n\t\t\treturn a;\n\t\t}\n\t}\n\tfunction appendText(end){//has some bugs\n\t\tif(end>start){\n\t\t\tvar xt = source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);\n\t\t\tlocator&&position(start);\n\t\t\tdomBuilder.characters(xt,0,end-start);\n\t\t\tstart = end\n\t\t}\n\t}\n\tfunction position(p,m){\n\t\twhile(p>=lineEnd && (m = linePattern.exec(source))){\n\t\t\tlineStart = m.index;\n\t\t\tlineEnd = lineStart + m[0].length;\n\t\t\tlocator.lineNumber++;\n\t\t\t//console.log('line++:',locator,startPos,endPos)\n\t\t}\n\t\tlocator.columnNumber = p-lineStart+1;\n\t}\n\tvar lineStart = 0;\n\tvar lineEnd = 0;\n\tvar linePattern = /.*(?:\\r\\n?|\\n)|.*$/g\n\tvar locator = domBuilder.locator;\n\t\n\tvar parseStack = [{currentNSMap:defaultNSMapCopy}]\n\tvar closeMap = {};\n\tvar start = 0;\n\twhile(true){\n\t\ttry{\n\t\t\tvar tagStart = source.indexOf('<',start);\n\t\t\tif(tagStart<0){\n\t\t\t\tif(!source.substr(start).match(/^\\s*$/)){\n\t\t\t\t\tvar doc = domBuilder.doc;\n\t    \t\t\tvar text = doc.createTextNode(source.substr(start));\n\t    \t\t\tdoc.appendChild(text);\n\t    \t\t\tdomBuilder.currentElement = text;\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(tagStart>start){\n\t\t\t\tappendText(tagStart);\n\t\t\t}\n\t\t\tswitch(source.charAt(tagStart+1)){\n\t\t\tcase '/':\n\t\t\t\tvar end = source.indexOf('>',tagStart+3);\n\t\t\t\tvar tagName = source.substring(tagStart+2,end);\n\t\t\t\tvar config = parseStack.pop();\n\t\t\t\tif(end<0){\n\t\t\t\t\t\n\t        \t\ttagName = source.substring(tagStart+2).replace(/[\\s<].*/,'');\n\t        \t\t//console.error('#@@@@@@'+tagName)\n\t        \t\terrorHandler.error(\"end tag name: \"+tagName+' is not complete:'+config.tagName);\n\t        \t\tend = tagStart+1+tagName.length;\n\t        \t}else if(tagName.match(/\\s</)){\n\t        \t\ttagName = tagName.replace(/[\\s<].*/,'');\n\t        \t\terrorHandler.error(\"end tag name: \"+tagName+' maybe not complete');\n\t        \t\tend = tagStart+1+tagName.length;\n\t\t\t\t}\n\t\t\t\t//console.error(parseStack.length,parseStack)\n\t\t\t\t//console.error(config);\n\t\t\t\tvar localNSMap = config.localNSMap;\n\t\t\t\tvar endMatch = config.tagName == tagName;\n\t\t\t\tvar endIgnoreCaseMach = endMatch || config.tagName&&config.tagName.toLowerCase() == tagName.toLowerCase()\n\t\t        if(endIgnoreCaseMach){\n\t\t        \tdomBuilder.endElement(config.uri,config.localName,tagName);\n\t\t\t\t\tif(localNSMap){\n\t\t\t\t\t\tfor(var prefix in localNSMap){\n\t\t\t\t\t\t\tdomBuilder.endPrefixMapping(prefix) ;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(!endMatch){\n\t\t            \terrorHandler.fatalError(\"end tag name: \"+tagName+' is not match the current start tagName:'+config.tagName );\n\t\t\t\t\t}\n\t\t        }else{\n\t\t        \tparseStack.push(config)\n\t\t        }\n\t\t\t\t\n\t\t\t\tend++;\n\t\t\t\tbreak;\n\t\t\t\t// end elment\n\t\t\tcase '?':// <?...?>\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tend = parseInstruction(source,tagStart,domBuilder);\n\t\t\t\tbreak;\n\t\t\tcase '!':// <!doctype,<![CDATA,<!--\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tend = parseDCC(source,tagStart,domBuilder,errorHandler);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tvar el = new ElementAttributes();\n\t\t\t\tvar currentNSMap = parseStack[parseStack.length-1].currentNSMap;\n\t\t\t\t//elStartEnd\n\t\t\t\tvar end = parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);\n\t\t\t\tvar len = el.length;\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tif(!el.closed && fixSelfClosed(source,end,el.tagName,closeMap)){\n\t\t\t\t\tel.closed = true;\n\t\t\t\t\tif(!entityMap.nbsp){\n\t\t\t\t\t\terrorHandler.warning('unclosed xml attribute');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(locator && len){\n\t\t\t\t\tvar locator2 = copyLocator(locator,{});\n\t\t\t\t\t//try{//attribute position fixed\n\t\t\t\t\tfor(var i = 0;i<len;i++){\n\t\t\t\t\t\tvar a = el[i];\n\t\t\t\t\t\tposition(a.offset);\n\t\t\t\t\t\ta.locator = copyLocator(locator,{});\n\t\t\t\t\t}\n\t\t\t\t\t//}catch(e){console.error('@@@@@'+e)}\n\t\t\t\t\tdomBuilder.locator = locator2\n\t\t\t\t\tif(appendElement(el,domBuilder,currentNSMap)){\n\t\t\t\t\t\tparseStack.push(el)\n\t\t\t\t\t}\n\t\t\t\t\tdomBuilder.locator = locator;\n\t\t\t\t}else{\n\t\t\t\t\tif(appendElement(el,domBuilder,currentNSMap)){\n\t\t\t\t\t\tparseStack.push(el)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tif(el.uri === 'http://www.w3.org/1999/xhtml' && !el.closed){\n\t\t\t\t\tend = parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)\n\t\t\t\t}else{\n\t\t\t\t\tend++;\n\t\t\t\t}\n\t\t\t}\n\t\t}catch(e){\n\t\t\terrorHandler.error('element parse error: '+e)\n\t\t\t//errorHandler.error('element parse error: '+e);\n\t\t\tend = -1;\n\t\t\t//throw e;\n\t\t}\n\t\tif(end>start){\n\t\t\tstart = end;\n\t\t}else{\n\t\t\t//TODO: 这里有可能sax回退，有位置错误风险\n\t\t\tappendText(Math.max(tagStart,start)+1);\n\t\t}\n\t}\n}\nfunction copyLocator(f,t){\n\tt.lineNumber = f.lineNumber;\n\tt.columnNumber = f.columnNumber;\n\treturn t;\n}\n\n/**\n * @see #appendElement(source,elStartEnd,el,selfClosed,entityReplacer,domBuilder,parseStack);\n * @return end of the elementStartPart(end of elementEndPart for selfClosed el)\n */\nfunction parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){\n\tvar attrName;\n\tvar value;\n\tvar p = ++start;\n\tvar s = S_TAG;//status\n\twhile(true){\n\t\tvar c = source.charAt(p);\n\t\tswitch(c){\n\t\tcase '=':\n\t\t\tif(s === S_ATTR){//attrName\n\t\t\t\tattrName = source.slice(start,p);\n\t\t\t\ts = S_EQ;\n\t\t\t}else if(s === S_ATTR_SPACE){\n\t\t\t\ts = S_EQ;\n\t\t\t}else{\n\t\t\t\t//fatalError: equal must after attrName or space after attrName\n\t\t\t\tthrow new Error('attribute equal must after attrName');\n\t\t\t}\n\t\t\tbreak;\n\t\tcase '\\'':\n\t\tcase '\"':\n\t\t\tif(s === S_EQ || s === S_ATTR //|| s == S_ATTR_SPACE\n\t\t\t\t){//equal\n\t\t\t\tif(s === S_ATTR){\n\t\t\t\t\terrorHandler.warning('attribute value must after \"=\"')\n\t\t\t\t\tattrName = source.slice(start,p)\n\t\t\t\t}\n\t\t\t\tstart = p+1;\n\t\t\t\tp = source.indexOf(c,start)\n\t\t\t\tif(p>0){\n\t\t\t\t\tvalue = source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);\n\t\t\t\t\tel.add(attrName,value,start-1);\n\t\t\t\t\ts = S_ATTR_END;\n\t\t\t\t}else{\n\t\t\t\t\t//fatalError: no end quot match\n\t\t\t\t\tthrow new Error('attribute value no end \\''+c+'\\' match');\n\t\t\t\t}\n\t\t\t}else if(s == S_ATTR_NOQUOT_VALUE){\n\t\t\t\tvalue = source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);\n\t\t\t\t//console.log(attrName,value,start,p)\n\t\t\t\tel.add(attrName,value,start);\n\t\t\t\t//console.dir(el)\n\t\t\t\terrorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+')!!');\n\t\t\t\tstart = p+1;\n\t\t\t\ts = S_ATTR_END\n\t\t\t}else{\n\t\t\t\t//fatalError: no equal before\n\t\t\t\tthrow new Error('attribute value must after \"=\"');\n\t\t\t}\n\t\t\tbreak;\n\t\tcase '/':\n\t\t\tswitch(s){\n\t\t\tcase S_TAG:\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\tcase S_ATTR_END:\n\t\t\tcase S_TAG_SPACE:\n\t\t\tcase S_TAG_CLOSE:\n\t\t\t\ts =S_TAG_CLOSE;\n\t\t\t\tel.closed = true;\n\t\t\tcase S_ATTR_NOQUOT_VALUE:\n\t\t\tcase S_ATTR:\n\t\t\tcase S_ATTR_SPACE:\n\t\t\t\tbreak;\n\t\t\t//case S_EQ:\n\t\t\tdefault:\n\t\t\t\tthrow new Error(\"attribute invalid close char('/')\")\n\t\t\t}\n\t\t\tbreak;\n\t\tcase ''://end document\n\t\t\t//throw new Error('unexpected end of input')\n\t\t\terrorHandler.error('unexpected end of input');\n\t\t\tif(s == S_TAG){\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\t}\n\t\t\treturn p;\n\t\tcase '>':\n\t\t\tswitch(s){\n\t\t\tcase S_TAG:\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\tcase S_ATTR_END:\n\t\t\tcase S_TAG_SPACE:\n\t\t\tcase S_TAG_CLOSE:\n\t\t\t\tbreak;//normal\n\t\t\tcase S_ATTR_NOQUOT_VALUE://Compatible state\n\t\t\tcase S_ATTR:\n\t\t\t\tvalue = source.slice(start,p);\n\t\t\t\tif(value.slice(-1) === '/'){\n\t\t\t\t\tel.closed  = true;\n\t\t\t\t\tvalue = value.slice(0,-1)\n\t\t\t\t}\n\t\t\tcase S_ATTR_SPACE:\n\t\t\t\tif(s === S_ATTR_SPACE){\n\t\t\t\t\tvalue = attrName;\n\t\t\t\t}\n\t\t\t\tif(s == S_ATTR_NOQUOT_VALUE){\n\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');\n\t\t\t\t\tel.add(attrName,value.replace(/&#?\\w+;/g,entityReplacer),start)\n\t\t\t\t}else{\n\t\t\t\t\tif(currentNSMap[''] !== 'http://www.w3.org/1999/xhtml' || !value.match(/^(?:disabled|checked|selected)$/i)){\n\t\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')\n\t\t\t\t\t}\n\t\t\t\t\tel.add(value,value,start)\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase S_EQ:\n\t\t\t\tthrow new Error('attribute value missed!!');\n\t\t\t}\n//\t\t\tconsole.log(tagName,tagNamePattern,tagNamePattern.test(tagName))\n\t\t\treturn p;\n\t\t/*xml space '\\x20' | #x9 | #xD | #xA; */\n\t\tcase '\\u0080':\n\t\t\tc = ' ';\n\t\tdefault:\n\t\t\tif(c<= ' '){//space\n\t\t\t\tswitch(s){\n\t\t\t\tcase S_TAG:\n\t\t\t\t\tel.setTagName(source.slice(start,p));//tagName\n\t\t\t\t\ts = S_TAG_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR:\n\t\t\t\t\tattrName = source.slice(start,p)\n\t\t\t\t\ts = S_ATTR_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR_NOQUOT_VALUE:\n\t\t\t\t\tvar value = source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);\n\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');\n\t\t\t\t\tel.add(attrName,value,start)\n\t\t\t\tcase S_ATTR_END:\n\t\t\t\t\ts = S_TAG_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\t//case S_TAG_SPACE:\n\t\t\t\t//case S_EQ:\n\t\t\t\t//case S_ATTR_SPACE:\n\t\t\t\t//\tvoid();break;\n\t\t\t\t//case S_TAG_CLOSE:\n\t\t\t\t\t//ignore warning\n\t\t\t\t}\n\t\t\t}else{//not space\n//S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\n//S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\n\t\t\t\tswitch(s){\n\t\t\t\t//case S_TAG:void();break;\n\t\t\t\t//case S_ATTR:void();break;\n\t\t\t\t//case S_ATTR_NOQUOT_VALUE:void();break;\n\t\t\t\tcase S_ATTR_SPACE:\n\t\t\t\t\tvar tagName =  el.tagName;\n\t\t\t\t\tif(currentNSMap[''] !== 'http://www.w3.org/1999/xhtml' || !attrName.match(/^(?:disabled|checked|selected)$/i)){\n\t\t\t\t\t\terrorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')\n\t\t\t\t\t}\n\t\t\t\t\tel.add(attrName,attrName,start);\n\t\t\t\t\tstart = p;\n\t\t\t\t\ts = S_ATTR;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR_END:\n\t\t\t\t\terrorHandler.warning('attribute space is required\"'+attrName+'\"!!')\n\t\t\t\tcase S_TAG_SPACE:\n\t\t\t\t\ts = S_ATTR;\n\t\t\t\t\tstart = p;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_EQ:\n\t\t\t\t\ts = S_ATTR_NOQUOT_VALUE;\n\t\t\t\t\tstart = p;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_TAG_CLOSE:\n\t\t\t\t\tthrow new Error(\"elements closed character '/' and '>' must be connected to\");\n\t\t\t\t}\n\t\t\t}\n\t\t}//end outer switch\n\t\t//console.log('p++',p)\n\t\tp++;\n\t}\n}\n/**\n * @return true if has new namespace define\n */\nfunction appendElement(el,domBuilder,currentNSMap){\n\tvar tagName = el.tagName;\n\tvar localNSMap = null;\n\t//var currentNSMap = parseStack[parseStack.length-1].currentNSMap;\n\tvar i = el.length;\n\twhile(i--){\n\t\tvar a = el[i];\n\t\tvar qName = a.qName;\n\t\tvar value = a.value;\n\t\tvar nsp = qName.indexOf(':');\n\t\tif(nsp>0){\n\t\t\tvar prefix = a.prefix = qName.slice(0,nsp);\n\t\t\tvar localName = qName.slice(nsp+1);\n\t\t\tvar nsPrefix = prefix === 'xmlns' && localName\n\t\t}else{\n\t\t\tlocalName = qName;\n\t\t\tprefix = null\n\t\t\tnsPrefix = qName === 'xmlns' && ''\n\t\t}\n\t\t//can not set prefix,because prefix !== ''\n\t\ta.localName = localName ;\n\t\t//prefix == null for no ns prefix attribute \n\t\tif(nsPrefix !== false){//hack!!\n\t\t\tif(localNSMap == null){\n\t\t\t\tlocalNSMap = {}\n\t\t\t\t//console.log(currentNSMap,0)\n\t\t\t\t_copy(currentNSMap,currentNSMap={})\n\t\t\t\t//console.log(currentNSMap,1)\n\t\t\t}\n\t\t\tcurrentNSMap[nsPrefix] = localNSMap[nsPrefix] = value;\n\t\t\ta.uri = 'http://www.w3.org/2000/xmlns/'\n\t\t\tdomBuilder.startPrefixMapping(nsPrefix, value) \n\t\t}\n\t}\n\tvar i = el.length;\n\twhile(i--){\n\t\ta = el[i];\n\t\tvar prefix = a.prefix;\n\t\tif(prefix){//no prefix attribute has no namespace\n\t\t\tif(prefix === 'xml'){\n\t\t\t\ta.uri = 'http://www.w3.org/XML/1998/namespace';\n\t\t\t}if(prefix !== 'xmlns'){\n\t\t\t\ta.uri = currentNSMap[prefix || '']\n\t\t\t\t\n\t\t\t\t//{console.log('###'+a.qName,domBuilder.locator.systemId+'',currentNSMap,a.uri)}\n\t\t\t}\n\t\t}\n\t}\n\tvar nsp = tagName.indexOf(':');\n\tif(nsp>0){\n\t\tprefix = el.prefix = tagName.slice(0,nsp);\n\t\tlocalName = el.localName = tagName.slice(nsp+1);\n\t}else{\n\t\tprefix = null;//important!!\n\t\tlocalName = el.localName = tagName;\n\t}\n\t//no prefix element has default namespace\n\tvar ns = el.uri = currentNSMap[prefix || ''];\n\tdomBuilder.startElement(ns,localName,tagName,el);\n\t//endPrefixMapping and startPrefixMapping have not any help for dom builder\n\t//localNSMap = null\n\tif(el.closed){\n\t\tdomBuilder.endElement(ns,localName,tagName);\n\t\tif(localNSMap){\n\t\t\tfor(prefix in localNSMap){\n\t\t\t\tdomBuilder.endPrefixMapping(prefix) \n\t\t\t}\n\t\t}\n\t}else{\n\t\tel.currentNSMap = currentNSMap;\n\t\tel.localNSMap = localNSMap;\n\t\t//parseStack.push(el);\n\t\treturn true;\n\t}\n}\nfunction parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){\n\tif(/^(?:script|textarea)$/i.test(tagName)){\n\t\tvar elEndStart =  source.indexOf('</'+tagName+'>',elStartEnd);\n\t\tvar text = source.substring(elStartEnd+1,elEndStart);\n\t\tif(/[&<]/.test(text)){\n\t\t\tif(/^script$/i.test(tagName)){\n\t\t\t\t//if(!/\\]\\]>/.test(text)){\n\t\t\t\t\t//lexHandler.startCDATA();\n\t\t\t\t\tdomBuilder.characters(text,0,text.length);\n\t\t\t\t\t//lexHandler.endCDATA();\n\t\t\t\t\treturn elEndStart;\n\t\t\t\t//}\n\t\t\t}//}else{//text area\n\t\t\t\ttext = text.replace(/&#?\\w+;/g,entityReplacer);\n\t\t\t\tdomBuilder.characters(text,0,text.length);\n\t\t\t\treturn elEndStart;\n\t\t\t//}\n\t\t\t\n\t\t}\n\t}\n\treturn elStartEnd+1;\n}\nfunction fixSelfClosed(source,elStartEnd,tagName,closeMap){\n\t//if(tagName in closeMap){\n\tvar pos = closeMap[tagName];\n\tif(pos == null){\n\t\t//console.log(tagName)\n\t\tpos =  source.lastIndexOf('</'+tagName+'>')\n\t\tif(pos<elStartEnd){//忘记闭合\n\t\t\tpos = source.lastIndexOf('</'+tagName)\n\t\t}\n\t\tcloseMap[tagName] =pos\n\t}\n\treturn pos<elStartEnd;\n\t//} \n}\nfunction _copy(source,target){\n\tfor(var n in source){target[n] = source[n]}\n}\nfunction parseDCC(source,start,domBuilder,errorHandler){//sure start with '<!'\n\tvar next= source.charAt(start+2)\n\tswitch(next){\n\tcase '-':\n\t\tif(source.charAt(start + 3) === '-'){\n\t\t\tvar end = source.indexOf('-->',start+4);\n\t\t\t//append comment source.substring(4,end)//<!--\n\t\t\tif(end>start){\n\t\t\t\tdomBuilder.comment(source,start+4,end-start-4);\n\t\t\t\treturn end+3;\n\t\t\t}else{\n\t\t\t\terrorHandler.error(\"Unclosed comment\");\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}else{\n\t\t\t//error\n\t\t\treturn -1;\n\t\t}\n\tdefault:\n\t\tif(source.substr(start+3,6) == 'CDATA['){\n\t\t\tvar end = source.indexOf(']]>',start+9);\n\t\t\tdomBuilder.startCDATA();\n\t\t\tdomBuilder.characters(source,start+9,end-start-9);\n\t\t\tdomBuilder.endCDATA() \n\t\t\treturn end+3;\n\t\t}\n\t\t//<!DOCTYPE\n\t\t//startDTD(java.lang.String name, java.lang.String publicId, java.lang.String systemId) \n\t\tvar matchs = split(source,start);\n\t\tvar len = matchs.length;\n\t\tif(len>1 && /!doctype/i.test(matchs[0][0])){\n\t\t\tvar name = matchs[1][0];\n\t\t\tvar pubid = len>3 && /^public$/i.test(matchs[2][0]) && matchs[3][0]\n\t\t\tvar sysid = len>4 && matchs[4][0];\n\t\t\tvar lastMatch = matchs[len-1]\n\t\t\tdomBuilder.startDTD(name,pubid && pubid.replace(/^(['\"])(.*?)\\1$/,'$2'),\n\t\t\t\t\tsysid && sysid.replace(/^(['\"])(.*?)\\1$/,'$2'));\n\t\t\tdomBuilder.endDTD();\n\t\t\t\n\t\t\treturn lastMatch.index+lastMatch[0].length\n\t\t}\n\t}\n\treturn -1;\n}\n\n\n\nfunction parseInstruction(source,start,domBuilder){\n\tvar end = source.indexOf('?>',start);\n\tif(end){\n\t\tvar match = source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);\n\t\tif(match){\n\t\t\tvar len = match[0].length;\n\t\t\tdomBuilder.processingInstruction(match[1], match[2]) ;\n\t\t\treturn end+2;\n\t\t}else{//error\n\t\t\treturn -1;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * @param source\n */\nfunction ElementAttributes(source){\n\t\n}\nElementAttributes.prototype = {\n\tsetTagName:function(tagName){\n\t\tif(!tagNamePattern.test(tagName)){\n\t\t\tthrow new Error('invalid tagName:'+tagName)\n\t\t}\n\t\tthis.tagName = tagName\n\t},\n\tadd:function(qName,value,offset){\n\t\tif(!tagNamePattern.test(qName)){\n\t\t\tthrow new Error('invalid attribute:'+qName)\n\t\t}\n\t\tthis[this.length++] = {qName:qName,value:value,offset:offset}\n\t},\n\tlength:0,\n\tgetLocalName:function(i){return this[i].localName},\n\tgetLocator:function(i){return this[i].locator},\n\tgetQName:function(i){return this[i].qName},\n\tgetURI:function(i){return this[i].uri},\n\tgetValue:function(i){return this[i].value}\n//\t,getIndex:function(uri, localName)){\n//\t\tif(localName){\n//\t\t\t\n//\t\t}else{\n//\t\t\tvar qName = uri\n//\t\t}\n//\t},\n//\tgetValue:function(){return this.getValue(this.getIndex.apply(this,arguments))},\n//\tgetType:function(uri,localName){}\n//\tgetType:function(i){},\n}\n\n\n\nfunction split(source,start){\n\tvar match;\n\tvar buf = [];\n\tvar reg = /'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;\n\treg.lastIndex = start;\n\treg.exec(source);//skip <\n\twhile(match = reg.exec(source)){\n\t\tbuf.push(match);\n\t\tif(match[1])return buf;\n\t}\n}\n\nexports.XMLReader = XMLReader;\n\n\n\n//# sourceURL=webpack://BoncH5Player/./node_modules/xmldom/lib/sax.js?");

/***/ }),

/***/ "./src/h264canvasplayer/player.js":
/*!****************************************!*\
  !*** ./src/h264canvasplayer/player.js ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// import _ from 'lodash'\n\n\n\nclass H264CanvasPlayer{\n    constructor(app){\n        this.app = app;\n        this.pts=0;\n        // this.addjs();\n        setTimeout(() => {\n            \n            // this.Module = _.cloneDeep(window.Module)\n            this.videoCallback =Module.addFunction(function (addr_y, addr_u, addr_v, stride_y, stride_u, stride_v, width, height, pts,id) {\n                // console.log(\"[%d]In video callback, size = %d * %d, pts = %d\", width, height, pts)\n                // console.log('解码成功')\n                // debugger\n                // console.log(\"1111111111111111111111111\",this.app.configs.videoId);\n                console.log(id)\n                console.log('解码一包数据');\n                // console.log(id)\n                let size = width * height + (width / 2)  * (height / 2) + (width / 2)  * (height / 2)\n                let data = new Uint8Array(size)\n                let pos = 0\n                for(let i=0; i< height; i++) {\n                    let src = addr_y + i * stride_y\n                    let tmp = HEAPU8.subarray(src, src + width)\n                    tmp = new Uint8Array(tmp)\n                    data.set(tmp, pos)\n                    pos += tmp.length\n                }\n                for(let i=0; i< height / 2; i++) {\n                    let src = addr_u + i * stride_u\n                    let tmp = HEAPU8.subarray(src, src + width / 2)\n                    tmp = new Uint8Array(tmp)\n                    data.set(tmp, pos)\n                    pos += tmp.length\n                }\n                for(let i=0; i< height / 2; i++) {\n                    let src = addr_v + i * stride_v\n                    let tmp = HEAPU8.subarray(src, src + width / 2)\n                    tmp = new Uint8Array(tmp)\n                    data.set(tmp, pos)\n                    pos += tmp.length\n                }\n                var obj = {\n                    data: data,\n                    width,\n                    height\n                }\n                console.timeEnd('decode')\n                this.displayVideoFrame(obj);\n                \n            }.bind(this));\n\n            //0 h264 1 h265\n            var ret = Module._openDecoder(1, this.videoCallback, 0)\n\n            console.log('ret',ret)//0 代表成功  非0 代表失败\n        }, 3000);\n        \n    }\n\n\n    addjs(){\n        const body = document.getElementsByTagName('body')[0];\n\n        // const script3 = document.createElement('script');\n        // script3.src = 'http://localhost/newwasm/libffmpeg_264_265.worker.js'\n        // body.appendChild(script3);\n\n        const script1 = document.createElement('script');\n        // script1.src = 'http://172.16.67.188/wasm/dist/libffmpeg_264_265.js'\n        // script1 .src = 'http://127.0.0.1/wasm/dist/libffmpeg_264_265.js'\n        // script1 .src = 'http://localhost/newwasm/libffmpeg_264_265.js'\n        script1.src = 'http://172.16.67.203/newwasm/libffmpeg_264_265.js'\n        body.appendChild(script1);\n        const script2 = document.createElement('script');\n        // script2.src = 'http://172.16.67.188/wasm/test/webgl.js'\n        script2.src = 'http://172.16.67.203/wasm/test/webgl.js'\n\n        body.appendChild(script2);\n    }\n\n\n    playBuffer(videoBuffer){\n        \n        var typedArray = new Uint8Array(videoBuffer);\n        var size = typedArray.length;\n        var cacheBuffer = Module._malloc(size);\n        Module.HEAPU8.set(typedArray, cacheBuffer);\n        console.time('decode')\n        var ret = Module._decodeData(cacheBuffer,size, this.pts++,1); \n\n    }\n\n    displayVideoFrame(obj) {\n        var data = new Uint8Array(obj.data);\n        var width = obj.width;\n        var height = obj.height;\n        var yLength = width * height;\n        var uvLength = (width / 2) * (height / 2);\n        if(!this.webglPlayer) {\n            console.log(this.app.configs.videoId);\n            const canvasId = this.app.configs.videoId;\n            console.log(canvasId)\n            var canvas = document.getElementById(canvasId);\n            this.webglPlayer = new WebGLPlayer(canvas, {\n                preserveDrawingBuffer: false\n            });\n        }\n        this.webglPlayer.renderFrame(data, width, height, yLength, uvLength);\n    }\n\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (H264CanvasPlayer);\n\n//# sourceURL=webpack://BoncH5Player/./src/h264canvasplayer/player.js?");

/***/ }),

/***/ "./src/h264player/controller/buffer.js":
/*!*********************************************!*\
  !*** ./src/h264player/controller/buffer.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return BufferController; });\n/* harmony import */ var _util_event__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../util/event */ \"./src/util/event.js\");\n/* harmony import */ var _util_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../util/utils.js */ \"./src/util/utils.js\");\n\n\n\n\nclass BufferController extends _util_event__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor(sourceBuffer,type,videoNode) {\n        super('buffer');\n\n        this.type = type;\n        this.videoNode = videoNode\n        this.queue = new Uint8Array();\n\n        this.cleaning = false;\n        this.pendingCleaning = 0;\n        this.cleanOffset = 30;\n        this.cleanRanges = [];\n        this.rangeStart;\n        this.rangeEnd;\n        this.rangeList = [];\n        this.sourceBuffer = sourceBuffer;\n        this.sourceBuffer.addEventListener('updateend', ()=> {\n            if (this.pendingCleaning > 0) {\n                this.initCleanup(this.pendingCleaning);\n                this.pendingCleaning = 0;\n            }\n            this.cleaning = false;\n            if (this.cleanRanges.length) {\n                this.doCleanup();\n                return;\n            }\n        });\n       \n        this.sourceBuffer.addEventListener('updatestart',()=>{\n            //console.log(arguments);  \n            sourceBuffer = arguments[0];\n            if(sourceBuffer.buffered>0){\n                this.rangeStart = sourceBuffer.buffered.end(0);\n            }\n            \n            //console.log('updatestart',sourceBuffer.buffered.start(0),arguments[2].currentTime,sourceBuffer.buffered.end(0))      \n        })\n        this.sourceBuffer.addEventListener('update',()=>{\n            //console.log(arguments);  \n            sourceBuffer = arguments[0];\n            if(sourceBuffer.buffered>0){\n                this.rangeEnd = sourceBuffer.buffered.end(0);\n            }\n            \n            this.rangeList.push([this.rangeStart,this.rangeEnd])\n            // console.log([this.rangeStart,this.rangeEnd],arguments[2].currentTime)\n            // console.log(this.rangeList.length) \n            // setTimeout(() => {\n            //     console.log(this.rangeList)\n            //     debugger;\n            // }, 10000);\n            //console.log('update',sourceBuffer.buffered.start(0),arguments[2].currentTime,sourceBuffer.buffered.end(0))      \n        })\n        this.sourceBuffer.addEventListener('error', ()=> {\n            this.dispatch('error', { type: this.type, name: 'buffer', error: 'buffer error' });\n        });\n    }\n\n    destroy() {\n        this.queue = null;\n        this.sourceBuffer = null;\n        this.offAll();\n    }\n\n    doCleanup() {\n        if (!this.cleanRanges.length) {\n            this.cleaning = false;\n            return;\n        }\n        let range = this.cleanRanges.shift();\n        // console.log(range)\n        //console.log(`${this.type} 删除多余的 range [${range[0]} - ${range[1]})`);\n        this.cleaning = true;\n        this.sourceBuffer.remove(range[0], range[1]);\n    }\n\n    initCleanup(cleanMaxLimit){\n        if (this.sourceBuffer.updating){\n            this.pendingCleaning = cleanMaxLimit;\n            return;\n        }\n        if (this.sourceBuffer.buffered && this.sourceBuffer.buffered.length && !this.cleaning){\n            for (let i = 0; i < this.sourceBuffer.buffered.length; ++i)\n            {\n                let start = this.sourceBuffer.buffered.start(i);\n                let end = this.sourceBuffer.buffered.end(i);\n\n                if ((cleanMaxLimit - start) > this.cleanOffset)\n                {\n                    end = cleanMaxLimit - this.cleanOffset;\n                    if (start < end) {\n                        this.cleanRanges.push([start, end]);\n                    }\n                }\n            }\n            this.doCleanup();\n        }\n    }\n\n    doAppend() {\n        \n        if (!this.queue.length) return;\n\n        if (this.sourceBuffer.updating) {\n            return;\n        }\n\n        try{   \n            this.sourceBuffer.appendBuffer(this.queue);\n            this.dispatch('bufferAppended',this.type)\n            // console.log(this.type)\n            this.queue = new Uint8Array();\n        }catch (e){\n            debugger\n            console.log(e)\n            if (e.name === 'QuotaExceededError'){\n                console.error(`${this.type} buffer quota full`);\n                this.dispatch('error', { type: this.type, name: 'QuotaExceeded', error: 'buffer error' });\n                return;\n            }\n            //debug.error(`Error occured while appending ${this.type} buffer -  ${e.name}: ${e.message}`);\n            this.dispatch('error', { type: this.type, name: 'unexpectedError', error: 'buffer error' });\n        }\n    }\n    \n\n    feed(data)\n    {\n        //debug.log('zjr经过事件发送得到数据来塞');\n        this.queue = Object(_util_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"appendByteArray\"])(this.queue, data);\n        // this.queue = appendByteArray(data,this.queue);\n    }\n}\n\n\n//# sourceURL=webpack://BoncH5Player/./src/h264player/controller/buffer.js?");

/***/ }),

/***/ "./src/h264player/controller/remux.js":
/*!********************************************!*\
  !*** ./src/h264player/controller/remux.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return RemuxController; });\n/* harmony import */ var _util_mp4_generator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../util/mp4-generator.js */ \"./src/util/mp4-generator.js\");\n/* harmony import */ var _remuxer_aac_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../remuxer/aac.js */ \"./src/h264player/remuxer/aac.js\");\n/* harmony import */ var _remuxer_h264_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../remuxer/h264.js */ \"./src/h264player/remuxer/h264.js\");\n/* harmony import */ var _util_utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../util/utils.js */ \"./src/util/utils.js\");\n/* harmony import */ var _util_event__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../util/event */ \"./src/util/event.js\");\n\n\n\n\n\n\nclass RemuxController extends _util_event__WEBPACK_IMPORTED_MODULE_4__[\"default\"] {\n\n    constructor(streaming) {\n        super('remuxer');\n        this.initialized = false;\n        this.trackTypes = [];\n        this.tracks = {};\n        this._timeStempAudio=0;\n        this.hasAudio=false;\n        this.mediaDuration = streaming ? Infinity : 1000;\n        this.videoseg=0;\n        this.audioseg=0;\n        this._samplingFrequencyIndex=4;\n    }\n\n    set samplingFrequencyIndex(index){\n        this._samplingFrequencyIndex=index;\n    }\n\n    addTrack(type) {\n        if (type === 'video' || type === 'both') {\n            this.tracks.video = new _remuxer_h264_js__WEBPACK_IMPORTED_MODULE_2__[\"H264Remuxer\"]();\n            this.trackTypes.push('video');\n        }\n        if (type === 'audio' || type === 'both') {\n            this.tracks.audio = new _remuxer_aac_js__WEBPACK_IMPORTED_MODULE_1__[\"AACRemuxer\"]();\n            this.trackTypes.push('audio');\n        }\n    }\n\n    reset() {\n        for (let type of this.trackTypes) {\n            this.tracks[type].resetTrack();\n        }\n        this.initialized = false;\n    }\n\n    destroy() {\n        this.tracks = {};\n        this.offAll();\n    }\n\n    flush(){\n        if (!this.initialized){\n            if (this.isReady()){\n                this.dispatch('ready');\n                for (let type of this.trackTypes){\n                    if(type=='video'){\n                        let track = this.tracks[type];\n                        let data = {\n                            type: type,\n                            payload: _util_mp4_generator_js__WEBPACK_IMPORTED_MODULE_0__[\"MP4\"].initSegment([track.mp4track], this.mediaDuration, track.mp4track.timescale),\n                        };\n                        this.dispatch('buffer', data);\n                        \n                    }\n                    else if(type=='audio'){\n                        if(this.hasAudio==true){\n                            let xvdAudio= {};\n                            xvdAudio.id = 2;\n                            xvdAudio.type = 'audio';\n                            xvdAudio.len = 0;\n                            xvdAudio.fragmented = true;\n                            xvdAudio.timescale = 1000;\n                            xvdAudio.duration = 0;\n                            let config=new Uint8Array(2);\n                            let audioObjectType=2;\n                            let channelConfiguration=1;\n                            console.log('this._samplingFrequencyIndex==',this._samplingFrequencyIndex);\n                            config[0] = audioObjectType << 3;\n                            config[0] |= (this._samplingFrequencyIndex & 0x0E) >> 1;\n                            config[1] |= (this._samplingFrequencyIndex & 0x01) << 7;\n                            config[1] |= channelConfiguration << 3;\n                            xvdAudio.config = config;\n                            xvdAudio.samples = [];\n\n                            let initSegmentU8aAudio= _util_mp4_generator_js__WEBPACK_IMPORTED_MODULE_0__[\"MP4\"].initSegment([xvdAudio], 0, 1000);\n\n                            let data = {\n                                type: type,\n                                payload: initSegmentU8aAudio\n                            };\n\n                            this.dispatch('buffer', data);\n                        }\n\n                    }\n                }\n                //debug.log('Initial segment 封装完成.');\n                \n                this.initialized = true;\n                //this.startSuccess();\n                this.dispatch('videoPrepare') ;\n            }\n        }\n        else//封装后面的帧\n        {\n            for (let type of this.trackTypes){\n                if(type=='video'){\n                    let track = this.tracks[type];\n                    let pay = track.getPayload();\n                    if (pay && pay.byteLength)\n                    {\n                        this.videoseg++;\n                        // moof movie fragment\n                        const moof = _util_mp4_generator_js__WEBPACK_IMPORTED_MODULE_0__[\"MP4\"].moof(this.videoseg, track.dts, track.mp4track);\n                        // mdat media data container\n                        const mdat = _util_mp4_generator_js__WEBPACK_IMPORTED_MODULE_0__[\"MP4\"].mdat(pay);\n                        let payload = Object(_util_utils_js__WEBPACK_IMPORTED_MODULE_3__[\"appendByteArray\"])(moof, mdat);\n                        let data = {\n                            type: type,\n                            payload: payload,\n                            dts: track.dts\n                        };\n                        this.dispatch('buffer', data);\n                        let duration = Object(_util_utils_js__WEBPACK_IMPORTED_MODULE_3__[\"secToTime\"])(track.dts / 1000);            \n                        //debug.log('封装普通帧');\n                        track.flush();//base.js\n                    }\n                }\n                else if(type=='audio')\n                {\n                    if(this.hasAudio==true)\n                    {\n                        let track1 = this.tracks[type];\n                        let payQ = track1.getPayload();\n\n                        let aacRawData=payQ;\n                        let sizeaudio = aacRawData.byteLength;\n                        const mdatAudio = _util_mp4_generator_js__WEBPACK_IMPORTED_MODULE_0__[\"MP4\"].mdat(aacRawData);\n                        let mp4SampleAudio = {\n                            size: sizeaudio,\n                            duration: 40,\n                            cts: 0,\n                            flags: {\n                                isLeading: 0,\n                                isDependedOn: 0,\n                                hasRedundancy: 0,\n                                degradPrio: 0,\n                                dependsOn: 1,\n                            },\n                        };\n\n                        let trackAudio={};\n                        trackAudio.samples=[];\n                        trackAudio.id=2;\n                        trackAudio.len=0;\n                        trackAudio.fragmented=true;\n                        trackAudio.timescale=1000;\n                        trackAudio.duration=0;\n                        trackAudio.type='audio';\n\n                        let config=new Uint8Array(2);\n                        let audioObjectType=2;\n                        let channelConfiguration=1;\n\n                        config[0] = audioObjectType << 3;\n                        config[0] |= (this._samplingFrequencyIndex & 0x0E) >> 1;\n                        config[1] |= (this._samplingFrequencyIndex & 0x01) << 7;\n                        config[1] |= channelConfiguration << 3;\n\n                        trackAudio.config=config;\n                        trackAudio.samples.push(mp4SampleAudio);\n\n                        this._timeStempAudio+=40;\n                        this.audioseg++;\n                        const moofAudio = _util_mp4_generator_js__WEBPACK_IMPORTED_MODULE_0__[\"MP4\"].moof(this.audioseg, this._timeStempAudio, trackAudio);\n\n                        let AudioSegment=Object(_util_utils_js__WEBPACK_IMPORTED_MODULE_3__[\"appendByteArray\"])(moofAudio,mdatAudio);\n\n                        let data = {\n                            type: type,\n                            payload: AudioSegment,\n                            dts: 0\n                        };\n                        this.dispatch('buffer', data);\n                    }\n                }\n            }\n        }\n    }\n\n    isReady() {\n        for (let type of this.trackTypes) {\n            if (!this.tracks[type].readyToDecode || !this.tracks[type].samples.length) return true;\n        }\n        return true;\n    }\n\n    remux(data){\n        \n        for (let type of this.trackTypes) {\n            let samples = data[type];\n            if (type === 'audio' && this.tracks.video && !this.tracks.video.readyToDecode) continue; /* if video is present, don't add audio until video get ready */\n            if (samples.length > 0)\n            {\n                this.tracks[type].remux(samples);\n            }\n        }\n        this.flush();\n    }\n}\n\n\n//# sourceURL=webpack://BoncH5Player/./src/h264player/controller/remux.js?");

/***/ }),

/***/ "./src/h264player/parsers/aac.js":
/*!***************************************!*\
  !*** ./src/h264player/parsers/aac.js ***!
  \***************************************/
/*! exports provided: AACParser */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AACParser\", function() { return AACParser; });\n\nlet aacHeader;\nclass AACParser {\n    \n    static get samplingRateMap() {\n        return [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n    }\n\n    static get getAACHeaderData() {\n        return aacHeader;\n    }\n\n    static getHeaderLength(data) {\n        return (data[1] & 0x01 ? 7 : 9);  // without CRC 7 and with CRC 9 Refs: https://wiki.multimedia.cx/index.php?title=ADTS\n    }\n\n    static getFrameLength(data) {\n        return ((data[3] & 0x03) << 11) | (data[4] << 3) | ((data[5] & 0xE0) >>> 5); // 13 bits length ref: https://wiki.multimedia.cx/index.php?title=ADTS\n    }\n\n    static isAACPattern (data) {\n        return data[0] === 0xff && (data[1] & 0xf0) === 0xf0 && (data[1] & 0x06) === 0x00;\n    }\n\n    static extractAAC(buffer) {\n        let i = 0,\n            length = buffer.byteLength,\n            result = [],\n            headerLength,\n            frameLength;\n\n        if (!AACParser.isAACPattern(buffer)) {\n            debug.error('Invalid ADTS audio format');\n            return result;\n        }\n        headerLength = AACParser.getHeaderLength(buffer);\n        if (!aacHeader) {\n            aacHeader = buffer.subarray(0, headerLength);\n        }\n\n        while (i < length) {\n            frameLength = AACParser.getFrameLength(buffer);\n            result.push(buffer.subarray(headerLength, frameLength));\n            buffer = buffer.slice(frameLength);\n            i += frameLength;\n        }\n        return result;\n    }\n\n    constructor(remuxer) {\n        this.remuxer = remuxer;\n        this.track = remuxer.mp4track;\n    }\n\n    setAACConfig()\n    {\n        let objectType,\n            sampleIndex,\n            channelCount,\n            config = new Uint8Array(2),\n            headerData = AACParser.getAACHeaderData;\n\n\n        if (!headerData) return;\n            \n        objectType = ((headerData[2] & 0xC0) >>> 6) + 1;\n        sampleIndex = ((headerData[2] & 0x3C) >>> 2);\n        channelCount = ((headerData[2] & 0x01) << 2);\n        channelCount |= ((headerData[3] & 0xC0) >>> 6);\n\n        /* refer to http://wiki.multimedia.cx/index.php?title=MPEG-4_Audio#Audio_Specific_Config */\n        config[0] = objectType << 3;\n        config[0] |= (sampleIndex & 0x0E) >> 1;\n        config[1] |= (sampleIndex & 0x01) << 7;\n        config[1] |= channelCount << 3;\n\n        this.track.codec = 'mp4a.40.' + objectType;\n        this.track.channelCount = channelCount;\n        this.track.config = config;\n        this.remuxer.readyToDecode = true;\n    }\n}\n\n\n//# sourceURL=webpack://BoncH5Player/./src/h264player/parsers/aac.js?");

/***/ }),

/***/ "./src/h264player/parsers/h264.js":
/*!****************************************!*\
  !*** ./src/h264player/parsers/h264.js ***!
  \****************************************/
/*! exports provided: H264Parser */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"H264Parser\", function() { return H264Parser; });\n/* harmony import */ var _util_exp_golomb_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../util/exp-golomb.js */ \"./src/util/exp-golomb.js\");\n/* harmony import */ var _util_nalu_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../util/nalu.js */ \"./src/util/nalu.js\");\n\n\n\n\nclass H264Parser {\n\n    static extractNALu(buffer)\n    {\n        let i = 0,\n            length = buffer.byteLength,\n            value,\n            state = 0,\n            result = [],\n            lastIndex;\n       // debug.log('length='+length);\n        while (i < length) {\n            value = buffer[i++];\n            // finding 3 or 4-byte start codes (00 00 01 OR 00 00 00 01)\n            //debug.log('state='+state);\n            switch (state) {\n                case 0:\n                    if (value === 0) {\n                        state = 1;\n                    }\n                    break;\n                case 1:\n                    if (value === 0) {\n                        state = 2;\n                    } else {\n                        state = 0;\n                    }\n                    break;\n                case 2:\n                case 3:\n                    if (value === 0)\n                    {\n                        state = 3;\n                    }\n                    else if (value === 1 && i < length)\n                    {\n                        if (lastIndex)\n                        {\n                            result.push(buffer.subarray(lastIndex, i - state -1));\n                        }\n                        lastIndex = i;\n                        state = 0;\n                    }\n                    else\n                        {\n                        state = 0;\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n\n        if (lastIndex) {\n            result.push(buffer.subarray(lastIndex, length));\n        }\n        return result;\n    }\n\n    /**\n     * Advance the ExpGolomb decoder past a scaling list. The scaling\n     * list is optionally transmitted as part of a sequence parameter\n     * set and is not relevant to transmuxing.\n     * @param decoder {ExpGolomb} exp golomb decoder\n     * @param count {number} the number of entries in this scaling list\n     * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n     */\n    static skipScalingList(decoder, count) {\n        let lastScale = 8,\n            nextScale = 8,\n            deltaScale;\n        for (let j = 0; j < count; j++) {\n            if (nextScale !== 0) {\n                deltaScale = decoder.readEG();\n                nextScale = (lastScale + deltaScale + 256) % 256;\n            }\n            lastScale = (nextScale === 0) ? lastScale : nextScale;\n        }\n    }\n\n    /**\n     * Read a sequence parameter set and return some interesting video\n     * properties. A sequence parameter set is the H264 metadata that\n     * describes the properties of upcoming video frames.\n     * @param data {Uint8Array} the bytes of a sequence parameter set\n     * @return {object} an object with configuration parsed from the\n     * sequence parameter set, including the dimensions of the\n     * associated video frames.\n     */\n    static readSPS(data) {\n        let decoder = new _util_exp_golomb_js__WEBPACK_IMPORTED_MODULE_0__[\"ExpGolomb\"](data);\n        let frameCropLeftOffset = 0,\n            frameCropRightOffset = 0,\n            frameCropTopOffset = 0,\n            frameCropBottomOffset = 0,\n            sarScale = 1,\n            profileIdc,\n            profileCompat,\n            levelIdc,\n            numRefFramesInPicOrderCntCycle,\n            picWidthInMbsMinus1,\n            picHeightInMapUnitsMinus1,\n            frameMbsOnlyFlag,\n            scalingListCount;\n        decoder.readUByte();\n        profileIdc = decoder.readUByte(); // profile_idc\n        profileCompat = decoder.readBits(5); // constraint_set[0-4]_flag, u(5)\n        decoder.skipBits(3); // reserved_zero_3bits u(3),\n        levelIdc = decoder.readUByte(); // level_idc u(8)\n        decoder.skipUEG(); // seq_parameter_set_id\n        // some profiles have more optional data we don't need\n        if (profileIdc === 100 ||\n            profileIdc === 110 ||\n            profileIdc === 122 ||\n            profileIdc === 244 ||\n            profileIdc === 44 ||\n            profileIdc === 83 ||\n            profileIdc === 86 ||\n            profileIdc === 118 ||\n            profileIdc === 128) {\n            var chromaFormatIdc = decoder.readUEG();\n            if (chromaFormatIdc === 3) {\n                decoder.skipBits(1); // separate_colour_plane_flag\n            }\n            decoder.skipUEG(); // bit_depth_luma_minus8\n            decoder.skipUEG(); // bit_depth_chroma_minus8\n            decoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n            if (decoder.readBoolean()) { // seq_scaling_matrix_present_flag\n                scalingListCount = (chromaFormatIdc !== 3) ? 8 : 12;\n                for (let i = 0; i < scalingListCount; ++i) {\n                    if (decoder.readBoolean()) { // seq_scaling_list_present_flag[ i ]\n                        if (i < 6) {\n                            H264Parser.skipScalingList(decoder, 16);\n                        } else {\n                            H264Parser.skipScalingList(decoder, 64);\n                        }\n                    }\n                }\n            }\n        }\n        decoder.skipUEG(); // log2_max_frame_num_minus4\n        var picOrderCntType = decoder.readUEG();\n        if (picOrderCntType === 0) {\n            decoder.readUEG(); // log2_max_pic_order_cnt_lsb_minus4\n        } else if (picOrderCntType === 1) {\n            decoder.skipBits(1); // delta_pic_order_always_zero_flag\n            decoder.skipEG(); // offset_for_non_ref_pic\n            decoder.skipEG(); // offset_for_top_to_bottom_field\n            numRefFramesInPicOrderCntCycle = decoder.readUEG();\n            for (let i = 0; i < numRefFramesInPicOrderCntCycle; ++i) {\n                decoder.skipEG(); // offset_for_ref_frame[ i ]\n            }\n        }\n        decoder.skipUEG(); // max_num_ref_frames\n        decoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n        picWidthInMbsMinus1 = decoder.readUEG();\n        picHeightInMapUnitsMinus1 = decoder.readUEG();\n        frameMbsOnlyFlag = decoder.readBits(1);\n        if (frameMbsOnlyFlag === 0) {\n            decoder.skipBits(1); // mb_adaptive_frame_field_flag\n        }\n        decoder.skipBits(1); // direct_8x8_inference_flag\n        if (decoder.readBoolean()) { // frame_cropping_flag\n            frameCropLeftOffset = decoder.readUEG();\n            frameCropRightOffset = decoder.readUEG();\n            frameCropTopOffset = decoder.readUEG();\n            frameCropBottomOffset = decoder.readUEG();\n        }\n        if (decoder.readBoolean()) {\n            // vui_parameters_present_flag\n            if (decoder.readBoolean()) {\n                // aspect_ratio_info_present_flag\n                let sarRatio;\n                const aspectRatioIdc = decoder.readUByte();\n                switch (aspectRatioIdc) {\n                    case 1: sarRatio = [1, 1]; break;\n                    case 2: sarRatio = [12, 11]; break;\n                    case 3: sarRatio = [10, 11]; break;\n                    case 4: sarRatio = [16, 11]; break;\n                    case 5: sarRatio = [40, 33]; break;\n                    case 6: sarRatio = [24, 11]; break;\n                    case 7: sarRatio = [20, 11]; break;\n                    case 8: sarRatio = [32, 11]; break;\n                    case 9: sarRatio = [80, 33]; break;\n                    case 10: sarRatio = [18, 11]; break;\n                    case 11: sarRatio = [15, 11]; break;\n                    case 12: sarRatio = [64, 33]; break;\n                    case 13: sarRatio = [160, 99]; break;\n                    case 14: sarRatio = [4, 3]; break;\n                    case 15: sarRatio = [3, 2]; break;\n                    case 16: sarRatio = [2, 1]; break;\n                    case 255: {\n                        sarRatio = [decoder.readUByte() << 8 | decoder.readUByte(), decoder.readUByte() << 8 | decoder.readUByte()];\n                        break;\n                    }\n                }\n                if (sarRatio) {\n                    sarScale = sarRatio[0] / sarRatio[1];\n                }\n            }\n            if (decoder.readBoolean()) { decoder.skipBits(1); }\n\n            if (decoder.readBoolean()) {\n                decoder.skipBits(4);\n                if (decoder.readBoolean()) {\n                    decoder.skipBits(24);\n                }\n            }\n            if (decoder.readBoolean()) {\n                decoder.skipUEG();\n                decoder.skipUEG();\n            }\n            if (decoder.readBoolean()) {\n                let unitsInTick = decoder.readUInt();\n                let timeScale = decoder.readUInt();\n                let fixedFrameRate = decoder.readBoolean();\n                let frameDuration = timeScale / (2 * unitsInTick);\n            }\n        }\n        return {\n            width: Math.ceil((((picWidthInMbsMinus1 + 1) * 16) - frameCropLeftOffset * 2 - frameCropRightOffset * 2) * sarScale),\n            height: ((2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16) - ((frameMbsOnlyFlag ? 2 : 4) * (frameCropTopOffset + frameCropBottomOffset)),\n        };\n    }\n\n    constructor(remuxer) {\n        this.remuxer = remuxer;\n        this.track = remuxer.mp4track;\n    }\n\n    parseSPS(sps) {\n        var config = H264Parser.readSPS(new Uint8Array(sps));\n\n        this.track.width = config.width;\n        this.track.height = config.height;\n        this.track.sps = [new Uint8Array(sps)];\n        this.track.codec = 'avc1.';\n\n        let codecarray = new DataView(sps.buffer, sps.byteOffset + 1, 4);\n        for (let i = 0; i < 3; ++i) {\n            var h = codecarray.getUint8(i).toString(16);\n            if (h.length < 2) {\n                h = '0' + h;\n            }\n            this.track.codec += h;\n        }\n    }\n\n    parsePPS(pps) {\n        this.track.pps = [new Uint8Array(pps)];\n        console.log('parsePPS',this.track.pps)\n    }\n\n    parseNAL(unit)\n    {\n        if (!unit) return false;\n\n        let push = false;\n        switch (unit.type())\n        {\n            case _util_nalu_js__WEBPACK_IMPORTED_MODULE_1__[\"NALU\"].NDR:\n                push = true;\n                break;\n            case _util_nalu_js__WEBPACK_IMPORTED_MODULE_1__[\"NALU\"].IDR:\n                push = true;\n                break;\n            case _util_nalu_js__WEBPACK_IMPORTED_MODULE_1__[\"NALU\"].PPS:\n                if (!this.track.pps)\n                {\n                    this.parsePPS(unit.getData().subarray(4));\n                    //debug.log('解析pps=');\n                    if (!this.remuxer.readyToDecode && this.track.pps && this.track.sps)\n                    {\n                        this.remuxer.readyToDecode = true;\n                    }\n                }\n                push = true;\n                break;\n            case _util_nalu_js__WEBPACK_IMPORTED_MODULE_1__[\"NALU\"].SPS:\n                if (!this.track.sps)\n                {\n                    this.parseSPS(unit.getData().subarray(4));\n                    //debug.log('解析sps=');\n                    if (!this.remuxer.readyToDecode && this.track.pps && this.track.sps)\n                    {\n                        this.remuxer.readyToDecode = true;\n                    }\n                }\n                push = true;\n                break;\n            case _util_nalu_js__WEBPACK_IMPORTED_MODULE_1__[\"NALU\"].AUD:\n                //debug.log('AUD - ignoing and disable HD mode for live channel');\n                if (this.remuxer.isHDAvail) {\n                    this.remuxer.isHDAvail = false;\n                }\n                break;\n            case _util_nalu_js__WEBPACK_IMPORTED_MODULE_1__[\"NALU\"].SEI:\n                //debug.log('SEI - ignoing');\n                break;\n            default:\n        }\n        return push;\n    }\n}\n\n\n//# sourceURL=webpack://BoncH5Player/./src/h264player/parsers/h264.js?");

/***/ }),

/***/ "./src/h264player/player.js":
/*!**********************************!*\
  !*** ./src/h264player/player.js ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"./src/h264player/utils.js\");\n/* harmony import */ var _controller_remux_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./controller/remux.js */ \"./src/h264player/controller/remux.js\");\n/* harmony import */ var _controller_buffer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./controller/buffer.js */ \"./src/h264player/controller/buffer.js\");\n/* harmony import */ var _util_nalu_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/nalu.js */ \"./src/util/nalu.js\");\n\n\n\n\n\n/**\n * 按张建荣的思路编写的\n */\nclass H264Mp4Player {\n    constructor(app){\n        this.app = app;\n        let defaults = {\n            // node: videoid,\n            flushingTime: 1000,\n            clearBuffer: true,\n            onReady: null, // function called when MSE is ready to accept frames\n            fps: 25,\n            debug: true\n        };\n        this.options = defaults;\n        if (!this.options.fps) {\n            this.options.fps = 25;\n        }\n        this.frameDuration = (1000 / this.options.fps) | 0;\n\n        this.nalsboncarr = [];\n        this.nalsboncarrReverseCachQueue = [];\n        this.nalsbonAudioarr=[];\n        this.extractNALubonc = _utils__WEBPACK_IMPORTED_MODULE_0__[\"extractNALubonc\"].bind(this);\n        this.remuxController = new _controller_remux_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](true);\n        this.remuxController.on('videoPrepare',this.onVideoPrepared.bind(this));\n        this.remuxController.addTrack('both');\n        this.lastCleaningTime = Date.now();\n        this.keyframeCache = [];\n        this.frameCounter  = 0;\n        this.sourceBuffers = {};\n        this.isMSESupported = !!window.MediaSource;\n        if (!this.isMSESupported)\n        {\n            throw 'Oops! Browser does not support media source extension.';\n        }\n\n        this.setupMSE();\n        //生成mp4buffer的回调\n        this.remuxController.on('buffer', this.onBuffer.bind(this));\n        //RemuxController ready事件的回调\n        this.remuxController.on('ready', this.createBuffer.bind(this));\n        this.spsnal=null;\n        this.ppsnal=null;\n        this.spspps=false;\n        this.cacheNum = 0;\n    }\n\n    onVideoPrepared(){\n        this.app.dispatch('startSuccess')\n    }\n    playBuffer(videobuffer){\n        this.extractNALubonc(new Uint8Array(videobuffer));\n        this.PlayNals();\n        this.releaseBuffer();    \n        this.clearBuffer();\n    }\n    playBfferReverse(videobuffer){\n        \n        this.extractNALubonc(new Uint8Array(videobuffer));\n        // 非关键帧返回 0 \n        var cacheState = this.PlayNalsReverse();\n        // 只有收到关键帧的时候会 releaseBuffer clearBuffer\n        if(cacheState==1){\n            this.releaseBuffer();\n            this.clearBufferReverse();\n        }\n    }\n    clearReverseInterval(){\n        if(this.reversePlayInterval){\n            clearInterval(this.reversePlayInterval);\n        }\n    }\n    // 倒放的状态\n    playReverse(palyRate=1){\n        this.app.node.pause();\n        var fps = 25 * palyRate; // 每秒多少帧\n        if(this.reversePlayInterval){\n            clearInterval(this.reversePlayInterval);\n        }\n        // console.log(this.app.node.buffered.end(0),this.app.node.buffered.start(0))\n        // debugger\n        this.currentRange = this.bufferControllers['video'].rangeList.pop()\n        // this.bufferControllers['video'].on('bufferAppended',()=>{\n        //     console.log('append之后',this.app.node.buffered.end(0),this.app.node.buffered.start(0));\n        // }) \n        this.timeend = this.app.node.buffered.end(0);\n        this.app.node.currentTime =  this.app.node.buffered.end(0);\n        this.reversePlayInterval = setInterval(() => {\n            //console.log(this.app.node.buffered.end(0),this.app.node.buffered.start(0))\n            // 在边际\n            // if(this.app.node.currentTime<this.currentRange[0]){\n            // // if(false){\n                \n            //     this.currentRange = this.bufferControllers['video'].rangeList.pop()\n            //     this.app.node.currentTime = this.currentRange[1];\n            //     console.log('切换位置',this.app.node.currentTime);\n            // }else{\n            //     // 不在边际  \n            //     console.log('不在边际,before',this.app.node.currentTime);\n            //     this.app.node.currentTime += -(1/fps);\n            //     console.log('不在边际,after',this.app.node.currentTime);\n            // }\n            // console.log(this.app.node.currentTime,this.currentRange)\n            if(this.app.node.currentTime<this.timeend-2){\n                // console.log('在边际')\n                this.app.node.currentTime =  this.app.node.buffered.end(0);\n                this.timeend = this.app.node.buffered.end(0);\n            }else{\n                // 不在边际            \n                this.app.node.currentTime += -(1/fps); \n                // console.log('不在边际')\n                \n            }\n            \n        }, 1000/fps);\n        console.log(this.reversePlayInterval) ;\n    }\n    /**\n     * RemuxController ready事件的回调\n     */\n    createBuffer(){\n        if (!this.mseReady || !this.remuxController || !this.remuxController.isReady() || this.bufferControllers) return;\n        this.bufferControllers = {};\n\n        for (let type in this.remuxController.tracks){\n            let track = this.remuxController.tracks[type];\n\n            let sb;\n\n            if(type=='audio'){\n                if(this.remuxController.hasAudio==false) return;\n                let audioCodec ='audio/mp4; codecs='+'mp4a.40.' + 2;\n                sb = this.mediaSource.addSourceBuffer(audioCodec);\n            }else{\n                // debugger\n                sb = this.mediaSource.addSourceBuffer(`${type}/mp4; codecs=\"${track.mp4track.codec}\"`);\n            }\n            sb.mode ='sequence'\n            this.bufferControllers[type] = new _controller_buffer_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](sb,type,this.app.node);\n            this.sourceBuffers[type] = sb;\n            this.bufferControllers[type].on('error', this.onBufferError.bind(this));\n            // this.bufferControllers['video'].on('bufferAppended',()=>{\n            //     if(this.app.node.buffered.length>0)\n            //     console.log('append之后',this.app.node.buffered.end(0),this.app.node.buffered.start(0));\n            // })\n        }\n        \n    }\n    onBuffer(data){\n        if (this.bufferControllers && this.bufferControllers[data.type])\n        {\n            this.bufferControllers[data.type].feed(data.payload);\n        }\n    }\n\n    onBufferError(data) {\n        if (data.name == 'QuotaExceeded') {\n            this.bufferControllers[data.type].initCleanup(this.app.node.currentTime);\n            return;\n        }\n        if (this.mediaSource.sourceBuffers.length > 0 && this.sourceBuffers[data.type]) {\n            this.mediaSource.removeSourceBuffer(this.sourceBuffers[data.type]);\n        }\n        if (this.mediaSource.sourceBuffers.length == 0) {\n            try {\n                this.mediaSource.endOfStream();\n            } catch (e) {\n                console.error('mediasource is not available to end');\n            }\n        }\n    }\n\n    /**\n     * 停止播放\n     */\n    destroy(){\n        if (this.mediaSource) {\n            try {\n                if (this.bufferControllers){\n                    let SBs = this.mediaSource.sourceBuffers;\n                    if (SBs.length>0 && SBs[0].updating===false && this.mediaSource.readyState === 'open'){\n                       this.mediaSource.endOfStream();\n                       this.mediaSource.removeSourceBuffer(SBs[0]);\n                    }\n                }\n            } catch (e) {\n                console.error(`mediasource is not available to end ${e.message}`);\n            }\n            this.mediaSource = null;\n        }\n        if (this.remuxController) {\n            this.remuxController.destroy();\n            this.remuxController = null;\n        }\n        if (this.bufferControllers) {\n            for (let type in this.bufferControllers) {\n                this.bufferControllers[type].destroy();\n            }\n            this.bufferControllers = null;\n        }\n        this.node = false;\n        this.mseReady = false;\n        this.videoStarted = false;\n    }\n\n /*-------------------------------内部方法--------------------------------------  */   \n    \n    setupMSE() {\n        if(!window.MediaSource) {\n            throw '当前浏览器不支持视频'; \n        }\n        this.mediaSource = new MediaSource();\n        this.app.node.src = URL.createObjectURL(this.mediaSource);\n        this.mediaSource.addEventListener('sourceopen', this.onMSEOpen.bind(this));\n        this.mediaSource.addEventListener('sourceclose', this.onMSEClose.bind(this));\n        this.mediaSource.addEventListener('webkitsourceopen', this.onMSEOpen.bind(this));\n        this.mediaSource.addEventListener('webkitsourceclose', this.onMSEClose.bind(this));\n    }\n\n    /* Events on MSE */\n    onMSEOpen() {\n        this.mseReady = true;\n        if (typeof this.options.onReady === 'function') {\n            this.options.onReady();\n            this.options.onReady = null;\n        }\n        this.app.dispatch('videoPrepared');\n    }\n\n    onMSEClose() {\n        this.mseReady = false;\n        this.videoStarted = false;\n    }\n    PlayNals(){\n        var nalarr=[];\n        var nal=this.nalsboncarr.shift();\n        var nalType=nal[0] & 0x1f;\n        //debug.log('nalType==',nalType);\n        if(this.spspps===false)\n        {\n            if(nalType==7)\n            {\n                this.spsnal=nal;\n                //debug.log('找到sps=');\n                return;\n            }\n            else if(nalType==8)\n            {\n                this.ppsnal=nal;\n                //debug.log('找到pps=');\n                return;\n            }\n\n            if(this.spsnal!=null && this.ppsnal!=null)\n            {\n                nalarr.push(this.spsnal);\n                nalarr.push(this.ppsnal);\n                nalarr.push(nal);\n                this.spspps=true;\n            }\n\n            if(this.spspps==false) {\n                // console.log(nalType)\n                return;\n            }\n        }\n        else\n        {\n            if(nalType!=7 && nalType!=8 )\n            {\n                nalarr.push(nal);\n            }\n        }\n\n        let chunks = {\n            video: [],\n            audio: []\n        };\n\n        if(this.nalsbonAudioarr.length>0)\n        {\n            // debugger\n            let arr=[];\n            arr.push(this.nalsbonAudioarr.shift());\n            chunks.audio=arr;\n\n            this.remuxController.hasAudio=true;\n        }\n\n        // console.log('nalarr',nalarr.length)\n        chunks.video = this.getVideoFrames(nalarr, 0);\n        if(chunks.video.length===0){\n            return\n        }\n        this.remuxController.remux(chunks);\n    }\n    PlayNalsReverse(){\n        \n        var nal=this.nalsboncarr.shift();\n        var nalType=nal[0] & 0x1f;\n        //debug.log('nalType==',nalType);\n        if(this.spspps===false)\n        {\n            if(nalType==7)\n            {\n                this.spsnal=nal;\n                //debug.log('找到sps=');\n                return;\n            }\n            else if(nalType==8)\n            {\n                this.ppsnal=nal;\n                //debug.log('找到pps=');\n                return;\n            }\n\n            if(this.spsnal!=null && this.ppsnal!=null)\n            {\n                nalarr.push(this.spsnal);\n                nalarr.push(this.ppsnal);\n                nalarr.push(nal);\n                this.spspps=true;\n            }\n\n            if(this.spspps==false) {\n                console.log(nalType)\n                return;\n            }\n        }\n        else\n        {\n            if(nalType!=7 && nalType!=8)\n            {\n                if(nalType==1){\n                    // 非关键帧\n                    this.nalsboncarrReverseCachQueue.unshift(nal);\n                    return 0\n                }else if(nalType==5){\n                    // 关键帧\n                    this.nalsboncarrReverseCachQueue.unshift(nal);\n                    this.cacheNum++ ;\n                    if(this.cacheNum>1){\n                        this.cacheNum = 0;\n                        return 1;\n                    }else{\n                        return 0;\n                    }\n                }\n                \n            }\n        }\n\n        let chunks = {\n            video: [],\n            audio: []\n        };\n\n        // console.log('nalarr',nalarr.length)\n        chunks.video = this.getVideoFrames(this.nalsboncarrReverseCachQueue, 0);\n        if(chunks.video.length===0){\n            return\n        }\n        this.remuxController.remux(chunks);\n        this.nalsboncarrReverseCachQueue = [];\n    }    \n    \n    /**\n     * 对每个bufferController执行doAppend()方法\n     */\n    releaseBuffer(){\n        for (let type in this.bufferControllers) {\n            this.bufferControllers[type].doAppend();\n        }\n    }\n\n    clearBuffer(){\n        if (this.app.node.buffered.length > 0){\n            \n            let bufferLength = this.app.node.buffered.end(0) - this.app.node.currentTime;\n            this.bufferControllers['video'].rangeList = this.bufferControllers['video'].rangeList.filter((item)=>{\n                // console.log(item[1], this.app.node.currentTime, item[1] - this.app.node.currentTime)\n                return item[1] > this.app.node.currentTime;\n            })\n            if(bufferLength>0){\n                this.app.node.play();\n                this.app.node.playbackRate = 1;\n            }\n            else if(bufferLength>2 && bufferLength<=3){\n                this.app.node.playbackRate = 1;\n                \n            }\n            else if(bufferLength>3 && bufferLength<=5){\n                this.app.node.playbackRate = 1.25;\n                // console.log('加速=1.25');\n            }\n            else if(bufferLength>5 && bufferLength<=7){\n                this.app.node.playbackRate = 2;\n                // console.log('加速=2');\n            }\n            else if(bufferLength>7 && bufferLength<=9){\n                \n                this.app.node.playbackRate = 4;\n                // console.log('加速=4',bufferLength);\n            }else if(bufferLength>9 && bufferLength<=11){\n                this.app.node.playbackRate = 5;\n                // console.log('加速=5',bufferLength);\n            }else if(bufferLength>11 && bufferLength<=14){\n                this.app.node.playbackRate = 6;\n                // console.log('加速=6',bufferLength);\n            }else if(bufferLength>14 && bufferLength<=16){\n                this.app.node.playbackRate = 7;\n                // console.log('加速=7',bufferLength);\n            }else if(bufferLength>16 && bufferLength<=20){\n                this.app.node.playbackRate = 8;\n                // console.log('加速=8',bufferLength);\n            }else if(bufferLength>20){\n                this.app.node.playbackRate = 15                                                                                    ;\n                // console.log('加速=16',bufferLength);\n            }\n        }\n\n\n        if (this.options.clearBuffer && (Date.now() - this.lastCleaningTime) > 3000){\n            for (let type in this.bufferControllers){\n                let cleanMaxLimit = this.getSafeBufferClearLimit(this.app.node.currentTime);\n                this.bufferControllers[type].initCleanup(cleanMaxLimit);\n            }\n            this.lastCleaningTime = Date.now();\n        }\n    }\n    \n    // 倒放的时候清理过多的buffer\n    clearBufferReverse(){\n        // let bufferLength =  - this.app.node.currentTime-this.app.node.buffered.start(0)\n        // console.log(bufferLength);\n        if (this.options.clearBuffer && (Date.now() - this.lastCleaningTime) > 3000){\n            for (let type in this.bufferControllers){\n                let cleanMaxLimit = this.getSafeBufferClearLimit(this.app.node.currentTime);\n                this.bufferControllers[type].initCleanup(cleanMaxLimit);\n            }\n            this.lastCleaningTime = Date.now();\n        }\n    }\n\n    /**\n     * \n     * @param {*} nalus nal单元 \n     * @param {*} duration \n    */\n    getVideoFrames(nalus, duration){\n        let nalu,\n            units = [],\n            samples = [],\n            naluObj,\n            sampleDuration,\n            adjustDuration = 0,\n            numberOfFrames = [];\n\n        for (nalu of nalus){\n            naluObj = new _util_nalu_js__WEBPACK_IMPORTED_MODULE_3__[\"NALU\"](nalu);\n            // debug.log('帧类型='+naluObj.type());\n            units.push(naluObj);\n            // NALU.IDR 5关键帧    NALU.NDR 1非关键帧\n            if (naluObj.type() === _util_nalu_js__WEBPACK_IMPORTED_MODULE_3__[\"NALU\"].IDR || naluObj.type() === _util_nalu_js__WEBPACK_IMPORTED_MODULE_3__[\"NALU\"].NDR)\n            {\n                // console.log(naluObj.type())\n                samples.push({units});\n                units = [];\n                if (this.options.clearBuffer)\n                {\n                    if (naluObj.type() === _util_nalu_js__WEBPACK_IMPORTED_MODULE_3__[\"NALU\"].IDR)\n                    {\n                        numberOfFrames.push(this.frameCounter);\n                    }\n                    this.frameCounter++;\n                }\n            }\n        } \n        \n        if (duration) {\n            sampleDuration = duration / samples.length | 0;\n            adjustDuration = (duration - (sampleDuration * samples.length));\n        } else {\n            sampleDuration = this.frameDuration;\n        }\n        samples.map((sample) => {\n            sample.duration = adjustDuration > 0 ? (sampleDuration + 1) : sampleDuration;\n            if (adjustDuration !== 0) {\n                adjustDuration--;\n            }\n        });\n\n        /* cache keyframe times if clearBuffer set true */\n        if (this.options.clearBuffer) {\n            numberOfFrames = numberOfFrames.map((total) => {\n                return (total * sampleDuration) / 1000;\n            });\n            this.keyframeCache = this.keyframeCache.concat(numberOfFrames);\n        }\n        return samples;\n    }\n\n    getSafeBufferClearLimit(offset) {\n        let maxLimit = (this.options.mode === 'audio' && offset) || 0,\n            adjacentOffset;\n\n        for (let i = 0; i < this.keyframeCache.length; i++) {\n            if (this.keyframeCache[i] >= offset) {\n                break;\n            }\n            adjacentOffset = this.keyframeCache[i];\n        }\n\n        if (adjacentOffset) {\n            this.keyframeCache = this.keyframeCache.filter( keyframePoint => {\n                if (keyframePoint < adjacentOffset) {\n                    maxLimit = keyframePoint;\n                }\n                return keyframePoint >= adjacentOffset;\n            });\n        }\n        \n        return maxLimit;\n    }\n\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (H264Mp4Player);\n\n//# sourceURL=webpack://BoncH5Player/./src/h264player/player.js?");

/***/ }),

/***/ "./src/h264player/remuxer/aac.js":
/*!***************************************!*\
  !*** ./src/h264player/remuxer/aac.js ***!
  \***************************************/
/*! exports provided: AACRemuxer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AACRemuxer\", function() { return AACRemuxer; });\n/* harmony import */ var _parsers_aac_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parsers/aac.js */ \"./src/h264player/parsers/aac.js\");\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base.js */ \"./src/h264player/remuxer/base.js\");\n\n\n\n\nclass AACRemuxer extends _base_js__WEBPACK_IMPORTED_MODULE_1__[\"BaseRemuxer\"] {\n\n    constructor() {\n        super();\n        this.readyToDecode = false;\n        this.nextDts = 0;\n        this.dts = 0;\n        this.timescale = 1000;\n        this.dataAAC;\n        this.mp4track = {\n            id: _base_js__WEBPACK_IMPORTED_MODULE_1__[\"BaseRemuxer\"].getTrackID(),\n            type: 'audio',\n            channelCount: 0,\n            len: 0,\n            fragmented: true,\n            timescale: this.timescale,\n            duration: this.timescale,\n            samples: [],\n            config: '',\n            codec: '',\n        };\n\n        this.samples = [];\n        this.aac = new _parsers_aac_js__WEBPACK_IMPORTED_MODULE_0__[\"AACParser\"](this);\n    }\n\n    resetTrack() {\n        this.readyToDecode = false;\n        this.mp4track.codec = '';\n        this.mp4track.channelCount = '';\n        this.mp4track.config = '';\n        this.mp4track.timescale = this.timescale;\n    }\n\n    remux(samples) {\n        // debugger\n        this.dataAAC=samples[0];\n\n    }\n\n    getPayload() {\n\n\n        return this.dataAAC;\n    }\n}\n\n\n//# sourceURL=webpack://BoncH5Player/./src/h264player/remuxer/aac.js?");

/***/ }),

/***/ "./src/h264player/remuxer/base.js":
/*!****************************************!*\
  !*** ./src/h264player/remuxer/base.js ***!
  \****************************************/
/*! exports provided: BaseRemuxer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BaseRemuxer\", function() { return BaseRemuxer; });\n\n\nlet track_id = 1;\nclass BaseRemuxer {\n\n    static getTrackID() {\n        return track_id++;\n    }\n    \n    constructor() {\n        this.seq = 1;\n    }\n\n    flush(){\n        this.seq++;\n        this.mp4track.len = 0;\n        this.mp4track.samples.length = 0;\n       // debug.log('mp4track');\n    }\n\n    isReady() {\n        if (!this.readyToDecode || !this.samples.length) return null;\n        return true;\n    }\n}\n\n\n//# sourceURL=webpack://BoncH5Player/./src/h264player/remuxer/base.js?");

/***/ }),

/***/ "./src/h264player/remuxer/h264.js":
/*!****************************************!*\
  !*** ./src/h264player/remuxer/h264.js ***!
  \****************************************/
/*! exports provided: H264Remuxer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"H264Remuxer\", function() { return H264Remuxer; });\n/* harmony import */ var _parsers_h264_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parsers/h264.js */ \"./src/h264player/parsers/h264.js\");\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base.js */ \"./src/h264player/remuxer/base.js\");\n\n\n\n\nclass H264Remuxer extends _base_js__WEBPACK_IMPORTED_MODULE_1__[\"BaseRemuxer\"] {\n\n    constructor() {\n        super();\n        this.readyToDecode = false;\n        this.nextDts = 0;\n        this.dts = 0;\n        this.timescale = 1000;\n\n        this.mp4track = {\n            id: _base_js__WEBPACK_IMPORTED_MODULE_1__[\"BaseRemuxer\"].getTrackID(),\n            type: 'video',\n            len: 0,\n            fragmented: true,\n            sps: '',\n            pps: '',\n            width: 0,\n            height: 0,\n            timescale: this.timescale,\n            duration: this.timescale,\n            samples: [],\n        };\n\n        this.samples = [];\n        this.h264 = new _parsers_h264_js__WEBPACK_IMPORTED_MODULE_0__[\"H264Parser\"](this);\n    }\n\n    resetTrack() {\n        this.readyToDecode = false;\n        this.mp4track.sps = '';\n        this.mp4track.pps = '';\n    }\n\n    remux(samples)\n    {\n        //debug.log('zjrh264remuxsamples=');\n        let sample,\n            units,\n            unit,\n            size,\n            keyFrame;\n        for (sample of samples) {\n            units = [];\n            size = 0;\n            keyFrame = false;\n            for (unit of sample.units)\n            {\n                if (this.h264.parseNAL(unit))\n                {\n                    units.push(unit);\n                    size += unit.getSize();\n                    if (!keyFrame)\n                    {\n                        keyFrame = unit.isKeyframe();\n                    }\n                }\n            }\n\n            if (units.length > 0 && this.readyToDecode)\n            {\n                this.mp4track.len += size;\n                this.samples.push({\n                    units: units,\n                    size: size,\n                    keyFrame: keyFrame,\n                    duration: sample.duration,\n                });\n            }\n        }\n    }\n\n    getPayload() {\n        if (!this.isReady()) {\n            return null;\n        }\n\n        let payload = new Uint8Array(this.mp4track.len);\n        let offset = 0;\n        let samples = this.mp4track.samples;\n        let mp4Sample,\n            duration;\n\n        this.dts = this.nextDts;\n\n        while (this.samples.length) {\n            let sample = this.samples.shift(),\n                units = sample.units;\n\n            duration = sample.duration;\n\n            if (duration <= 0) {\n                //debug.log(`remuxer: invalid sample duration at DTS: ${this.nextDts} :${duration}`);\n                this.mp4track.len -= sample.size;\n                continue;\n            }\n\n            this.nextDts += duration;\n            mp4Sample = {\n                size: sample.size,\n                duration: duration,\n                cts: 0,\n                flags: {\n                    isLeading: 0,\n                    isDependedOn: 0,\n                    hasRedundancy: 0,\n                    degradPrio: 0,\n                    isNonSync: sample.keyFrame ? 0 : 1,\n                    dependsOn: sample.keyFrame ? 2 : 1,\n                },\n            };\n\n            for (const unit of units) {\n                payload.set(unit.getData(), offset);\n                offset += unit.getSize();\n            }\n\n            samples.push(mp4Sample);\n        }\n\n        if (!samples.length) return null;\n\n        return new Uint8Array(payload.buffer, 0, this.mp4track.len);\n    }\n}\n\n\n//# sourceURL=webpack://BoncH5Player/./src/h264player/remuxer/h264.js?");

/***/ }),

/***/ "./src/h264player/utils.js":
/*!*********************************!*\
  !*** ./src/h264player/utils.js ***!
  \*********************************/
/*! exports provided: extractNALubonc */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"extractNALubonc\", function() { return extractNALubonc; });\n/**\n* 将一针数据提取为一个nal数组\n* @param {Uint8Array} buffer \n*/\nfunction extractNALubonc(buffer)\n{\n   let i = 0,\n       length = buffer.byteLength,\n       value,\n       state = 0,\n       lastIndex;\n   // debug.log('length='+length);\n   while (i < length) {\n       value = buffer[i++];\n       // finding 3 or 4-byte start codes (00 00 01 OR 00 00 00 01)\n       //debug.log('state='+state);\n       switch (state) {\n           case 0:\n               if (value === 0) {\n                   state = 1;\n               }\n               break;\n           case 1:\n               if (value === 0) {\n                   state = 2;\n               } else {\n                   state = 0;\n               }\n               break;\n           case 2:\n           case 3:\n               if (value === 0)\n               {\n                   state = 3;\n               }\n               else if (value === 1 && i < length)\n               {\n                   if (lastIndex)\n                   {\n                       this.nalsboncarr.push(buffer.subarray(lastIndex, i - state -1));\n                   }\n                   lastIndex = i;\n                   state = 0;\n               }\n               else\n               {\n                   state = 0;\n               }\n               break;\n           default:\n               break;\n       }\n   }\n\n   if (lastIndex) {\n       this.nalsboncarr.push(buffer.subarray(lastIndex, length));\n   }\n\n}\n\n//# sourceURL=webpack://BoncH5Player/./src/h264player/utils.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _util_event__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/event */ \"./src/util/event.js\");\n/* harmony import */ var _util_viladate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/viladate */ \"./src/util/viladate.js\");\n/* harmony import */ var _util_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util/utils */ \"./src/util/utils.js\");\n/* harmony import */ var _util_orderList__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./util/orderList */ \"./src/util/orderList.js\");\n/* harmony import */ var _util_WebSocketUtil__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./util/WebSocketUtil */ \"./src/util/WebSocketUtil.js\");\n/* harmony import */ var _h264player_player__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./h264player/player */ \"./src/h264player/player.js\");\n/* harmony import */ var _h264canvasplayer_player__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./h264canvasplayer/player */ \"./src/h264canvasplayer/player.js\");\n\n\n\n\n\n\n\n\nwindow.MediaSource = window.MediaSource || window.WebKitMediaSource;\nclass Html5Player extends _util_event__WEBPACK_IMPORTED_MODULE_0__[\"default\"]{\n  /*\n  名词解释\n  MSE media source extension\n  */ \n  /*\n  类的成员 对象\n  this.node video标签的dom对象 在构造函数中的validateConfigs执行的时候被赋值\n  this.state 播放器的状态 0未播放       1 正在播放  \n  this.boncws WebSocket 实例\n  */\n  /*\n  类的状态变量\n  this.mseReady = true\n  \n  回调：\n    1.视频准备中的回调\n    2.视频开始播放的回调\n    3.网络断开的回调\n  */\n    constructor(configs){\n        super();\n        let defaults = {            \n            flushingTime: 1000,\n            clearBuffer: true,\n            onReady: null, // function called when MSE is ready to accept frames\n            fps: 25\n        };\n        this.options = defaults;        \n        this.configs = configs;\n        this.state = 0;\n        this.speed = 1;\n        this.reverse = false;// 是否倒放\n        //实例化WebsocketUtil类\n        this.webSocketController = new _util_WebSocketUtil__WEBPACK_IMPORTED_MODULE_4__[\"default\"](this);\n        //实例化mp4Coder类\n        switch(configs.playerClassName){\n            case 'H264CanvasPlayer':\n                this._player = new _h264canvasplayer_player__WEBPACK_IMPORTED_MODULE_6__[\"default\"](this);\n                break;\n            default:\n                _util_viladate__WEBPACK_IMPORTED_MODULE_1__[\"validateConfigs\"].call(this,configs) //对配置项进行验证\n                this._player = new _h264player_player__WEBPACK_IMPORTED_MODULE_5__[\"default\"](this);\n                break;\n        }\n \n        //this.H264Mp4Player = new H264Mp4Player(this);\n        // this.H264CanvasPlayer = new H264CanvasPlayer(this);\n        const centerInfo = configs.centerInfo;\n        \n        if(centerInfo){\n            _util_utils__WEBPACK_IMPORTED_MODULE_2__[\"getChannelInfo\"].call(this,centerInfo.centerUrl,centerInfo.channelId,centerInfo.callBack);\n        }\n        \n        this.on('videoBufferAdd',this.videoBufferAdd.bind(this));\n        this.on('restartclose',this.restartAfterclose.bind(this));\n        this.on('changeclose',this.changeAfterclose.bind(this));\n        this.on('currentTime',function(time){\n            //time 为ms\n            this.currentTime = time;\n        }.bind(this));\n        this.on('onRecordInfo',function(jsondata){\n            if(parseInt(jsondata.Response.SumNum)>0){\n                this.recordStartTime = new Date(jsondata.Response.RecordList.Item[0].StartTime).getTime() ;\n                this.recordEndTime = new Date(jsondata.Response.RecordList.Item[0].EndTime).getTime() ;\n                for(var i = 1 ;i<jsondata.Response.RecordList.Item.length; i++){\n                    var time0 = new Date(jsondata.Response.RecordList.Item[i].StartTime).getTime();\n                    var time1 = new Date(jsondata.Response.RecordList.Item[i].EndTime).getTime();\n                    if(this.recordStartTime>time0){\n                        this.recordStartTime = time0 ;\n                    }\n                    if(this.recordEndTime<time1){\n                        this.recordEndTime  = time1 ;\n                    }\n                }\n            }\n        }.bind(this));\n        // this.on('elementInfo',function(elementInfo){\n        //     this.dispatch('elementInfo',elementInfo);\n        // }.bind(this))\n    }\n    /**\n     * 查询录像\n     * @param {object} xmljson \n     */\n    searchRecord(xmljson){\n        this.playback = true;\n        let playBody = Object(_util_utils__WEBPACK_IMPORTED_MODULE_2__[\"BLoadXML\"])(_util_orderList__WEBPACK_IMPORTED_MODULE_3__[\"xmlPlayBackSearch\"]);\n\t    \n        console.log(new Date(xmljson.endTime).getTime()/1000)\n        playBody.getElementsByTagName('EndTime')[0].firstChild.nodeValue = new Date(xmljson.endTime).getTime()/1000;\n        playBody.getElementsByTagName('StartTime')[0].firstChild.nodeValue = new Date(xmljson.startTime).getTime()/1000;\n        playBody.getElementsByTagName('ChannelID')[0].firstChild.nodeValue =xmljson.channelId;\n        this.channelId = xmljson.channelId;\n        playBody.getElementsByTagName('StreamServerPort')[0].firstChild.nodeValue =xmljson.streamServerPort;\n        playBody.getElementsByTagName('StreamServerIP')[0].firstChild.nodeValue =xmljson.streamServerIP;\n\n        this.xmlPlayBody=Object(_util_utils__WEBPACK_IMPORTED_MODULE_2__[\"Xml2String\"])(playBody);\n\n        this.webSocketController.xmlPlayBody = Object(_util_utils__WEBPACK_IMPORTED_MODULE_2__[\"Xml2String\"])(playBody);\n        this.webSocketController.url = 'ws://'+playBody.getElementsByTagName('StreamServerIP')[0].firstChild.nodeValue+':'+playBody.getElementsByTagName('StreamServerPort')[0].firstChild.nodeValue;\n        this.webSocketController.WebSocketInit('playback');\n    }\n    /**\n     * 打开实时视频 jsonbonc 为请求接口openChanneltForHtml返回的结果的对象\n     * @param {object} jsonbonc \n     */\n    openVideo(jsonbonc){\n        if(!jsonbonc && !this.jsonbonc){\n            console.warn('通道数据不存在，请确定是否完成通道信息的获取')\n            return;\n        }\n        this.dispatch('startVideo')\n        //验证jsonbonc\n        if(!this.jsonbonc){\n            this.jsonbonc = jsonbonc;\n        }\n        \n        if(!this._player) {\n            switch(this.configs.playerClassName){\n                case 'H264CanvasPlayer':\n                    this._player = new _h264canvasplayer_player__WEBPACK_IMPORTED_MODULE_6__[\"default\"](this);\n                    break;\n                default:\n                    this._player = new _h264player_player__WEBPACK_IMPORTED_MODULE_5__[\"default\"](this);\n                    break;\n            }\n        }\n        console.log('开始')\n        if(!Object(_util_viladate__WEBPACK_IMPORTED_MODULE_1__[\"validateChannelInfo\"])(jsonbonc)){\n            throw new Error('视频channel信息异常');\n        }\n        //如果当前播放器正在播放视频,先关闭当前视频\n        if(this.state !== 0){\n            this.closeVideo()\n        }\n        var playBody=Object(_util_utils__WEBPACK_IMPORTED_MODULE_2__[\"BLoadXML\"])(_util_orderList__WEBPACK_IMPORTED_MODULE_3__[\"xmlPlayBody\"]);\n        playBody.getElementsByTagName('DeviceType')[0].firstChild.nodeValue = jsonbonc.DeviceType;\n        playBody.getElementsByTagName('DeviceIP')[0].firstChild.nodeValue = jsonbonc.DeviceIP;\n        playBody.getElementsByTagName('StreamServerIP')[0].firstChild.nodeValue = jsonbonc.StreamServerIP;\n        playBody.getElementsByTagName('StreamServerPort')[0].firstChild.nodeValue = jsonbonc.StreamServerPort;\n        playBody.getElementsByTagName('DevicePort')[0].firstChild.nodeValue = jsonbonc.DevicePort;\n        playBody.getElementsByTagName('UserName')[0].firstChild.nodeValue = jsonbonc.UserName;\n        playBody.getElementsByTagName('PassWord')[0].firstChild.nodeValue = jsonbonc.PassWord;\n        playBody.getElementsByTagName('ChannelNum')[0].firstChild.nodeValue = jsonbonc.ChannelNum;\n\n        this.webSocketController.url = 'ws://'+playBody.getElementsByTagName('StreamServerIP')[0].firstChild.nodeValue+':'+playBody.getElementsByTagName('StreamServerPort')[0].firstChild.nodeValue;\n        this.webSocketController.xmlPlayBody = Object(_util_utils__WEBPACK_IMPORTED_MODULE_2__[\"Xml2String\"])(playBody);\n        this.webSocketController.WebSocketInit();\n    }\n\n    /**\n     * 实时回放\n     */\n    playVideoback(second){\n        if(second>30){\n            console.error('不得超过30s')\n            return\n        }\n        // 停止将收到的的内容放入队列\n        // debugger\n        this.webSocketController.socketDataMerge.ifDispatchBuf = false;\n        // 播放的针回到30s之前\n        // console.log(this.node.currentTime)\n        this.node.currentTime -= second;\n        setTimeout(()=>{\n            this.webSocketController.socketDataMerge.ifDispatchBuf = true;\n        },second*1000)\n    }\n    /**\n     *视频回放\n     */\n    playRecord(param){\n        this.reverse = false;\n        var playRecodrBody = Object(_util_utils__WEBPACK_IMPORTED_MODULE_2__[\"BLoadXML\"])(_util_orderList__WEBPACK_IMPORTED_MODULE_3__[\"xmlPlayRecord\"])\n        playRecodrBody.getElementsByTagName('ChannelID')[0].firstChild.nodeValue =param.channelId ;\n        playRecodrBody.getElementsByTagName('StartTime')[0].firstChild.nodeValue = param.startTime;\n        playRecodrBody.getElementsByTagName('EndTime')[0].firstChild.nodeValue = param.endTime;\n        playRecodrBody.getElementsByTagName('Speed')[0].firstChild.nodeValue = param.speed;\n        this.webSocketController.recordPlay(Object(_util_utils__WEBPACK_IMPORTED_MODULE_2__[\"Xml2String\"])(playRecodrBody))\n    }\n\n    /**\n     * 关闭视频（主动关闭视频）\n     */\n    closeVideo(reason){\n        this.webSocketController.boncws.normalClose(reason);\n        clearInterval(this.webSocketController.heartLiveInterval)\n        // this.H264Mp4Player.destroy();\n        this.node.src = '';\n        this._player.destroy();\n        this._player=null;\n        switch(this.configs.playerClassName){\n            case 'H264CanvasPlayer':\n                this._player = new _h264canvasplayer_player__WEBPACK_IMPORTED_MODULE_6__[\"default\"](this);\n                break;\n            default:\n                _util_viladate__WEBPACK_IMPORTED_MODULE_1__[\"validateConfigs\"].call(this,this.configs) //对配置项进行验证\n                this._player = new _h264player_player__WEBPACK_IMPORTED_MODULE_5__[\"default\"](this);\n                break;\n        }\n    }\n    /**重启视频 */\n    restartVideo(){\n        this.closeVideo('restart');\n        //this.openVideo(this.jsonbonc)\n    }\n    restartAfterclose(){\n        this.openVideo(this.jsonbonc)\n    }\n     \n    /**\n     * 开启码率计算 \n     */\n    startCalBitNum() {\n        this.webSocketController.socketDataMerge.controlCalBitRate()\n    }\n\n    /**\n     * 速度标识符\n     1\t正常速度\t\n     2\t2倍速\t\n     4\t4倍速\t\n     8\t8倍速\t\n     -2\t1/2倍速\t\n     -4\t1/4倍速\t\n     -8\t1/8倍速\t\n     * @param {number} rateVal \n     */\n    setPlayRate(rateVal){\n        var playxml = _util_orderList__WEBPACK_IMPORTED_MODULE_3__[\"xmlPlayControl\"];\n        var playxmlBody = Object(_util_utils__WEBPACK_IMPORTED_MODULE_2__[\"BLoadXML\"])(playxml);\n        this.speed = rateVal;\n        playxmlBody.getElementsByTagName('Speed')[0].firstChild.nodeValue = rateVal;\n        playxmlBody.getElementsByTagName('StartTime')[0].firstChild.nodeValue = this.currentTime;\n        this.webSocketController.playControl(Object(_util_utils__WEBPACK_IMPORTED_MODULE_2__[\"Xml2String\"])(playxmlBody))\n    }\n    /**\n     * 暂停\n     */\n    pause(){\n        var playxml = _util_orderList__WEBPACK_IMPORTED_MODULE_3__[\"xmlPlayControl\"];\n        var playxmlBody = Object(_util_utils__WEBPACK_IMPORTED_MODULE_2__[\"BLoadXML\"])(playxml);\n        playxmlBody.getElementsByTagName('Speed')[0].firstChild.nodeValue = 0;\n        playxmlBody.getElementsByTagName('StartTime')[0].firstChild.nodeValue = this.currentTime;\n        this.webSocketController.playControl(Object(_util_utils__WEBPACK_IMPORTED_MODULE_2__[\"Xml2String\"])(playxmlBody))\n    }\n    /**\n     * 继续播放\n     */\n    playContinue(){\n        \n        var playtime ;\n        // 判断是否存在倒放的定时器，如果存在倒放的定时器要销毁\n        \n        if(this.currentTime){\n            var playxml = _util_orderList__WEBPACK_IMPORTED_MODULE_3__[\"xmlPlayControl\"];\n            var playxmlBody = Object(_util_utils__WEBPACK_IMPORTED_MODULE_2__[\"BLoadXML\"])(playxml);\n            playxmlBody.getElementsByTagName('Speed')[0].firstChild.nodeValue = this.speed;\n            playtime = this.currentTime ; \n            playxmlBody.getElementsByTagName('StartTime')[0].firstChild.nodeValue = playtime;\n            this.webSocketController.playControl(Object(_util_utils__WEBPACK_IMPORTED_MODULE_2__[\"Xml2String\"])(playxmlBody))\n        }else{\n            var playxml = _util_orderList__WEBPACK_IMPORTED_MODULE_3__[\"xmlPlayRecord\"];\n            var playxmlBody = Object(_util_utils__WEBPACK_IMPORTED_MODULE_2__[\"BLoadXML\"])(playxml);            \n            playxmlBody.getElementsByTagName('Speed')[0].firstChild.nodeValue = this.speed;\n            playxmlBody.getElementsByTagName('StartTime')[0].firstChild.nodeValue = this.recordStartTime/1000;\n            playxmlBody.getElementsByTagName('EndTime')[0].firstChild.nodeValue = this.recordEndTime/1000;\n            playxmlBody.getElementsByTagName('ChannelID')[0].firstChild.nodeValue = this.channelId;\n            this.webSocketController.playControl(Object(_util_utils__WEBPACK_IMPORTED_MODULE_2__[\"Xml2String\"])(playxmlBody))\n        }\n        \n    }\n    playForward(){\n        var playxml = _util_orderList__WEBPACK_IMPORTED_MODULE_3__[\"xmlPlayRecord\"];\n        var playxmlBody = Object(_util_utils__WEBPACK_IMPORTED_MODULE_2__[\"BLoadXML\"])(playxml);            \n        playxmlBody.getElementsByTagName('Speed')[0].firstChild.nodeValue = this.speed;\n        var playtime = this.currentTime ; \n        playxmlBody.getElementsByTagName('StartTime')[0].firstChild.nodeValue = playtime;\n        \n        playxmlBody.getElementsByTagName('EndTime')[0].firstChild.nodeValue = this.recordEndTime/1000;\n        playxmlBody.getElementsByTagName('ChannelID')[0].firstChild.nodeValue = this.channelId;\n        this.webSocketController.playControl(Object(_util_utils__WEBPACK_IMPORTED_MODULE_2__[\"Xml2String\"])(playxmlBody));\n        \n        if(this._player.reversePlayInterval){\n            this._player.clearReverseInterval();\n            this.reverse = false;\n            this.node.play();\n        }\n    }\n\n    /**\n     * 倒放\n     */\n    reversePlay(){\n        this.reverse = true;\n        var playxml = _util_orderList__WEBPACK_IMPORTED_MODULE_3__[\"xmlPlayReverse\"];\n        var playxmlBody = Object(_util_utils__WEBPACK_IMPORTED_MODULE_2__[\"BLoadXML\"])(playxml);\n        playxmlBody.getElementsByTagName('Speed')[0].firstChild.nodeValue = this.speed*1;\n        // playxmlBody.getElementsByTagName('EndTime')[0].firstChild.nodeValue = this.currentTime;\n        playxmlBody.getElementsByTagName('StartTime')[0].firstChild.nodeValue = this.recordStartTime;\n        // playxmlBody.getElementsByTagName('CmdType')[0].firstChild.nodeValue = 'ReversePlay';\n        // playxmlBody.getElementsByTagName('ChannelID')[0].firstChild.nodeValue = this.channelId;    \n        this.webSocketController.playControl(Object(_util_utils__WEBPACK_IMPORTED_MODULE_2__[\"Xml2String\"])(playxmlBody));\n        // 向播放器发出倒放的指令\n        this._player.playReverse()\n    }\n\n    /**\n     * 逐帧播放\n     */\n    singleFramePlay(){\n        var playxml = _util_orderList__WEBPACK_IMPORTED_MODULE_3__[\"xmlPlayControl\"];\n        var playxmlBody = Object(_util_utils__WEBPACK_IMPORTED_MODULE_2__[\"BLoadXML\"])(playxml);\n        playxmlBody.getElementsByTagName('Speed')[0].firstChild.nodeValue = -1;\n        playxmlBody.getElementsByTagName('StartTime')[0].firstChild.nodeValue = 0;\n        this.webSocketController.playControl(Object(_util_utils__WEBPACK_IMPORTED_MODULE_2__[\"Xml2String\"])(playxmlBody));\n    }\n\n    /**\n     * 逐帧倒放\n     */\n    singleFrameReversePlay(){\n        var playxml = _util_orderList__WEBPACK_IMPORTED_MODULE_3__[\"xmlPlayControl\"];\n        var playxmlBody = Object(_util_utils__WEBPACK_IMPORTED_MODULE_2__[\"BLoadXML\"])(playxml);\n        playxmlBody.getElementsByTagName('Speed')[0].firstChild.nodeValue = -1;\n        playxmlBody.getElementsByTagName('StartTime')[0].firstChild.nodeValue = 0;\n        playxmlBody.getElementsByTagName('CmdType')[0].firstChild.nodeValue = 'ReversePlay';\n        this.webSocketController.playControl(Object(_util_utils__WEBPACK_IMPORTED_MODULE_2__[\"Xml2String\"])(playxmlBody));\n        \n    }\n\n    /**\n     * 切换视频\n     * @param {*} jsonbonc \n     */\n    changeVideo(jsonbonc){\n        // debugger\n        this.jsonbonc = jsonbonc;\n        this.closeVideo('change');\n    }\n\n\n    \n\n    // changeVideo(jsonbonc){\n    //     var playBody=BLoadXML(xmlPlayBody);\n    //     playBody.getElementsByTagName('DeviceType')[0].firstChild.nodeValue = jsonbonc.DeviceType;\n    //     playBody.getElementsByTagName('DeviceIP')[0].firstChild.nodeValue = jsonbonc.DeviceIP;\n    //     playBody.getElementsByTagName('StreamServerIP')[0].firstChild.nodeValue = jsonbonc.StreamServerIP;\n    //     playBody.getElementsByTagName('StreamServerPort')[0].firstChild.nodeValue = jsonbonc.StreamServerPort;\n    //     playBody.getElementsByTagName('DevicePort')[0].firstChild.nodeValue = jsonbonc.DevicePort;\n    //     playBody.getElementsByTagName('UserName')[0].firstChild.nodeValue = jsonbonc.UserName;\n    //     playBody.getElementsByTagName('PassWord')[0].firstChild.nodeValue = jsonbonc.PassWord;\n    //     playBody.getElementsByTagName('ChannelNum')[0].firstChild.nodeValue = jsonbonc.ChannelNum;\n    //     this.webSocketController.playControl(Xml2String(playBody));\n    // }\n\n    changeAfterclose(){\n        this.openVideo(this.jsonbonc)\n    }\n\n    /**\n     * 全屏\n     */\n    fullScreen(){\n        Object(_util_utils__WEBPACK_IMPORTED_MODULE_2__[\"fullScreen\"])(this.node)\n    }\n    \n    \n\n    videoBufferAdd(videoBuffer){\n        //this.H264Mp4Player.playBuffer(videoBuffer);\n        // this.H264CanvasPlayer.playBuffer(videoBuffer);\n        if(this.reverse){\n            // 倒放 ,需要将裸流加入到倒放队列\n            this._player.playBfferReverse(videoBuffer)\n        }else{\n            // 正放\n            this._player.playBuffer(videoBuffer) ;\n        }        \n    }\n\n   \n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Html5Player);\n\n//# sourceURL=webpack://BoncH5Player/./src/index.js?");

/***/ }),

/***/ "./src/util/ByteArray.js":
/*!*******************************!*\
  !*** ./src/util/ByteArray.js ***!
  \*******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ByteArray; });\nclass ByteArray\n{\n    constructor(ab,wholeOffset)\n    {\n        this.buffer = ab;\n        this.dataView = new DataView(ab);\n        //偏移量\n        this.offset=0;\n        this.bufferLength = wholeOffset===undefined?ab.byteLength:wholeOffset;\n    }\n\n    GetArrayBuffer()\n    {\n        return this.buffer;\n    }\n\n\n    get bytesAvailable()\n    {\n        //let diff = this.buffer.byteLength - this.offset;\n        let diff = this.bufferLength - this.offset;\n        if(diff < 0)\n        {\n            diff = 0;\n        }\n        return diff;\n    }\n\n\n\n    WriteString(str)\n    {\n        for (var i = 0; i < str.length; i++)\n        {\n            this.dataView.setUint8(this.offset + i, str.charCodeAt(i));//以大端字节序\n        }\n\n        this.offset+= str.length;\n    }\n\n    WriteUint32(value)\n    {\n        this.dataView.setUint32(this.offset, value);//以大端字节序\n        this.offset+= 4;\n    }\n\n    ReadUint32(little=false)\n    {\n        let result=null;\n        try{\n            result = this.dataView.getUint32(this.offset,little);\n            this.offset += 4;\n        }\n        catch(err){\n            debugger\n        }\n        \n        return result;\n    }\n    ReadUint64(little=false)\n    {\n        let result=null;\n        try{\n            result = this.dataView.getBigUint64(this.offset,true);\n            this.offset += 8;\n        }\n        catch(err){\n            debugger\n        }\n        \n        return result;\n    }\n\n    ReadUint16(little=false){\n        let result = this.dataView.getUint16(this.offset,little);\n        this.offset += 2;\n        return result;\n    }\n\n    ReadUint8()\n    {\n        let result = this.dataView.getUint8(this.offset);\n        this.offset += 1;\n        return result;\n    }\n\n    SliceNewAB(len,num=0)\n    {\n        let ab=this.buffer.slice((this.offset-num), (this.offset-num)+len);\n        this.offset += len-num;\n        return ab;\n    }\n\n    SetOffset(num)\n    {\n        this.offset += num;\n    }\n\n    ReadString(length)\n    {\n        let s = \"\";\n        for (let i = 0; i < length; i++)\n        {\n            s += String.fromCharCode(this.dataView.getUint8(this.offset));\n            this.offset += 1;\n        }\n        return s;\n    }\n\n    ReadInt53()\n    {\n        let long_h;\n        let long_l;\n\n        long_l = this.ReadUint32(true);//ba.readUnsignedInt();\n        long_h = this.ReadUint32(true);\n        // console.log(long_h,long_l)\n        let num = long_h*4294967296 + long_l;// 4294967296 = 2^32\n\n        return num;\n    }\n\n    \n\n}\n\n\n//# sourceURL=webpack://BoncH5Player/./src/util/ByteArray.js?");

/***/ }),

/***/ "./src/util/SocketDataMerge.js":
/*!*************************************!*\
  !*** ./src/util/SocketDataMerge.js ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _ByteArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ByteArray */ \"./src/util/ByteArray.js\");\n/* harmony import */ var _securityIDList__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./securityIDList */ \"./src/util/securityIDList.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils */ \"./src/util/utils.js\");\n/* harmony import */ var objtree__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! objtree */ \"./node_modules/objtree/index.js\");\n/* harmony import */ var objtree__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(objtree__WEBPACK_IMPORTED_MODULE_3__);\n\n//import {MergeBuffer} from './utils' ;\n// import {globalEvent} from './event' ;\n\n\n\n\nconst xotree = new objtree__WEBPACK_IMPORTED_MODULE_3___default.a();\n//company 1112757248 'BST '\nclass SocketDataMerge {\n    constructor(app){\n        this.app = app;\n        /**当前数据包是否异常 0:正常    1:异常 */\n        this.packageState = 0\n        // this.templateDataQueue = new ArrayBuffer(0);\n        //从服务端收到的数据都放在这里\n        this.websocketDataQueue = [] ;\n\n        this.videoDataQueue = [] ;\n\n        this.audioDataQueue = [] ;\n        this.packageNum = 0;\n        this.whole = new Uint8Array(1400000)//分配100*1400个字节的内存空间用于存储收到的数据\n        this.wholeOffset = 0;\n        this.start = false ;\n\n        this.drawfunc =null ;\n        this.isCalBitRate = false ;\n        this.t1;//t1用于计算码率\n        this.t2;//t2用于计算码率\n        this.accumulateBitNum = 0;\n        this.ifDispatchBuf = true;// 是否\n    }\n    controlCalBitRate(){\n        this.isCalBitRate = !this.isCalBitRate\n    }\n    // 计算码率\n    calBitRate(){\n        if(!this.t2 || !this.t1){\n            return\n        }\n        if((this.t2-this.t1)>3000){\n            this.app.dispatch('bitrate',Math.round((this.accumulateBitNum*8/((this.t2-this.t1)/1000))/1000)) ;\n            this.accumulateBitNum = 0 ;\n            this.t2 = this.t1 = undefined ;\n        }\n    }\n    addDataPackage(e){\n\n        //判断当前状态是否异常，并且不是第一个包，\n        \n        if(this.packageState){\n            // console.log('yichang')\n            // 数据异常\n            if(this.ifFirstPackage(e.data)){\n                this.packageState = 0;\n                this.wholeOffset = 0;\n            }else{\n                return;\n            }            \n        }\n\n        ///test code begin\n        // var socketBA = new ByteArray(this.whole.buffer,this.wholeOffset);\n        // if(socketBA.bytesAvailable >=28)\n        // {            \n        //     let verbonc=socketBA.ReadUint32();//verbonc\n        //     let company=socketBA.ReadUint32();//company\n        //     let imsgType=socketBA.ReadUint32();////消息类型\n        //     let linType=socketBA.ReadUint32();//指令类型\n        //     let iCmdLen=socketBA.ReadUint32();//指令长度\n        //     let allDataLength = socketBA.ReadUint32();//数据全长\n        //     let leftField = socketBA.ReadUint32();//保留字段\n        //     /// day rizhi  \n        //     console.log(imsgType,iCmdLen,linType,allDataLength)\n        // }\n                    \n        /// test code end\n        //处理message,判断包是否满了\n        if(this.ifFull()){\n            //如果满了\n            //this.packageNum = 0;\n            // var socketBA= new ByteArray(this.templateDataQueue);\n            var socketBA = new _ByteArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this.whole.buffer,this.wholeOffset);\n            let verbonc=socketBA.ReadUint32();//verbonc\n            let company=socketBA.ReadUint32();//company\n            let imsgType=socketBA.ReadUint32();////消息类型\n            let linType=socketBA.ReadUint32();//指令类型\n            let iCmdLen=socketBA.ReadUint32();//指令长度\n            let allDataLength = socketBA.ReadUint32();//数据全长\n            let leftField = socketBA.ReadUint32();//保留字段\n        \n            // 如果是视频回放，指针还要向后移动这些才到数据体  \n            var timestamp\n            if(this.app.playback){\n                timestamp=socketBA.ReadInt53();\n                // console.log(timestamp);\n                // let nFlag=socketBA.ReadUint32(true);\n                let nFlag = socketBA.ReadUint16(true);// 1603代表视频 1604代表音频\n                let videoParam = socketBA.ReadUint16(true) //i帧抽帧的参数\n                let nDataLen = socketBA.ReadUint32(true);\n                let nHeadLen = socketBA.ReadUint32(true);\n                let IFrame = socketBA.ReadString(1);\n                let sChannelID = socketBA.ReadString(42);\n            }            \n\n            switch(imsgType){\n                case 1603: // 视频数据\n                    var biSize=socketBA.ReadUint32(true);//4字节\n                    var biWidth=socketBA.ReadUint32(true);//4字节\n                    var biHeight=socketBA.ReadUint32(true);//4字节\n                    var biPlanes=socketBA.ReadUint16(true);//2字节\n                    var biBitCount=socketBA.ReadUint16(true);//2字节\n                    var biCompression=socketBA.ReadUint32(true);//4字节\n                    var biSizeImage=socketBA.ReadUint32(true);//4字节\n                    var biXPelsPerMeter=socketBA.ReadUint32(true);//4字节\n                    var biYPelsPerMeter=socketBA.ReadUint32(true);//4字节\n                    var biClrUsed=socketBA.ReadUint32(true);//4v\n                    var biClrImportant=socketBA.ReadUint32(true);//4字节\n                    // var timestamp=biXPelsPerMeter*1000 + Math.floor(biYPelsPerMeter/1000);\n                    var timePoint = biXPelsPerMeter*1000 + Math.floor(biYPelsPerMeter/1000);\n                    if(!this.start){                        \n                        this.app.videoHeight = biHeight;\n                        this.app.videoWidth = biWidth;\n                        var timestamp = biXPelsPerMeter*1000 + Math.floor(biYPelsPerMeter/1000);\n                        this.app.startTime = timestamp;\n                        // console.log(biHeight,biWidth)\n                        this.start = true;\n                    }\n                    // 是否需要计算码率\n                    if(this.isCalBitRate){\n                        this.t1?this.t2 = timePoint : this.t1=timePoint\n                        this.accumulateBitNum += biSizeImage\n                        this.calBitRate()\n                    }\n\n                    //把当前时间传出去\n                    if(timestamp){\n                        this.app.dispatch('currentTime',timestamp*1000);\n                    }                    \n                    var h264buf = socketBA.SliceNewAB(biSizeImage);\n                    if(this.ifDispatchBuf){\n                        this.app.dispatch('videoBufferAdd',h264buf);\n                    }else{\n                        console.log('丢弃')\n                    }\n\n                    \n                    break;\n                case 1604:\n                    // var audioSize=socketBA.ReadUint32();\n                    // var audioSampleRate=socketBA.ReadUint32();\n                    // var biHeight=socketBA.ReadUint32();\n                    // var biPlanes=socketBA.ReadUint16();\n                    // var biBitCount=socketBA.ReadUint16();\n                    // var biCompression=socketBA.ReadUint32();\n                    // var audioSizeImage=socketBA.ReadUint32();\n                    // var auXPelsPerMeter=socketBA.ReadUint32();\n                    // var auYPelsPerMeter=socketBA.ReadUint32();\n                    // var auClrUsed=socketBA.ReadUint32();\n                    // var auClrImportant=socketBA.ReadUint32();\n\n                    // var aacRawbuffer = socketBA.SliceNewAB(audioSizeImage);\n                    // var aacRawu8a=new Uint8Array(aacRawbuffer);\n                    // // debugger\n                    // // console.log(this.app)\n                    // this.app._player.nalsbonAudioarr.push(aacRawu8a)\n                    break;\n                case 2500: // 人脸的几何框信息\n                    var osdbuf = socketBA.SliceNewAB(iCmdLen);\n                    var osdba = new _ByteArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"](osdbuf);\n                    var second = osdba.ReadUint32(true);\n                    var microseconds = osdba.ReadUint32(true);\n                    var obOsd = new Object();\n                    var leftRect = osdba.ReadUint32(true);\n                    var topRect = osdba.ReadUint32(true);\n                    var rightRect = osdba.ReadUint32(true);\n                    var bottomRect = osdba.ReadUint32(true);\n                    //rect\n                    var left = osdba.ReadUint32(true);\n                    var top = osdba.ReadUint32(true);\n                    var right = osdba.ReadUint32(true);\n                    var bottom = osdba.ReadUint32(true);\n                    // obOsd.width = right - left;\n                    // obOsd.height = bottom - top;\n                    obOsd.sX = left;\n                    obOsd.sY = top;\n                    obOsd.eX = right;\n                    obOsd.eY = bottom;\n                    // 时间戳\n                    obOsd.sec = second * 1000 + Math.floor(microseconds / 1000) ;\n                    var nSize = osdba.ReadUint32(true);\n                    if (nSize > 0) {\n                        var osdPointArr = [];\n                        for (var k = 0; k < nSize; k++) {\n                            var pob = {};\n                            pob.x = osdba.ReadUint32(true);\n                            pob.y = osdba.ReadUint32(true);\n                            osdPointArr.push(pob);\n                        }\n                        obOsd.pointArr = osdPointArr;\n                    }\n                    // this.faceOsdArr.push(obOsd);\n                    this.app.dispatch('elementInfo',obOsd);\n                    break;\n                case 2501: // 安防绘制的xml\n                    var strxml = socketBA.ReadString(iCmdLen);\n                    if(this.drawfunc) {\n                        this.drawfunc()\n                    }else{\n                        this.drawfunc = Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\"throttle\"])(function (params) {                        \n                            this.app.dispatch('xmlElementInfo',xotree.parseXML( strxml ));\n                            // console.log('xml图形消息')\n                        },60000,1)\n                        this.drawfunc()                        \n                    }\n                    \n                    break;   \n                case 2804: // 是个啥序列不清楚，处理逻辑与人脸序列相同\n                    \n                case 2502: // 人脸序列\n                    // console.log(imsgType)\n                    var biXPels = socketBA.ReadUint32(true);\n                    var biYPels = socketBA.ReadUint32(true);\n                    socketBA.SetOffset(132);\n                    var imgtype = socketBA.ReadUint32(true);\n                    // console.log(imgtype)\n                    var datasize6 = socketBA.ReadUint32(true);\n                    var picbuf = socketBA.SliceNewAB(datasize6);\n                    this.app.dispatch('imgInfo',picbuf);\n                    break;                \n                case 2503: // 车辆与车牌信息\n                    this.osdType = 'carosd';\n                    var osdbufcar = socketBA.SliceNewAB(iCmdLen);\n                    var osdbacar = new _ByteArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"](osdbufcar);\n\n                    var secondCar = osdbacar.ReadUint32(true);\n                    var microsecondsCar = osdbacar.ReadUint32(true);\n\n                    var obOsdCar = new Object();\n\n                    obOsdCar.time = secondCar * 1000 + Math.floor(microsecondsCar / 1000);\n\n                    //车辆\n                    var rectCarX = osdbacar.ReadUint32(true);\n                    var rectCarY = osdbacar.ReadUint32(true);\n                    var rectCarWidth = osdbacar.ReadUint32(true);\n                    var rectCarHeight = osdbacar.ReadUint32(true);\n                    //车牌\n                    var rectCarNumX = osdbacar.ReadUint32(true);\n                    var rectCarNumY = osdbacar.ReadUint32(true);\n                    var rectCarNumWidth = osdbacar.ReadUint32(true);\n                    var rectCarNumHeight = osdbacar.ReadUint32(true);\n\n                    obOsdCar.x = rectCarX;\n                    obOsdCar.y = rectCarY;\n                    obOsdCar.carWid = rectCarWidth;\n                    obOsdCar.carHei = rectCarHeight;\n\n                    obOsdCar.numX = rectCarNumX;\n                    obOsdCar.numY = rectCarNumY;\n                    obOsdCar.carnumWid = rectCarNumWidth;\n                    obOsdCar.carnumHei = rectCarNumHeight;\n                    this.app.dispatch('carOsdInfo',obOsdCar);\n                    // this.carNumOsdArr.push(obOsdCar);\n                    break;    \n                case 2801: // 安防的信息框\n                    this.osdType = 'securityOsd';\n\n                    var securityOsdbuf = socketBA.SliceNewAB(iCmdLen);\n                    var securityOsdba = new _ByteArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"](securityOsdbuf);\n\n                    var second2801 = securityOsdba.ReadUint32(true);\n                    var microseconds2801 = securityOsdba.ReadUint32(true);\n                    var channelID = securityOsdba.ReadString(64);\n                    var sceneImageID = securityOsdba.ReadString(64);\n                    var eventType = securityOsdba.ReadUint32(true);\n\n                    var alarmType = securityOsdba.ReadUint32(true);\n                    var alarmSize = securityOsdba.ReadUint32(true);\n                    var securityOSD = new Object();\n                    var securityPointArr = [];\n                    securityOSD.sec = second2801 * 1000 + Math.floor(microseconds2801 / 1000) ;\n                    // console.log(alarmSize) \n                    if (alarmType === 1) {\n                        var evnetID = securityOsdba.ReadUint8();\n                        var evnetType = securityOsdba.ReadUint32(true);\n                        securityOsdba.SetOffset(6);\n                        //=====================rect============\n                        var left2801 = securityOsdba.ReadUint32(true);\n                        var top2801 = securityOsdba.ReadUint32(true);\n                        var right2801 = securityOsdba.ReadUint32(true);\n                        var bottom2801 = securityOsdba.ReadUint32(true);\n\n                        var targetArea = securityOsdba.ReadUint32(true);\n                        var alarmRuleID = securityOsdba.ReadString(64);\n                        var alarmValue = securityOsdba.ReadUint32(true);\n\n                        securityOSD.width = right2801 - left2801;\n                        securityOSD.height = bottom2801 - top2801;\n                        securityOSD.x = left2801;\n                        securityOSD.y = top2801;\n                        securityOSD.color = 'target';\n                        securityOSD.txt = Object(_securityIDList__WEBPACK_IMPORTED_MODULE_1__[\"CSecurityVideoDetectTask\"])(eventType); //+\"  数值：\"+alarmValue;\n                    } else if (alarmType === 2) {\n                        var currulenum = securityOsdba.ReadUint32(true); //密度检测区域数\n                        var pointSecurity2 = {};\n                        //trace(currulenum)\n                        pointSecurity2.x = securityOsdba.ReadUint32(true);\n                        pointSecurity2.y = securityOsdba.ReadUint32(true);\n                        securityOsdba.SetOffset(56);\n\n                        var curDensity = securityOsdba.ReadUint32(true); //当前密度值\n\n                        securityOSD.density = \"密度值：\" + curDensity;\n                    } else if (alarmType === 3) {\n                        var Anum = securityOsdba.ReadUint32(true); //A方向流量\n                        var Bnum = securityOsdba.ReadUint32(true); //B方向流量\n                        var num = securityOsdba.ReadUint32(true); //区域内总数\n\n                        securityOSD.textvalue=\"A方向：\"+Anum+\"  B方向：\"+Bnum+\"  区域内总数：\"+num;\n                    } else if (alarmType === 4) {\n                        var ntargetID = securityOsdba.ReadUint32(true);\n                        //===============rect==================\n                        var left28014 = securityOsdba.ReadUint32(true);\n                        var top28014 = securityOsdba.ReadUint32(true);\n                        var right28014 = securityOsdba.ReadUint32(true);\n                        var bottom28014 = securityOsdba.ReadUint32(true);\n\n                        securityOSD.width = right28014 - left28014;\n                        securityOSD.height = bottom28014 - top28014;\n                        securityOSD.x = left28014;\n                        securityOSD.y = top28014;\n\n                        var pointSecurity4 = {};\n                        pointSecurity4.x = securityOsdba.ReadUint32(true);\n                        pointSecurity4.y = securityOsdba.ReadUint32(true);\n\n                        securityPointArr.push(pointSecurity4);\n                    } else if (alarmType === 5){\n                        break ;\n                    }\n\n                    securityOSD.pointArr = securityPointArr;\n                    this.app.dispatch('safeOsdInfo',securityOSD);\n                    // if(securityOSD.pointArr.length>0)\n                    // this.securityOsdArr.push(securityOSD);\n                    // console.log(securityOSD)\n                    break;\n                default :\n                    console.log(imsgType)\n                    break;\n            }\n\n            this.wholeOffset = 0;\n            this.MergeBuffer(this.whole,e.data);\n            this.packageNum=0;\n        }else{\n            //如果没满，看当前状态，如果状态正常，合并，如果异常，丢弃\n            if(!this.packageState){\n                //如果没满又来了第一包\n                if(this.ifFirstPackage(e.data)){\n                    console.log('没满又出了一包,指针回原点')\n                    // 上一包的情况\n                    // var socketBA_last = new ByteArray(this.whole.buffer,this.wholeOffset)\n                    // var verbonc = socketBA_last.ReadUint32();//verbonc\n                    // var company = socketBA_last.ReadUint32();//company\n                    // var imsgType = socketBA_last.ReadUint32();//消息类型 \n                    // var linType = socketBA_last.ReadUint32();//指令类型\n                    // var iCmdLen = socketBA_last.ReadUint32();//指令长度                    \n                    // var allDataLength = socketBA_last.ReadUint32();//数据全长\n                    // var leftField = socketBA_last.ReadUint32();//保留字段\n\n                    // if( company !== 1112757248 ){//'BST '\n                    //     console.log('丢失第一包')\n                    //     //this.templateDataQueue = new ArrayBuffer(0);\n                    //     this.packageState = 1;\n                    //     return false\n                    // }\n                    // if(socketBA_last.bytesAvailable<iCmdLen){\n                    //     console.log('上一包数据')\n                    //     console.log('verbonc',verbonc)\n                    //     console.log('company',company)\n                    //     console.log('imsgType',imsgType)\n                    //     console.log('linType',linType)\n                    //     console.log('iCmdLen',iCmdLen)\n                    //     console.log('已收数据',socketBA_last.bytesAvailable)\n                    // }\n                    // 本包的情况\n                    // var socketBA_this = new ByteArray(e.data);\n                    // var verbonc = socketBA_this.ReadUint32();//verbonc\n                    // var company = socketBA_this.ReadUint32();//company\n                    // var imsgType = socketBA_this.ReadUint32();//消息类型 \n                    // var linType = socketBA_this.ReadUint32();//指令类型\n                    // var iCmdLen = socketBA_this.ReadUint32();//指令长度\n                    // var allDataLength = socketBA_this.ReadUint32();//数据全长\n                    // var leftField = socketBA_this.ReadUint32();//保留字段\n                    // console.log('本包情况')\n                    // console.log('verbonc',verbonc)\n                    // console.log('company',company)\n                    // console.log('imsgType',imsgType)\n                    // console.log('linType',linType)\n                    // console.log('iCmdLen',iCmdLen)\n                    // console.log('本包长',socketBA_this.bytesAvailable)\n                    this.wholeOffset = 0;\n                }\n                this.MergeBuffer(this.whole,e.data);\n                this.packageNum++;\n            }else{\n                //如果状态异常,判断这个包是不是第一个包\n                return;\n            }\n            \n        }\n    }\n\n\n    /**\n     * 判断是否数据流错位了\n     */\n    ifError(){\n\n    }\n\n    /**\n     * 判断单个包是否满了\n     * @param {ArrayBuffer} data \n     */\n    ifFull(){\n        \n        // if(!this.templateDataQueue || !this.templateDataQueue.byteLength){\n        //     return false;\n        // }\n        if(!this.wholeOffset){\n            return false;\n        }\n        // let socketBA = new ByteArray(this.templateDataQueue);\n        let socketBA = new _ByteArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this.whole.buffer,this.wholeOffset)\n        let verbonc = socketBA.ReadUint32();//verbonc\n        let company = socketBA.ReadUint32();//company\n        let imsgType = socketBA.ReadUint32();//消息类型 \n        let linType = socketBA.ReadUint32();//指令类型\n        let iCmdLen = socketBA.ReadUint32();//指令长度\n        let allDataLength = socketBA.ReadUint32();//数据全长\n        let leftField = socketBA.ReadUint32();//保留字段\n\n        if( company !== 1112757248 ){//'BST '\n            console.log('丢失第一包')\n            //this.templateDataQueue = new ArrayBuffer(0);\n            this.packageState = 1;\n            return false\n        }\n        if(socketBA.bytesAvailable<iCmdLen){\n            return false;\n        }else if(socketBA.bytesAvailable===iCmdLen){\n            return true;\n        }else if(socketBA.bytesAvailable>iCmdLen){\n            //console.warn('中间有丢包',this.packageNum)\n            //console.log(socketBA)\n            //debugger\n            console.log('包长度超过iCmdLen')\n            this.packageState = 1;\n            return false\n        }\n        \n\n    }\n\n    /**\n     * 判断这包数据是不是第一包\n     * @param {ArrayBuffer} data \n     */\n    ifFirstPackage(data){\n        if(data.byteLength<28){\n            // console.log('出现了小于28字节的包');\n            return false;            \n        }\n        // console.log(data)\n        let socketBA = new _ByteArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"](data);\n        //let verbonc = socketBA.ReadUint32();//verbonc\n        socketBA.ReadUint32();//verbonc\n        let company = socketBA.ReadUint32();//company\n        if( company !== 1112757248 ){//'BST '\n            \n            return false;\n        }else{\n            return true;\n        }\n    }\n\n    /**\n     * \n     * @param {Uint8Array} whole \n     * @param {ArrayBuffer} arr1 \n     * @param {ArrayBuffer} arr2 \n     */\n    MergeBuffer(whole,arr1){\n        // debugger\n        //var sumLength = arr1.byteLength+arr2.byteLength;\n        try{\n            whole.set(new Uint8Array(arr1),this.wholeOffset);\n            this.wholeOffset+= arr1.byteLength;\n        }catch(err){\n            debugger\n        }\n\n        \n        // whole.set(new Uint8Array(arr2),this.wholeOffset);\n        // this.wholeOffset+= arr2.byteLength;\n        // var whole = new Uint8Array(sumLength);\n        // var pos = 0;\n        // for(var key in arguments){\n        //     // for(var d = 0; d < arguments[key].byteLength; ++d){\n        //     //     whole.set(new Uint8Array(arguments[key]),pos);\n        //     //     pos += arguments[key].byteLength;\n        //     // }\n        //     whole.set(new Uint8Array(arguments[key]),pos);\n        //     pos += arguments[key].byteLength;\n        // }\n        \n        //return whole.buffer;\n    }\n}\n\n\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (SocketDataMerge);\n\n//# sourceURL=webpack://BoncH5Player/./src/util/SocketDataMerge.js?");

/***/ }),

/***/ "./src/util/WebSocketUtil.js":
/*!***********************************!*\
  !*** ./src/util/WebSocketUtil.js ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return WebSocketUtil; });\n/* harmony import */ var _orderList__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./orderList */ \"./src/util/orderList.js\");\n/* harmony import */ var _ByteArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ByteArray */ \"./src/util/ByteArray.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils */ \"./src/util/utils.js\");\n/* harmony import */ var _SocketDataMerge__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./SocketDataMerge */ \"./src/util/SocketDataMerge.js\");\n/* harmony import */ var objtree__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! objtree */ \"./node_modules/objtree/index.js\");\n/* harmony import */ var objtree__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(objtree__WEBPACK_IMPORTED_MODULE_4__);\n\n\n\n\n\n// reason 'change'\nwindow.WebSocket.prototype.normalClose=function(reason){\n    this.closeReason = reason || 'normal';\n    this.close(3001,'abc');\n    console.time('close')\n    // console.log('close 方法已执行')\n}\n\nfunction Uint8ArrayToString(fileData){\n    var dataString = \"\";\n    for (var i = 0; i < fileData.length; i++) {\n        dataString += String.fromCharCode(fileData[i]);\n    }\n    \n    return dataString\n}\nclass WebSocketUtil{\n    /*\n    heartLiveInterval 心跳保活定时器的id\n    BufferPlayInterval 播放buffer的定时器\n    startOrder\n    app 播放器本身\n    databuffer 音视频流的队列，接收服务器发过来的数据放到这里，本地播放将里面的东西消耗\n    url websocket的发送的url\n    */\n    constructor(app){\n        this.app = app;\n        this.boncws = null;\n        this.databuffer = [];\n        this.startOrder = null;\n        this.normalDisconnect =false;\n        this.socketDataMerge = new _SocketDataMerge__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this.app);\n        this.closed = true;\n        this.finishSearch = false ;\n        this.WebSocketOpen  = this.WebSocketOpen.bind(this);\n        this.handleError = this.handleError.bind(this);\n        this.webSocketPlayBackOpen = this.webSocketPlayBackOpen.bind(this);\n        this.startHeartLiveInterval = this.startHeartLiveInterval.bind(this);\n        this.WebSocketPlayBackMessage = this.WebSocketPlayBackMessage.bind(this);\n    }\n\n    /**\n     * 实时websocket初始化\n     */\n    WebSocketInit(type){\n        if(!this.url){\n            throw new Error('url不存在，无法启动')\n        }\n        if(type==='playback'){\n            if(this.boncws!==null){\n                if(this.boncws.readyState==1){\n\n                }\n                this.boncws.removeEventListener('open',this.webSocketPlayBackOpen);\n                this.boncws.removeEventListener('message', this.WebSocketPlayBackMessage);\n                this.boncws.removeEventListener('close',this.WebSocketClose.bind(this));\n                this.boncws=null;\n                console.log('websocket需要重新实例化')\n            }\n    \n            this.boncws=new WebSocket(this.url);\n            this.boncws.binaryType = 'arraybuffer';\n            this.boncws.addEventListener('open',this.webSocketPlayBackOpen);\n            this.boncws.addEventListener('message', this.WebSocketPlayBackMessage);\n            this.boncws.addEventListener('close',this.WebSocketClose.bind(this)); \n            this.boncws.addEventListener('error',this.handleError)\n        }else{            \n            if(this.boncws!==null){\n                this.boncws.removeEventListener('open',this.WebSocketOpen.bind(this));\n                this.boncws.removeEventListener('message', this.WebSocketMessage.bind(this));\n                this.boncws.removeEventListener('close',this.WebSocketClose.bind(this));\n                this.boncws=null;\n                console.log('websocket需要重新实例化')\n            }\n    \n            this.boncws=new WebSocket(this.url);\n            this.boncws.binaryType = 'arraybuffer';\n            this.boncws.addEventListener('open',this.WebSocketOpen.bind(this));\n            this.boncws.addEventListener('message', this.WebSocketMessage.bind(this));\n            this.boncws.addEventListener('close',this.WebSocketClose.bind(this)); \n            this.boncws.addEventListener('error',this.handleError)\n        }\n        \n    }\n\n\n    \n    /**\n     * websocket连接完成的回调\n     * 发送'开始传输'的指令，服务器收到该指令会源源不断的发出音、视频流\n     * 开启心跳保活的定时器\n     */\n    WebSocketOpen(){\n        if(this.closed===true){\n            this.app.dispatch('startSuccess')\n        }\n        this.closed = false;\n        var strxml= _orderList__WEBPACK_IMPORTED_MODULE_0__[\"xmlHeader\"]+this.xmlPlayBody;\n        var mun= Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\"ByteLengthOf\"])(strxml);\n\n        //写入28个字节头\n        var ab=new ArrayBuffer((mun+28));\n        var sendBA= new _ByteArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"](ab);\n        sendBA.WriteUint32(0x0100);//版本号(ver):\n        sendBA.WriteString('BST ');//公司必须是4个字节所以加个空格，服务器限制公司名bst\n        sendBA.WriteUint32(0x00000640);//消息类型(msgtype):播放指令:\n        sendBA.WriteUint32(0x00000000);//指令类型\n        sendBA.WriteUint32(mun);////指令长度\n        sendBA.WriteUint32((mun+28));//数据全长\n        sendBA.WriteUint32(0x00000000);//保留字段\n        //写入xml字符串\n        sendBA.WriteString(strxml);\n\n        this.boncws.send(sendBA.GetArrayBuffer());\n\n        this.startHeartLiveInterval();\n    }\n\n    webSocketPlayBackOpen(){\n        this.finishSearch = false;\n        if(this.closed===true){\n            this.app.dispatch('startSuccess')\n        }\n        this.closed = false;\n        var strxml= _orderList__WEBPACK_IMPORTED_MODULE_0__[\"xmlHeader\"]+this.xmlPlayBody;\n        var mun= Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\"ByteLengthOf\"])(strxml);\n\n        //写入28个字节头\n        var ab= new ArrayBuffer((mun+28));\n        var sendBA= new _ByteArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"](ab);\n        sendBA.WriteUint32(0x0100);//版本号(ver):\n        sendBA.WriteString('BST ');//公司必须是4个字节所以加个空格，服务器限制公司名bst\n        sendBA.WriteUint32(0x00000640);//消息类型(msgtype):播放指令:\n        sendBA.WriteUint32(0x00000000);//指令类型\n        sendBA.WriteUint32(mun);////指令长度\n        sendBA.WriteUint32((mun+28));//数据全长\n        sendBA.WriteUint32(0x00000000);//保留字段\n        //写入xml字符串\n        sendBA.WriteString(strxml);\n\n        this.boncws.send(sendBA.GetArrayBuffer());\n\n        this.startHeartLiveInterval();\n    }\n\n    recordPlay(playinfo){\n        var strxml= _orderList__WEBPACK_IMPORTED_MODULE_0__[\"xmlHeader\"]+playinfo;\n        var mun= Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\"ByteLengthOf\"])(strxml);\n        //写入28个字节头\n        var ab=new ArrayBuffer((mun+28));\n        var sendBA= new _ByteArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"](ab);\n        sendBA.WriteUint32(0x0100);//版本号(ver):\n        sendBA.WriteString('BST ');//公司必须是4个字节所以加个空格，服务器限制公司名bst\n        sendBA.WriteUint32(0x000006AD);//消息类型(msgtype):播放指令:\n        sendBA.WriteUint32(0x00000000);//指令类型\n        sendBA.WriteUint32(mun);////指令长度\n        sendBA.WriteUint32((mun+28));//数据全长\n        sendBA.WriteUint32(0x00000000);//保留字段\n        //写入xml字符串\n        sendBA.WriteString(strxml);\n        this.boncws.send(sendBA.GetArrayBuffer());\n        console.log('发送播放指令');\n    }\n\n\n    \n    playControl(playinfo){\n        if(!this.boncws){\n            return;\n        }\n        var strxml= _orderList__WEBPACK_IMPORTED_MODULE_0__[\"xmlHeader\"]+playinfo;\n        var mun= Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\"ByteLengthOf\"])(strxml);\n        //写入28个字节头\n        var ab=new ArrayBuffer((mun+28));\n        var sendBA= new _ByteArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"](ab);\n        sendBA.WriteUint32(0x0100);//版本号(ver):\n        sendBA.WriteString('BST ');//公司必须是4个字节所以加个空格，服务器限制公司名bst\n        sendBA.WriteUint32(0x000006AD);//消息类型(msgtype):播放指令:\n        sendBA.WriteUint32(0x00000000);//指令类型\n        sendBA.WriteUint32(mun);////指令长度\n        sendBA.WriteUint32((mun+28));//数据全长\n        sendBA.WriteUint32(0x00000000);//保留字段\n        //写入xml字符串\n        sendBA.WriteString(strxml);\n        this.boncws.send(sendBA.GetArrayBuffer());\n        console.log('发送播放指令');\n    }\n    WebSocketClose(e){ //websocket异常关闭,需要重连\n        console.timeEnd('close')\n        //console.log(this.socketDataMerge.videoDataQueue)\n        if(this.boncws.closeReason==='normal'){\n            console.log('normal')//正常关闭\n            this.boncws.closeReason =''\n            //事件解绑定\n            this.boncws.removeEventListener('open',this.WebSocketOpen);\n            this.boncws.removeEventListener('message', this.WebSocketMessage);\n            this.boncws.removeEventListener('close',this.WebSocketClose);\n            \n        }else if(this.boncws.closeReason==='change'){\n            //因某些原因需要关闭\n            this.app.dispatch('changeclose')\n        }else if(this.boncws.closeReason==='restart'){\n            this.app.dispatch('restartclose')\n        }else{\n            //非正常断开连接、需要重连\n            if(!this.closed){\n                console.log('发出断开的消息')\n                this.app.dispatch('disconnectNetWork')\n                this.closed = true\n            }\n            \n            console.log('abnormal')\n            setTimeout(() => {\n                this.WebSocketInit();\n            }, 2000);\n            clearInterval(this.heartLiveInterval)\n        }\n           \n    }\n\n    /**\n     * 实时视频websocket接收信息的回调\n     * @param {*} evt \n     */\n    WebSocketMessage(evt){\n        //console.time(\"str\")  //开始\n        this.socketDataMerge.addDataPackage(evt);\n        //console.timeEnd(\"str\") //结束\n    }\n\n    /**\n     * 回放视频的websocket接收消息的回放\n     */\n    WebSocketPlayBackMessage (evt){\n        if(this.finishSearch){\n            this.socketDataMerge.addDataPackage(evt);\n        }else{\n            var socketBA= new _ByteArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"](evt.data);\n            let verbonc=socketBA.ReadUint32();//verbonc\n            let company=socketBA.ReadUint32();//company 厂家(company)BST\n            let imsgType=socketBA.ReadUint32();////消息类型\n            let linType=socketBA.ReadUint32();//指令类型\n            let iCmdLen=socketBA.ReadUint32();//指令长度\n            socketBA.ReadUint32();//数据全长\n            socketBA.ReadUint32();//保留字段\n            if(socketBA.bytesAvailable<iCmdLen){\n                throw new Error('服务器错误')\n            }\n            let dataEntity = socketBA.SliceNewAB(iCmdLen);\n            let xbn = Uint8ArrayToString(new Uint8Array(dataEntity));\n            const xotree = new objtree__WEBPACK_IMPORTED_MODULE_4___default.a();\n            var jsonData = xotree.parseXML( xbn );\n            console.log(jsonData)\n            if(xbn.indexOf('Response')==-1){\n                throw new Error('服务器返回内容错误或丢包');\n            }\n\n            this.finishSearch = true;\n            this.app.dispatch('onRecordInfo',jsonData);\n        }\n        \n    }\n\n    closeWebSocket(){\n        var strxml= _orderList__WEBPACK_IMPORTED_MODULE_0__[\"xmlHeader\"] + _orderList__WEBPACK_IMPORTED_MODULE_0__[\"xmlCloseBody\"];\n        var mun=Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\"ByteLengthOf\"])(strxml);\n        var ab=new ArrayBuffer((mun+28));\n        var sendBA= new _ByteArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"](ab);\n        //写入28个字节头\n        sendBA.WriteUint32(0x0100);//版本号(ver):\n        sendBA.WriteString('BST ');//公司必须是4个字节所以加个空格，服务器限制公司名bst\n        sendBA.WriteUint32(0x000005DE);//消息类型(msgtype):保活指令:\n        sendBA.WriteUint32(0x00000000);//指令类型\n        sendBA.WriteUint32(mun);//指令长度\n        sendBA.WriteUint32(mun+28);//数据全长\n        sendBA.WriteUint32(0x00000000);//保留字段\n        //写入xml字符串\n        sendBA.WriteString(strxml);\n        this.boncws.send(sendBA.GetArrayBuffer());\n    }\n\n\n/*------------------------定时器  开始---------------------------- */\n    /**\n     * 开启 发送心跳保活的 定时器\n     */\n    startHeartLiveInterval(){\n        this.heartLiveInterval = setInterval(()=>\n        {           \n            // console.log('websocket state',this.boncws.readyState) \n            var strxml= _orderList__WEBPACK_IMPORTED_MODULE_0__[\"xmlHeader\"] + _orderList__WEBPACK_IMPORTED_MODULE_0__[\"xmlHeartBody\"];\n            var mun=Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\"ByteLengthOf\"])(strxml);\n            var ab=new ArrayBuffer((mun+28));\n            var sendBA= new _ByteArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"](ab);\n            //写入28个字节头\n            sendBA.WriteUint32(0x0100);//版本号(ver):\n            sendBA.WriteString('BST ');//公司必须是4个字节所以加个空格，服务器限制公司名bst\n            sendBA.WriteUint32(0x000005DE);//消息类型(msgtype):保活指令:\n            sendBA.WriteUint32(0x00000000);//指令类型\n            sendBA.WriteUint32(mun);//指令长度\n            sendBA.WriteUint32(mun+28);//数据全长\n            sendBA.WriteUint32(0x00000000);//保留字段\n            //写入xml字符串\n            sendBA.WriteString(strxml);\n            //debug.log('心跳============');\n            if(this.boncws.readyState===3){\n                this.WebSocketInit(this.wsurl);//自动重连\n            }\n            else{\n                try{\n                    // console.log(this.boncws.readyState)\n                    this.boncws.send(sendBA.GetArrayBuffer());\n                }catch(err){\n                    debugger;\n                }\n                \n            }\n        }, 30000);\n    }\n    handleError(e){\n        console.log(e)\n    }\n\n    \n/*------------------------定时器  结束---------------------------- */\n\n/*------------------------播放  开始------------------------------*/\n\n/*------------------------播放  结束------------------------------*/\n\n}\n\n//# sourceURL=webpack://BoncH5Player/./src/util/WebSocketUtil.js?");

/***/ }),

/***/ "./src/util/event.js":
/*!***************************!*\
  !*** ./src/util/event.js ***!
  \***************************/
/*! exports provided: default, globalEvent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Event; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"globalEvent\", function() { return globalEvent; });\nclass Event {\n    constructor(type) {\n        this.listener = {};\n        this.type = type | '';\n    }\n\n    on(event, fn) {\n        if (!this.listener[event]) {\n            this.listener[event] = [];\n        }\n        this.listener[event].push(fn);\n        return true;\n    }\n    once(){\n        \n    }\n\n    off(event, fn) {\n        if (this.listener[event]) {\n            var index = this.listener[event].indexOf(fn);\n            if (index > -1) {\n                this.listener[event].splice(index, 1);\n            }\n            return true;\n        }\n        return false;\n    }\n\n    offAll() {\n        this.listener = {};\n    }\n\n    dispatch(event, data) {\n        if (this.listener[event]) {\n            this.listener[event].map((each) => {\n                each.apply(null, [data]);\n            });\n            return true;\n        }\n        return false;\n    }\n}\n\n\nvar globalEvent = new Event();\n\n\n//# sourceURL=webpack://BoncH5Player/./src/util/event.js?");

/***/ }),

/***/ "./src/util/exp-golomb.js":
/*!********************************!*\
  !*** ./src/util/exp-golomb.js ***!
  \********************************/
/*! exports provided: ExpGolomb */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ExpGolomb\", function() { return ExpGolomb; });\n/**\n * Parser for exponential Golomb codes, a variable-bitwidth number encoding scheme used by h264.\n*/\n\nclass ExpGolomb {\n\n    constructor(data) {\n        this.data = data;\n        this.index = 0;\n        this.bitLength = data.byteLength * 8;\n    }\n\n    get bitsAvailable() {\n        return this.bitLength - this.index;\n    }\n\n    skipBits(size) {\n        // console.log(`  skip bits: size=${size}, ${this.index}.`);\n        if (this.bitsAvailable < size) {\n            //throw new Error('no bytes available');\n            return false;\n        }\n        this.index += size;\n    }\n\n    readBits(size, moveIndex = true) {\n        // console.log(`  read bits: size=${size}, ${this.index}.`);\n        const result = this.getBits(size, this.index, moveIndex);\n        // console.log(`    read bits: result=${result}`);\n        return result;\n    }\n\n    getBits(size, offsetBits, moveIndex = true) {\n        if (this.bitsAvailable < size) {\n            //throw new Error('no bytes available');\n            return 0;\n        }\n        const offset = offsetBits % 8;\n        const byte = this.data[(offsetBits / 8) | 0] & (0xff >>> offset);\n        const bits = 8 - offset;\n        if (bits >= size) {\n            if (moveIndex) {\n                this.index += size;\n            }\n            return byte >> (bits - size);\n        } else {\n            if (moveIndex) {\n                this.index += bits;\n            }\n            const nextSize = size - bits;\n            return (byte << nextSize) | this.getBits(nextSize, offsetBits + bits, moveIndex);\n        }\n    }\n\n    skipLZ() {\n        let leadingZeroCount;\n        for (leadingZeroCount = 0; leadingZeroCount < this.bitLength - this.index; ++leadingZeroCount) {\n            if (this.getBits(1, this.index + leadingZeroCount, false) !== 0) {\n                // console.log(`  skip LZ  : size=${leadingZeroCount}, ${this.index}.`);\n                this.index += leadingZeroCount;\n                return leadingZeroCount;\n            }\n        }\n        return leadingZeroCount;\n    }\n\n    skipUEG() {\n        this.skipBits(1 + this.skipLZ());\n    }\n\n    skipEG() {\n        this.skipBits(1 + this.skipLZ());\n    }\n\n    readUEG() {\n        const prefix = this.skipLZ();\n        return this.readBits(prefix + 1) - 1;\n    }\n\n    readEG() {\n        const value = this.readUEG();\n        if (0x01 & value) {\n            // the number is odd if the low order bit is set\n            return (1 + value) >>> 1; // add 1 to make it even, and divide by 2\n        } else {\n            return -1 * (value >>> 1); // divide by two then make it negative\n        }\n    }\n\n    readBoolean() {\n        return this.readBits(1) === 1;\n    }\n    readUByte(numberOfBytes = 1) {\n        return this.readBits((numberOfBytes * 8));\n    }\n    readUShort() {\n        return this.readBits(16);\n    }\n    readUInt() {\n        return this.readBits(32);\n    }\n}\n\n\n\n//# sourceURL=webpack://BoncH5Player/./src/util/exp-golomb.js?");

/***/ }),

/***/ "./src/util/mp4-generator.js":
/*!***********************************!*\
  !*** ./src/util/mp4-generator.js ***!
  \***********************************/
/*! exports provided: MP4 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MP4\", function() { return MP4; });\n/**\n * Generate MP4 Box\n * taken from: https://github.com/dailymotion/hls.js\n */\n\nclass MP4 {\n    static init() {\n        MP4.types = {\n            avc1: [], // codingname\n            avcC: [],\n            btrt: [],\n            dinf: [],\n            dref: [],\n            esds: [],\n            ftyp: [],\n            hdlr: [],\n            mdat: [],\n            mdhd: [],\n            mdia: [],\n            mfhd: [],\n            minf: [],\n            moof: [],\n            moov: [],\n            mp4a: [],\n            mvex: [],\n            mvhd: [],\n            sdtp: [],\n            stbl: [],\n            stco: [],\n            stsc: [],\n            stsd: [],\n            stsz: [],\n            stts: [],\n            tfdt: [],\n            tfhd: [],\n            traf: [],\n            trak: [],\n            trun: [],\n            trex: [],\n            tkhd: [],\n            vmhd: [],\n            smhd: [],\n        };\n\n        var i;\n        for (i in MP4.types) {\n            if (MP4.types.hasOwnProperty(i)) {\n                MP4.types[i] = [\n                    i.charCodeAt(0),\n                    i.charCodeAt(1),\n                    i.charCodeAt(2),\n                    i.charCodeAt(3),\n                ];\n            }\n        }\n\n        var videoHdlr = new Uint8Array([\n            0x00, // version 0\n            0x00, 0x00, 0x00, // flags\n            0x00, 0x00, 0x00, 0x00, // pre_defined\n            0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n            0x00, 0x00, 0x00, 0x00, // reserved\n            0x00, 0x00, 0x00, 0x00, // reserved\n            0x00, 0x00, 0x00, 0x00, // reserved\n            0x56, 0x69, 0x64, 0x65,\n            0x6f, 0x48, 0x61, 0x6e,\n            0x64, 0x6c, 0x65, 0x72, 0x00, // name: 'VideoHandler'\n        ]);\n\n        var audioHdlr = new Uint8Array([\n            0x00, // version 0\n            0x00, 0x00, 0x00, // flags\n            0x00, 0x00, 0x00, 0x00, // pre_defined\n            0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n            0x00, 0x00, 0x00, 0x00, // reserved\n            0x00, 0x00, 0x00, 0x00, // reserved\n            0x00, 0x00, 0x00, 0x00, // reserved\n            0x53, 0x6f, 0x75, 0x6e,\n            0x64, 0x48, 0x61, 0x6e,\n            0x64, 0x6c, 0x65, 0x72, 0x00, // name: 'SoundHandler'\n        ]);\n\n        MP4.HDLR_TYPES = {\n            video: videoHdlr,\n            audio: audioHdlr,\n        };\n\n        var dref = new Uint8Array([\n            0x00, // version 0\n            0x00, 0x00, 0x00, // flags\n            0x00, 0x00, 0x00, 0x01, // entry_count\n            0x00, 0x00, 0x00, 0x0c, // entry_size\n            0x75, 0x72, 0x6c, 0x20, // 'url' type\n            0x00, // version 0\n            0x00, 0x00, 0x01, // entry_flags\n        ]);\n\n        var stco = new Uint8Array([\n            0x00, // version\n            0x00, 0x00, 0x00, // flags\n            0x00, 0x00, 0x00, 0x00, // entry_count\n        ]);\n\n        MP4.STTS = MP4.STSC = MP4.STCO = stco;\n\n        MP4.STSZ = new Uint8Array([\n            0x00, // version\n            0x00, 0x00, 0x00, // flags\n            0x00, 0x00, 0x00, 0x00, // sample_size\n            0x00, 0x00, 0x00, 0x00, // sample_count\n        ]);\n        MP4.VMHD = new Uint8Array([\n            0x00, // version\n            0x00, 0x00, 0x01, // flags\n            0x00, 0x00, // graphicsmode\n            0x00, 0x00,\n            0x00, 0x00,\n            0x00, 0x00, // opcolor\n        ]);\n        MP4.SMHD = new Uint8Array([\n            0x00, // version\n            0x00, 0x00, 0x00, // flags\n            0x00, 0x00, // balance\n            0x00, 0x00, // reserved\n        ]);\n\n        MP4.STSD = new Uint8Array([\n            0x00, // version 0\n            0x00, 0x00, 0x00, // flags\n            0x00, 0x00, 0x00, 0x01]);// entry_count\n\n        var majorBrand = new Uint8Array([105, 115, 111, 109]); // isom\n        var avc1Brand = new Uint8Array([97, 118, 99, 49]); // avc1\n        var minorVersion = new Uint8Array([0, 0, 0, 1]);\n\n        MP4.FTYP = MP4.box(MP4.types.ftyp, majorBrand, minorVersion, majorBrand, avc1Brand);\n        MP4.DINF = MP4.box(MP4.types.dinf, MP4.box(MP4.types.dref, dref));\n    }\n\n    static box(type, ...payload) {\n        var size = 8,\n            i = payload.length,\n            len = i,\n            result;\n        // calculate the total size we need to allocate\n        while (i--) {\n            size += payload[i].byteLength;\n        }\n        result = new Uint8Array(size);\n        result[0] = (size >> 24) & 0xff;\n        result[1] = (size >> 16) & 0xff;\n        result[2] = (size >> 8) & 0xff;\n        result[3] = size & 0xff;\n        result.set(type, 4);\n        // copy the payload into the result\n        for (i = 0, size = 8; i < len; ++i) {\n            // copy payload[i] array @ offset size\n            result.set(payload[i], size);\n            size += payload[i].byteLength;\n        }\n        return result;\n    }\n\n    static hdlr(type) {\n        return MP4.box(MP4.types.hdlr, MP4.HDLR_TYPES[type]);\n    }\n\n    static mdat(data) {\n        return MP4.box(MP4.types.mdat, data);\n    }\n\n    static mdhd(timescale, duration) {\n        return MP4.box(MP4.types.mdhd, new Uint8Array([\n            0x00, // version 0\n            0x00, 0x00, 0x00, // flags\n            0x00, 0x00, 0x00, 0x02, // creation_time\n            0x00, 0x00, 0x00, 0x03, // modification_time\n            (timescale >> 24) & 0xFF,\n            (timescale >> 16) & 0xFF,\n            (timescale >> 8) & 0xFF,\n            timescale & 0xFF, // timescale\n            (duration >> 24),\n            (duration >> 16) & 0xFF,\n            (duration >> 8) & 0xFF,\n            duration & 0xFF, // duration\n            0x55, 0xc4, // 'und' language (undetermined)\n            0x00, 0x00,\n        ]));\n    }\n\n    static mdia(track) {\n        return MP4.box(MP4.types.mdia, MP4.mdhd(track.timescale, track.duration), MP4.hdlr(track.type), MP4.minf(track));\n    }\n\n    static mfhd(sequenceNumber) {\n        return MP4.box(MP4.types.mfhd, new Uint8Array([\n            0x00,\n            0x00, 0x00, 0x00, // flags\n            (sequenceNumber >> 24),\n            (sequenceNumber >> 16) & 0xFF,\n            (sequenceNumber >> 8) & 0xFF,\n            sequenceNumber & 0xFF, // sequence_number\n        ]));\n    }\n\n    static minf(track) {\n        if (track.type === 'audio') {\n            return MP4.box(MP4.types.minf, MP4.box(MP4.types.smhd, MP4.SMHD), MP4.DINF, MP4.stbl(track));\n        } else {\n            return MP4.box(MP4.types.minf, MP4.box(MP4.types.vmhd, MP4.VMHD), MP4.DINF, MP4.stbl(track));\n        }\n    }\n\n    static moof(sn, baseMediaDecodeTime, track) {\n        return MP4.box(MP4.types.moof, MP4.mfhd(sn), MP4.traf(track, baseMediaDecodeTime));\n    }\n    /**\n     * @param tracks... (optional) {array} the tracks associated with this movie\n     */\n    static moov(tracks, duration, timescale) {\n        var\n            i = tracks.length,\n            boxes = [];\n\n        while (i--) {\n            boxes[i] = MP4.trak(tracks[i]);\n        }\n\n        return MP4.box.apply(null, [MP4.types.moov, MP4.mvhd(timescale, duration)].concat(boxes).concat(MP4.mvex(tracks)));\n    }\n\n    static mvex(tracks) {\n        var\n            i = tracks.length,\n            boxes = [];\n\n        while (i--) {\n            boxes[i] = MP4.trex(tracks[i]);\n        }\n        return MP4.box.apply(null, [MP4.types.mvex].concat(boxes));\n    }\n\n    static mvhd(timescale, duration) {\n        var\n            bytes = new Uint8Array([\n                0x00, // version 0\n                0x00, 0x00, 0x00, // flags\n                0x00, 0x00, 0x00, 0x01, // creation_time\n                0x00, 0x00, 0x00, 0x02, // modification_time\n                (timescale >> 24) & 0xFF,\n                (timescale >> 16) & 0xFF,\n                (timescale >> 8) & 0xFF,\n                timescale & 0xFF, // timescale\n                (duration >> 24) & 0xFF,\n                (duration >> 16) & 0xFF,\n                (duration >> 8) & 0xFF,\n                duration & 0xFF, // duration\n                0x00, 0x01, 0x00, 0x00, // 1.0 rate\n                0x01, 0x00, // 1.0 volume\n                0x00, 0x00, // reserved\n                0x00, 0x00, 0x00, 0x00, // reserved\n                0x00, 0x00, 0x00, 0x00, // reserved\n                0x00, 0x01, 0x00, 0x00,\n                0x00, 0x00, 0x00, 0x00,\n                0x00, 0x00, 0x00, 0x00,\n                0x00, 0x00, 0x00, 0x00,\n                0x00, 0x01, 0x00, 0x00,\n                0x00, 0x00, 0x00, 0x00,\n                0x00, 0x00, 0x00, 0x00,\n                0x00, 0x00, 0x00, 0x00,\n                0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n                0x00, 0x00, 0x00, 0x00,\n                0x00, 0x00, 0x00, 0x00,\n                0x00, 0x00, 0x00, 0x00,\n                0x00, 0x00, 0x00, 0x00,\n                0x00, 0x00, 0x00, 0x00,\n                0x00, 0x00, 0x00, 0x00, // pre_defined\n                0xff, 0xff, 0xff, 0xff, // next_track_ID\n            ]);\n        return MP4.box(MP4.types.mvhd, bytes);\n    }\n\n    static sdtp(track) {\n        var\n            samples = track.samples || [],\n            bytes = new Uint8Array(4 + samples.length),\n            flags,\n            i;\n        // leave the full box header (4 bytes) all zero\n        // write the sample table\n        for (i = 0; i < samples.length; i++) {\n            flags = samples[i].flags;\n            bytes[i + 4] = (flags.dependsOn << 4) |\n                (flags.isDependedOn << 2) |\n                (flags.hasRedundancy);\n        }\n\n        return MP4.box(MP4.types.sdtp, bytes);\n    }\n\n    static stbl(track) {\n        return MP4.box(MP4.types.stbl, MP4.stsd(track), MP4.box(MP4.types.stts, MP4.STTS), MP4.box(MP4.types.stsc, MP4.STSC), MP4.box(MP4.types.stsz, MP4.STSZ), MP4.box(MP4.types.stco, MP4.STCO));\n    }\n\n    static avc1(track) {\n        var sps = [],\n            pps = [],\n            i,\n            data,\n            len;\n        // assemble the SPSs\n\n        for (i = 0; i < track.sps.length; i++) {\n            data = track.sps[i];\n            len = data.byteLength;\n            sps.push((len >>> 8) & 0xFF);\n            sps.push((len & 0xFF));\n            sps = sps.concat(Array.prototype.slice.call(data)); // SPS\n        }\n\n        // assemble the PPSs\n        for (i = 0; i < track.pps.length; i++) {\n            data = track.pps[i];\n            len = data.byteLength;\n            pps.push((len >>> 8) & 0xFF);\n            pps.push((len & 0xFF));\n            pps = pps.concat(Array.prototype.slice.call(data));\n        }\n\n        var avcc = MP4.box(MP4.types.avcC, new Uint8Array([\n                0x01,   // version\n                sps[3], // profile\n                sps[4], // profile compat\n                sps[5], // level\n                0xfc | 3, // lengthSizeMinusOne, hard-coded to 4 bytes\n                0xE0 | track.sps.length, // 3bit reserved (111) + numOfSequenceParameterSets\n            ].concat(sps).concat([\n                track.pps.length, // numOfPictureParameterSets\n            ]).concat(pps))), // \"PPS\"\n            width = track.width,\n            height = track.height;\n        // console.log('avcc:' + Hex.hexDump(avcc));\n        return MP4.box(MP4.types.avc1, new Uint8Array([\n            0x00, 0x00, 0x00, // reserved\n            0x00, 0x00, 0x00, // reserved\n            0x00, 0x01, // data_reference_index\n            0x00, 0x00, // pre_defined\n            0x00, 0x00, // reserved\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00, // pre_defined\n            (width >> 8) & 0xFF,\n            width & 0xff, // width\n            (height >> 8) & 0xFF,\n            height & 0xff, // height\n            0x00, 0x48, 0x00, 0x00, // horizresolution\n            0x00, 0x48, 0x00, 0x00, // vertresolution\n            0x00, 0x00, 0x00, 0x00, // reserved\n            0x00, 0x01, // frame_count\n            0x12,\n            0x62, 0x69, 0x6E, 0x65, // binelpro.ru\n            0x6C, 0x70, 0x72, 0x6F,\n            0x2E, 0x72, 0x75, 0x00,\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, // compressorname\n            0x00, 0x18,   // depth = 24\n            0x11, 0x11]), // pre_defined = -1\n        avcc,\n        MP4.box(MP4.types.btrt, new Uint8Array([\n            0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n            0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n            0x00, 0x2d, 0xc6, 0xc0])) // avgBitrate\n        );\n    }\n\n    static esds(track) {\n        var configlen = track.config.byteLength;\n        let data = new Uint8Array(26 + configlen + 3);\n        data.set([\n            0x00, // version 0\n            0x00, 0x00, 0x00, // flags\n\n            0x03, // descriptor_type\n            0x17 + configlen, // length\n            0x00, 0x01, // es_id\n            0x00, // stream_priority\n\n            0x04, // descriptor_type\n            0x0f + configlen, // length\n            0x40, // codec : mpeg4_audio\n            0x15, // stream_type\n            0x00, 0x00, 0x00, // buffer_size\n            0x00, 0x00, 0x00, 0x00, // maxBitrate\n            0x00, 0x00, 0x00, 0x00, // avgBitrate\n\n            0x05, // descriptor_type\n            configlen,\n        ]);\n        data.set(track.config, 26);\n        data.set([0x06, 0x01, 0x02], 26 + configlen);\n        // return new Uint8Array([\n        //     0x00, // version 0\n        //     0x00, 0x00, 0x00, // flags\n        //\n        //     0x03, // descriptor_type\n        //     0x17+configlen, // length\n        //     0x00, 0x01, //es_id\n        //     0x00, // stream_priority\n        //\n        //     0x04, // descriptor_type\n        //     0x0f+configlen, // length\n        //     0x40, //codec : mpeg4_audio\n        //     0x15, // stream_type\n        //     0x00, 0x00, 0x00, // buffer_size\n        //     0x00, 0x00, 0x00, 0x00, // maxBitrate\n        //     0x00, 0x00, 0x00, 0x00, // avgBitrate\n        //\n        //     0x05 // descriptor_type\n        // ].concat([configlen]).concat(track.config).concat([0x06, 0x01, 0x02])); // GASpecificConfig)); // length + audio config descriptor\n        return data;\n    }\n\n    static mp4a(track) {\n        var audiosamplerate = track.audiosamplerate;\n        return MP4.box(MP4.types.mp4a, new Uint8Array([\n            0x00, 0x00, 0x00, // reserved\n            0x00, 0x00, 0x00, // reserved\n            0x00, 0x01, // data_reference_index\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00, // reserved\n            0x00, track.channelCount, // channelcount\n            0x00, 0x10, // sampleSize:16bits\n            0x00, 0x00, // pre_defined\n            0x00, 0x00, // reserved2\n            (audiosamplerate >> 8) & 0xFF,\n            audiosamplerate & 0xff, //\n            0x00, 0x00]),\n        MP4.box(MP4.types.esds, MP4.esds(track)));\n    }\n\n    static stsd(track) {\n        if (track.type === 'audio') {\n            return MP4.box(MP4.types.stsd, MP4.STSD, MP4.mp4a(track));\n        } else {\n            return MP4.box(MP4.types.stsd, MP4.STSD, MP4.avc1(track));\n        }\n    }\n\n    static tkhd(track) {\n        var id = track.id,\n            duration = track.duration,\n            width = track.width,\n            height = track.height,\n            volume = track.volume;\n        return MP4.box(MP4.types.tkhd, new Uint8Array([\n            0x00, // version 0\n            0x00, 0x00, 0x07, // flags\n            0x00, 0x00, 0x00, 0x00, // creation_time\n            0x00, 0x00, 0x00, 0x00, // modification_time\n            (id >> 24) & 0xFF,\n            (id >> 16) & 0xFF,\n            (id >> 8) & 0xFF,\n            id & 0xFF, // track_ID\n            0x00, 0x00, 0x00, 0x00, // reserved\n            (duration >> 24),\n            (duration >> 16) & 0xFF,\n            (duration >> 8) & 0xFF,\n            duration & 0xFF, // duration\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00, // reserved\n            0x00, 0x00, // layer\n            0x00, 0x00, // alternate_group\n            (volume >> 0) & 0xff, (((volume % 1) * 10) >> 0) & 0xff, // track volume // FIXME\n            0x00, 0x00, // reserved\n            0x00, 0x01, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x01, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00,\n            0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n            (width >> 8) & 0xFF,\n            width & 0xFF,\n            0x00, 0x00, // width\n            (height >> 8) & 0xFF,\n            height & 0xFF,\n            0x00, 0x00, // height\n        ]));\n    }\n\n    static traf(track, baseMediaDecodeTime) {\n        var sampleDependencyTable = MP4.sdtp(track),\n            id = track.id;\n        return MP4.box(MP4.types.traf,\n            MP4.box(MP4.types.tfhd, new Uint8Array([\n                0x00, // version 0\n                0x00, 0x00, 0x00, // flags\n                (id >> 24),\n                (id >> 16) & 0XFF,\n                (id >> 8) & 0XFF,\n                (id & 0xFF), // track_ID\n            ])),\n            MP4.box(MP4.types.tfdt, new Uint8Array([\n                0x00, // version 0\n                0x00, 0x00, 0x00, // flags\n                (baseMediaDecodeTime >> 24),\n                (baseMediaDecodeTime >> 16) & 0XFF,\n                (baseMediaDecodeTime >> 8) & 0XFF,\n                (baseMediaDecodeTime & 0xFF), // baseMediaDecodeTime\n            ])),\n            MP4.trun(track,\n                sampleDependencyTable.length +\n                16 + // tfhd\n                16 + // tfdt\n                8 +  // traf header\n                16 + // mfhd\n                8 +  // moof header\n                8),  // mdat header\n            sampleDependencyTable);\n    }\n\n    /**\n     * Generate a track box.\n     * @param track {object} a track definition\n     * @return {Uint8Array} the track box\n     */\n    static trak(track) {\n        track.duration = track.duration || 0xffffffff;\n        return MP4.box(MP4.types.trak, MP4.tkhd(track), MP4.mdia(track));\n    }\n\n    static trex(track) {\n        var id = track.id;\n        return MP4.box(MP4.types.trex, new Uint8Array([\n            0x00, // version 0\n            0x00, 0x00, 0x00, // flags\n            (id >> 24),\n            (id >> 16) & 0XFF,\n            (id >> 8) & 0XFF,\n            (id & 0xFF), // track_ID\n            0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n            0x00, 0x00, 0x00, 0x00, // default_sample_duration\n            0x00, 0x00, 0x00, 0x00, // default_sample_size\n            0x00, 0x01, 0x00, 0x01, // default_sample_flags\n        ]));\n    }\n\n    static trun(track, offset) {\n        var samples = track.samples || [],\n            len = samples.length,\n            arraylen = 12 + (16 * len),\n            array = new Uint8Array(arraylen),\n            i,\n            sample,\n            duration,\n            size,\n            flags,\n            cts;\n        offset += 8 + arraylen;\n        array.set([\n            0x00, // version 0\n            0x00, 0x0f, 0x01, // flags\n            (len >>> 24) & 0xFF,\n            (len >>> 16) & 0xFF,\n            (len >>> 8) & 0xFF,\n            len & 0xFF, // sample_count\n            (offset >>> 24) & 0xFF,\n            (offset >>> 16) & 0xFF,\n            (offset >>> 8) & 0xFF,\n            offset & 0xFF, // data_offset\n        ], 0);\n        for (i = 0; i < len; i++) {\n            sample = samples[i];\n            duration = sample.duration;\n            size = sample.size;\n            flags = sample.flags;\n            cts = sample.cts;\n            array.set([\n                (duration >>> 24) & 0xFF,\n                (duration >>> 16) & 0xFF,\n                (duration >>> 8) & 0xFF,\n                duration & 0xFF, // sample_duration\n                (size >>> 24) & 0xFF,\n                (size >>> 16) & 0xFF,\n                (size >>> 8) & 0xFF,\n                size & 0xFF, // sample_size\n                (flags.isLeading << 2) | flags.dependsOn,\n                (flags.isDependedOn << 6) |\n                (flags.hasRedundancy << 4) |\n                (flags.paddingValue << 1) |\n                flags.isNonSync,\n                flags.degradPrio & 0xF0 << 8,\n                flags.degradPrio & 0x0F, // sample_flags\n                (cts >>> 24) & 0xFF,\n                (cts >>> 16) & 0xFF,\n                (cts >>> 8) & 0xFF,\n                cts & 0xFF, // sample_composition_time_offset\n            ], 12 + 16 * i);\n        }\n        return MP4.box(MP4.types.trun, array);\n    }\n\n    static initSegment(tracks, duration, timescale) {\n        if (!MP4.types) {\n            MP4.init();\n        }\n        var movie = MP4.moov(tracks, duration, timescale),\n            result;\n        result = new Uint8Array(MP4.FTYP.byteLength + movie.byteLength);\n        result.set(MP4.FTYP);\n        result.set(movie, MP4.FTYP.byteLength);\n        return result;\n    }\n}\n\n\n//# sourceURL=webpack://BoncH5Player/./src/util/mp4-generator.js?");

/***/ }),

/***/ "./src/util/nalu.js":
/*!**************************!*\
  !*** ./src/util/nalu.js ***!
  \**************************/
/*! exports provided: NALU */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NALU\", function() { return NALU; });\nclass NALU {\n\n    static get NDR() { return 1; }\n    static get IDR() { return 5; }\n    static get SEI() { return 6; }\n    static get SPS() { return 7; }\n    static get PPS() { return 8; }\n    static get AUD() { return 9; }\n\n    static get TYPES() {\n        return {\n            [NALU.IDR]: 'IDR',\n            [NALU.SEI]: 'SEI',\n            [NALU.SPS]: 'SPS',\n            [NALU.PPS]: 'PPS',\n            [NALU.NDR]: 'NDR',\n            [NALU.AUD]: 'AUD',\n        };\n    }\n\n    static type(nalu) {\n        if (nalu.ntype in NALU.TYPES) {\n            return NALU.TYPES[nalu.ntype];\n        } else {\n            return 'UNKNOWN';\n        }\n    }\n\n    constructor(data) {\n        this.payload = data;\n        this.nri = (this.payload[0] & 0x60) >> 5;\n        this.ntype = this.payload[0] & 0x1f;\n    }\n\n    toString() {\n        return `${NALU.type(this)}: NRI: ${this.getNri()}`;\n    }\n\n    getNri() {\n        return this.nri >> 6;\n    }\n\n    type() {\n        return this.ntype;\n    }\n\n    isKeyframe() {\n        return this.ntype == NALU.IDR;\n    }\n\n    getSize() {\n        return 4 + this.payload.byteLength;\n    }\n\n    getData() {\n        const result = new Uint8Array(this.getSize());\n        const view = new DataView(result.buffer);\n        view.setUint32(0, this.getSize() - 4);\n\n        result.set(this.payload, 4);\n        return result;\n    }\n}\n\n\n//# sourceURL=webpack://BoncH5Player/./src/util/nalu.js?");

/***/ }),

/***/ "./src/util/orderList.js":
/*!*******************************!*\
  !*** ./src/util/orderList.js ***!
  \*******************************/
/*! exports provided: xmlHeartBody, xmlPlayBody, xmlHeader, xmlCloseBody, xmlPlayBackSearch, xmlPlayRecord, xmlPlayStartRecord, xmlPlayControl, xmlPlayReverse */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"xmlHeartBody\", function() { return xmlHeartBody; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"xmlPlayBody\", function() { return xmlPlayBody; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"xmlHeader\", function() { return xmlHeader; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"xmlCloseBody\", function() { return xmlCloseBody; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"xmlPlayBackSearch\", function() { return xmlPlayBackSearch; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"xmlPlayRecord\", function() { return xmlPlayRecord; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"xmlPlayStartRecord\", function() { return xmlPlayStartRecord; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"xmlPlayControl\", function() { return xmlPlayControl; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"xmlPlayReverse\", function() { return xmlPlayReverse; });\n//这里存储的 指令模板\n//所有服务端websocket接收的指令都在这里\n\n//心跳保活\nconst xmlHeartBody ='<Response>\\n' +\n'<CmdType>Keepalive</CmdType>\\n' +\n'</Response>';\n\n//播放指定摄像头的视频\nconst xmlPlayBody = '<Notify>\\n' +\n'<CmdType>Play</CmdType>\\n' +\n'<DeviceType>1101</DeviceType>\\n' +\n'<StreamServerIP>0</StreamServerIP>\\n' +\n'<StreamServerPort>0</StreamServerPort>\\n' +\n'<DeviceIP>0</DeviceIP>\\n' +\n'<DevicePort>0</DevicePort>\\n' +\n'<UserName>0</UserName>\\n' +\n'<PassWord>0</PassWord>\\n' +\n'<ChannelNum>0</ChannelNum>\\n' +\n'<StreamNum>0</StreamNum>\\n' +\n'<CMSIP>172.16.17.165</CMSIP>\\n' +\n// '<ShowOSDCmd>000</ShowOSDCmd >\\n ' +\n'<CMSPort>9125</CMSPort>\\n' +\n'<ChannelID>422485cf2bfd4565b308af34c960c0f4-0000</ChannelID>\\n' +\n'</Notify>';\n\n//协议的xml头\nconst xmlHeader ='<?xml version=\"1.0\"?>';\n\nconst xmlCloseBody = '<Notify>\\n'+\n'<CmdType>Bye</CmdType>\\n'+\n'</Notify>'\n\nconst xmlPlayBackSearch='<Query>\\n' +\n'<CmdType>RecordInfo</CmdType>\\n' +\n'<ChannelID>2744ccdb454d4c32aeb4e7cad4c89e85-0000</ChannelID>\\n' +\n'<StartTime>1586336337</StartTime>\\n' +\n'<EndTime>1586339937</EndTime>\\n' +\n'<Type>1</Type>\\n' +\n'<StreamServerIP>172.16.17.165</StreamServerIP>\\n' +\n'<StreamServerPort>10090</StreamServerPort>\\n' +\n'</Query>';\n\nconst xmlPlayRecord = `<Notify>\n<CmdType>Playback</CmdType>\n<ChannelID>58883ed957f94b88af444f2daff06ece-0000</ChannelID>\n<StartTime>1591653301</StartTime>\n<EndTime>1591680695</EndTime>\n<Speed>1</Speed>\n</Notify>`\n\nconst xmlPlayStartRecord = `<Notify>\n<CmdType>Playback</CmdType>\n<ChannelID>58883ed957f94b88af444f2daff06ece-0000</ChannelID>\n<StartTime>1591653301</StartTime>\n<Speed>1</Speed>\n</Notify>`\n\nconst xmlPlayControl = `<Notify>\n<CmdType>Info</CmdType>\n<Speed>0</Speed>\n<StartTime>1591653301</StartTime>\n</Notify>`\n\nconst xmlPlayReverse = `<Notify>\n<CmdType>ReversePlay</CmdType>\n<StartTime>0</StartTime>\n\n<Speed>2</Speed>  \n</Notify>`\n\n{/* <EndTime>0</EndTime> */}\n\n//# sourceURL=webpack://BoncH5Player/./src/util/orderList.js?");

/***/ }),

/***/ "./src/util/securityIDList.js":
/*!************************************!*\
  !*** ./src/util/securityIDList.js ***!
  \************************************/
/*! exports provided: CSecurityVideoDetectTask */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CSecurityVideoDetectTask\", function() { return CSecurityVideoDetectTask; });\nvar DetectStart_Id = 0x0000; //检测开始 检测开始0\nvar VideoLost_Id = 0x0001; //视频丢失 视频状态1\nvar VideoEnvelop_Id = 0x0002; //视频遮挡 视频状态2\nvar CameraMoved_Id = 0x0003; //视频移动 视频状态3\nvar VideoIllegibility_Id = 0x0004; //视频模糊 视频状态4\nvar VideoAbnormity_Id = 0x0005; //视频异常 视频状态5\n\nvar EnterRegion_Id = 0x0006; //进入禁区 禁区检测6\nvar LeaveRegion_Id = 0x0007; //离开禁区 禁区检测7\nvar RegionAppear_Id = 0x0008; //禁区出现 禁区检测8\nvar RegionDisappear_Id = 0x0009; //禁区消失 禁区检测9\n\nvar CrossLine_Id = 0x000a; //跨越拌线 越线报警10\nvar CountExceed_Id = 0x000b; //多人报警 流量计数11\nvar CountLack_Id = 0x000c; //少人报警 流量计数12\n\nvar OilLeak_Id = 0x000d; //漏油报警 漏油检测13\nvar CarryOver_Id = 0x000e; //物品遗留 物品遗留14\nvar TakeOver_Id = 0x000f; //物品移走 物品移走15\nvar NoParking_Id = 0x0010; //非法停车 停止检测16\n\nvar Density_Id = 0x0011; //密度超标 区域密度17\nvar IrruptInto_Id = 0x0012; //突然聚集 区域密度18\nvar BreakAway_Id = 0x0013; //突然发散 区域密度19\n\nvar SmokeAlarm_Id = 0x0014; //烟雾报警 烟雾检测20\nvar FireAlarm_Id = 0x0015; //火焰报警 火焰报警21\nvar SparkAlarm_Id = 0x0016; //火花报警 火花检测22\n\nvar SlipDown_Id = 0x0017; //跌倒报警 异常目标23\nvar Wander_Id =  0x0018; //徘徊报警 徘徊检测24\nvar MissOut_Id = 0x0019; //脱离岗位 脱岗检测25\n\nvar Reverse_Id = 0x001a; //逆行报警 逆行检测26\n//private static const SpeedUp_Id \t\t\t0x001b\t\t\t\t\t//突然加速 奔跑追逐27\nvar Chase_Id = 0x001c; //人员追逐 奔跑追逐28\nvar Runnning_Id = 0x001d; //快速奔跑 奔跑追逐29\n\n//--------------------------------------------------------------------\nvar RegionEnter_Id = 0x001e; //边界进入 禁区检测30\nvar RegionLeave_Id = 0x001f; //边界离开 禁区检测31\nvar PeopleExist_Id = 0x0020; //有人状态 目标状态32\nvar Fight_Id = 0x0021; //打架报警 打架检测33\nvar PTZTracking_Id = 0x0022; //PTZ跟踪  PTZ检测 34\nvar PTZLinkage_Id = 0x0023; //PTZ联动  PTZ检测 35\nvar PeopleFollow_Id = 0x0024; //人员尾随 人员尾随36\nvar Through_Id = 0x0025; //穿越报警 穿越检测37\nvar ATarget_Id = 0x0026; //目标异常 异常目标38\nvar Stop_Id = 0x0027; //目标停止 停止检测39\nvar EHeight_Id = 0x0028; //超高报警 超高检测40\nvar NumberAbnormal_Id = 0x0029; //人数异常 人数异常41\nvar FluxCount_Id = 0x002a; //流量计数 流量计数42\nvar Scroll_Id =  0x002b; //悬挂条幅 悬挂条幅43\nvar Post_Id = 0x002c; //张贴涂鸦 张贴涂鸦44\nvar PepoleGather_Id = 0x002d; //人群聚集 人群聚集45\nvar ElevatorStop_Id = 0x002e; //电梯停止 电梯检测46\nvar ElevatorReverse_Id = 0x002f; //电梯逆行 电梯检测47\nvar FaceRecognition_Id = 0x0030; //人脸识别 人脸识别48\nvar FaceOcclusion_Id = 0x0031; //人脸遮挡 人脸遮挡49\nvar FaceCapture_Id = 0x0032; //人脸抓拍 人脸遮挡50\nvar ECarCount_Id = 0x0033; //车流统计51\nvar Congestion_Id = 0x0034; //拥堵检测52\nvar AbnormalParking_Id = 0x0035; //异常停车53\nvar CarRetrograde_Id = 0x0036; //车辆逆行54\nvar HumanInto_Id = 0x0037; //行人闯入55\nvar CarSpill_Id = 0x0038; //车辆遗洒56\nvar CarSpeeding_Id = 0x0039; //车辆超速57\nvar CarSlow_Id = 0x003a; //车辆缓慢58\nvar LandSlides_Id = 0x003b; //山体滑坡59\nvar CarIllegalPark_Id = 0x003c; //非法停车60\n\nfunction CSecurityVideoDetectTask(iEventtype) {\n    var strText = void 0;\n    switch (iEventtype) {\n        case VideoLost_Id:\n          strText = \"视频丢失\";break;\n        case VideoEnvelop_Id:\n          strText = \"视频遮挡\";break;\n        case CameraMoved_Id:\n          strText = \"视频移动\";break;\n        case VideoIllegibility_Id:\n          strText = \"视频模糊\";break;\n        case VideoAbnormity_Id:\n          strText = \"视频异常\";break;\n        case EnterRegion_Id:\n          strText = \"进入禁区\";break;\n        case LeaveRegion_Id:\n          strText = \"离开禁区\";break;\n        case RegionAppear_Id:\n          strText = \"禁区出现\";break;\n        case RegionDisappear_Id:\n          strText = \"禁区消失\";break;\n        case CrossLine_Id:\n          strText = \"跨越拌线\";break;\n        case CountExceed_Id:\n          strText = \"多人报警\";break;\n        case CountLack_Id:\n          strText = \"少人报警\";break;\n        case OilLeak_Id:\n          strText = \"漏油报警\";break;\n        case CarryOver_Id:\n          strText = \"物品遗留\";break;\n        case TakeOver_Id:\n          strText = \"物品移走\";break;\n        case NoParking_Id:\n          strText = \"非法停车\";break;\n        case Density_Id:\n          strText = \"密度超标\";break;\n        case IrruptInto_Id:\n          strText = \"突然聚集\";break;\n        case BreakAway_Id:\n          strText = \"突然发散\";break;\n        case SmokeAlarm_Id:\n          strText = \"烟雾报警\";break;\n        case FireAlarm_Id:\n          strText = \"火焰报警\";break;\n        case SparkAlarm_Id:\n          strText = \"火花报警\";break;\n        case SlipDown_Id:\n          strText = \"跌倒报警\";break;\n        case Wander_Id:\n          strText = \"徘徊滞留\";break;\n        case MissOut_Id:\n          strText = \"脱岗报警\";break;\n        case Reverse_Id:\n          strText = \"逆行报警\";break;\n        case SpeedUp_Id:\n          strText = \"突然加速\";break;\n        case SpeedDown_Id:\n          strText = \"突然减速\";break;\n        case Chase_Id:\n          strText = \"人员追逐\";break;\n        case RegionEnter_Id:\n          strText = \"边界进入\";break;\n        case RegionLeave_Id:\n          strText = \"边界离开\";break;\n        case PeopleExist_Id:\n          strText = \"有人状态\";break;\n        case Fight_Id:\n          strText = \"打架报警\";break;\n        case PTZTracking_Id:\n          strText = \"PTZ跟踪\";break;\n        case PTZLinkage_Id:\n          strText = \"PTZ联动\";break;\n        case PeopleFollow_Id:\n          strText = \"人员尾随\";break;\n        case Through_Id:\n          strText = \"穿越报警\";break;\n        case ATarget_Id:\n          strText = \"目标异常\";break;\n        case Stop_Id:\n          strText = \"目标停止\";break;\n        case EHeight_Id:\n          strText = \"超高报警\";break;\n        case NumberAbnormal_Id:\n          strText = \"人数异常\";break;\n        case FluxCount_Id:\n          strText = \"流量计数\";break;\n        case Scroll_Id:\n          strText = \"悬挂条幅\";break;\n        case Post_Id:\n          strText = \"张贴涂鸦\";break;\n        case PepoleGather_Id:\n          strText = \"人群聚集\";break;\n        case ElevatorStop_Id:\n          strText = \"电梯停止\";break;\n        case ElevatorReverse_Id:\n          strText = \"电梯逆行\";break;\n        case FaceRecognition_Id:\n          strText = \"人脸识别\";break;\n        case FaceOcclusion_Id:\n          strText = \"人脸遮挡\";break;\n        case FaceCapture_Id:\n          strText = \"人脸抓拍\";break;\n        case ECarCount_Id:\n          strText = \"车流统计\";break;\n        case Congestion_Id:\n          strText = \"拥堵检测\";break;\n        case AbnormalParking_Id:\n          strText = \"异常停车\";break;\n        case CarRetrograde_Id:\n          strText = \"车辆逆行\";break;\n        case HumanInto_Id:\n          strText = \"行人闯入\";break;\n        case CarSpill_Id:\n          strText = \"车辆遗洒\";break;\n        case CarSpeeding_Id:\n          strText = \"车辆超速\";break;\n        case CarSlow_Id:\n          strText = \"车辆缓慢\";break;\n        case LandSlides_Id:\n          strText = \"山体滑坡\";break;\n        case CarIllegalPark_Id:\n          strText = \"非法停车\";break;\n        case CameraShake_Id:\n          strText = \"视频抖动\";break;\n        case FaceToCamera_Id:\n          strText = \"面向镜头\";break;\n        default:\n          break;\n    }\n    return strText;\n}\n\n//# sourceURL=webpack://BoncH5Player/./src/util/securityIDList.js?");

/***/ }),

/***/ "./src/util/utils.js":
/*!***************************!*\
  !*** ./src/util/utils.js ***!
  \***************************/
/*! exports provided: appendByteArray, secToTime, BLoadXML, Xml2String, ByteLengthOf, MergeBuffer, fullScreen, exitFullscreen, getChannelInfo, throttle */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"appendByteArray\", function() { return appendByteArray; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"secToTime\", function() { return secToTime; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BLoadXML\", function() { return BLoadXML; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Xml2String\", function() { return Xml2String; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ByteLengthOf\", function() { return ByteLengthOf; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MergeBuffer\", function() { return MergeBuffer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fullScreen\", function() { return fullScreen; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"exitFullscreen\", function() { return exitFullscreen; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getChannelInfo\", function() { return getChannelInfo; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"throttle\", function() { return throttle; });\nfunction appendByteArray(buffer1, buffer2)\n{\n    let tmp = new Uint8Array((buffer1.byteLength|0) + (buffer2.byteLength|0));\n    tmp.set(buffer1, 0);\n    tmp.set(buffer2, buffer1.byteLength|0);\n    return tmp;\n}\n\n/**\n秒转时分秒\n */\nfunction secToTime(sec) {\n    let seconds,\n        hours,\n        minutes,\n        result = '';\n\n    seconds = Math.floor(sec);\n    hours = parseInt(seconds / 3600, 10) % 24;\n    minutes = parseInt(seconds / 60, 10) % 60;\n    seconds = (seconds < 0) ? 0 : seconds % 60;\n\n    if (hours > 0) {\n        result += (hours < 10 ? '0' + hours : hours) + ':';\n    }\n    result += (minutes < 10 ? '0' + minutes : minutes) + ':' + (seconds < 10 ? '0' + seconds : seconds);\n    return result;\n}\n\n//xml字符串转成dom对象\nfunction BLoadXML(xmlString){\n    var xmlDoc=null;\n    var domParser = new DOMParser();\n    xmlDoc = domParser.parseFromString(xmlString, 'text/xml');\n    return xmlDoc;\n}\n\n\n\n\n/**\n * xml dom 对象转成字符串\n * @param {object} xmlObject \n */\nfunction Xml2String(xmlObject)\n{\n    if (window.ActiveXObject)\n    { // for IE\n        return xmlObject.xml;\n    }\n    else\n    {\n        return (new XMLSerializer()).serializeToString(xmlObject);\n    }\n}\n\nfunction ByteLengthOf(s)\n{\n    //assuming the String is UCS-2(aka UTF-16) encoded\n    var n=0;\n    for(var i=0,l=s.length; i<l; i++){\n        var hi=s.charCodeAt(i);\n        if(hi<0x0080){ //[0x0000, 0x007F]\n            n+=1;\n        }else if(hi<0x0800){ //[0x0080, 0x07FF]\n            n+=2;\n        }else if(hi<0xD800){ //[0x0800, 0xD7FF]\n            n+=3;\n        }else if(hi<0xDC00){ //[0xD800, 0xDBFF]\n            var lo=s.charCodeAt(++i);\n            if(i<l&&lo>=0xDC00&&lo<=0xDFFF){ //followed by [0xDC00, 0xDFFF]\n                n+=4;\n            }else{\n                throw new Error('UCS-2 String malformed');\n            }\n        }else if(hi<0xE000){ //[0xDC00, 0xDFFF]\n            throw new Error('UCS-2 String malformed');\n        }else{ //[0xE000, 0xFFFF]\n            n+=3;\n        }\n    }\n    return n;\n}\n\n/**\n * 合并多个 ArrayBuffer\n * 参数为 ArrayBuffer1,ArrayBuffer2 .....\n */\nfunction MergeBuffer(whole,arr1,arr2){\n    var sumLength = 0;\n    for(var key in arguments){\n        sumLength += arguments[key].byteLength;\n    }\n    var whole = new Uint8Array(sumLength);\n    var pos = 0;\n    for(var key in arguments){\n        // for(var d = 0; d < arguments[key].byteLength; ++d){\n        //     whole.set(new Uint8Array(arguments[key]),pos);\n        //     pos += arguments[key].byteLength;\n        // }\n        whole.set(new Uint8Array(arguments[key]),pos);\n        pos += arguments[key].byteLength;\n    }\n    \n    return whole.buffer;\n}\n\n\n\n\n\nfunction fullScreen(element) {\n    if (element.requestFullscreen) {\n      element.requestFullscreen();\n    } else if (element.msRequestFullscreen) {\n      element.msRequestFullscreen();\n    } else if (element.mozRequestFullScreen) {\n      element.mozRequestFullScreen();\n    } else if (element.webkitRequestFullscreen) {\n      element.webkitRequestFullscreen();\n    }\n  }\n  \n  // 退出全屏\n  function exitFullscreen() {\n    if (document.exitFullscreen) {\n      document.exitFullscreen();\n    } else if (document.msExitFullscreen) {\n      document.msExitFullscreen();\n    } else if (document.mozCancelFullScreen) {\n      document.mozCancelFullScreen();\n    } else if (document.webkitExitFullscreen) {\n      document.webkitExitFullscreen();\n    }\n  }\n\n  function getChannelInfo(centerURL,channelId,callback){\n    var url = centerURL\n    var formData = new FormData();\n    var channelidstr = channelId\n    //var channelidstr ='7f1b60313a764bd1a6c5dd38114c532c-0000'\n    formData.append('channelId',channelidstr);\n    fetch(url, {\n        method: 'POST',\n        body: formData\n    })\n    .then(function(response)\n    {\n        return  response.json();\n    })\n    .then((jsonbonc)=> {        \n        if(!jsonbonc.StreamServerIP){\n          throw new Error('错误')\n        }        \n        this.jsonbonc=jsonbonc;\n        if(callback){\n            callback(jsonbonc);\n        }\n        \n    }).catch((e)=>{\n        console.error(e,'服务器错误')\n    });\n  }\n\n\n/**\n * @desc 函数节流\n * @param func 函数\n * @param wait 延迟执行毫秒数\n * @param type 1 表时间戳版，2 表定时器版\n */\nfunction throttle(func, wait ,type) {\n    if(type===1){\n        var previous = 0;\n    }else if(type===2){\n        var timeout;\n    }\n    return function() {\n        let context = this;\n        let args = arguments;\n        if(type===1){\n            let now = Date.now();\n            if (now - previous > wait) {\n                func.apply(context, args);\n                previous = now;\n            }\n        }else if(type===2){\n            if (!timeout) {\n                timeout = setTimeout(() => {\n                    timeout = null;\n                    func.apply(context, args)\n                }, wait)\n            }\n        }\n    }\n}\n\n\n//# sourceURL=webpack://BoncH5Player/./src/util/utils.js?");

/***/ }),

/***/ "./src/util/viladate.js":
/*!******************************!*\
  !*** ./src/util/viladate.js ***!
  \******************************/
/*! exports provided: validateConfigs, validateChannelInfo */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"validateConfigs\", function() { return validateConfigs; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"validateChannelInfo\", function() { return validateChannelInfo; });\n//对于传进来的configs中的各个值进行校验\n\nfunction validateConfigs(configs) {\n\n    const { videoId } = configs\n    if (!videoId || typeof videoId !== 'string') {\n        throw new Error(\"videoId配置出错\");\n    } else {\n        this.node = document.getElementById(videoId);\n        window.videoNode = this.node;\n        if(!this.node){\n            throw new Error('没有找到对应的video标签');\n        }\n        this.node.muted = true\n    }\n\n}\n\nfunction validateChannelInfo(info) {\n    return true;\n}\n\n//# sourceURL=webpack://BoncH5Player/./src/util/viladate.js?");

/***/ })

/******/ });
});